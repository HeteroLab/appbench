cscope 15 $HOME/ssd/schedsp/apps/apps/shared_libs/hoardlib               0000463157
	@Heap-Layers/examples/kingsley/libkingsley.cpp

33 
	~<°dlib.h
>

35 vﬁ©ûê
	g™yThªadCª©ed
 = 1;

37 
	~"hó∂ayîs.h
"

40 
usög
 
«me•a˚
 
	gHL
;

42 
˛ass
 
	gT›Hóp
 : 
public
 
SizeHóp
<
UniqueHóp
<
Z⁄eHóp
<
Mm≠Hóp
, 65536> > > {};

44 
˛ass
 
	gTheCu°omHópTy≥
 :

45 
public
 
ANSIWøµî
<
Kög¶eyHóp
<
Ad≠tHóp
<
DLLi°
, 
	gT›Hóp
>, TopHeap> > {};

47 
ölöe
 
TheCu°omHópTy≥
 * 
	$gëCu°omHóp
 () {

48 
thBuf
[(
TheCu°omHópTy≥
)];

49 
TheCu°omHópTy≥
 * 
th
 = 
	`√w
 (
thBuf
) TheCustomHeapType;

50  
th
;

51 
	}
}

53 #i‡
deföed
(
_WIN32
)

54 #¥agm®
w¨nög
(
dißbÀ
:4273)

	@Heap-Layers/heaplayers.h

38 #i‚de‡
HL_HEAPLAYERS_H


39 
	#HL_HEAPLAYERS_H


	)

41 
	~<as£π.h
>

43 
«me•a˚
 
	gHL
 {}

48 
	#HL_EXECUTABLE_HEAP
 1

	)

50 #i‡
deföed
(
_MSC_VER
)

53 #¥agm®
ölöe_dïth
(255)

54 
	#INLINE
 
__f‹˚ölöe


	)

56 
	#NO_INLINE
 
	`__de˛•ec
(
noölöe
)

	)

57 #¥agm®
w¨nög
(
dißbÀ
: 4530)

58 
	#MALLOC_FUNCTION


	)

59 
	#RESTRICT


	)

61 #ñi‡
deföed
(
__GNUC__
)

65 
	#NO_INLINE
 
	`__©åibuã__
 ((
noölöe
))

	)

66 
	#INLINE
 
ölöe


	)

67 
	#MALLOC_FUNCTION
 
	`__©åibuã__
((
mÆloc
))

	)

68 
	#RESTRICT
 
__ª°ri˘__


	)

74 
	#NO_INLINE


	)

75 
	#INLINE
 
ölöe


	)

76 
	#MALLOC_FUNCTION


	)

77 
	#RESTRICT


	)

94 #i‚de‡
ALLOCATION_STATS


95 
	#ALLOCATION_STATS
 0

	)

98 #ifde‡
_MSC_VER


101 #¥agm®
w¨nög
–
push
 )

102 #¥agm®
w¨nög
–
dißbÀ
:4786 4512 )

105 
	~"utûôy/Æl.h
"

106 
	~"hóps/Æl.h
"

107 
	~"locks/Æl.h
"

108 
	~"thªads/Æl.h
"

109 
	~"wøµîs/Æl.h
"

111 #ifde‡
_MSC_VER


112 #¥agm®
w¨nög
–
p›
 )

	@Heap-Layers/heaps/all.h

1 
	~"buûdögblock/Æl.h
"

2 
	~"debug/Æl.h
"

3 
	~"obje˘ªp/Æl.h
"

4 
	~"thªads/Æl.h
"

5 
	~"utûôy/Æl.h
"

6 
	~"comböög/Æl.h
"

7 
	~"gíîÆ/Æl.h
"

8 
	~"t›/Æl.h
"

9 
	~"•ecül/Æl.h
"

	@Heap-Layers/heaps/buildingblock/adaptheap.h

28 #i‚de‡
HL_ADAPTHEAP_H


29 
	#HL_ADAPTHEAP_H


	)

31 
	~<as£π.h
>

32 
	~<°dlib.h
>

40 
«me•a˚
 
	gHL
 {

42 
	gãm∂©e
 <
˛ass
 
	gDi˘i⁄¨y
, cœs†
	gSu≥rHóp
>

43 ˛as†
	cAd≠tHóp
 : 
public
 
Su≥rHóp
 {

44 
public
:

46 íum { 
Alignmít
 = 
Su≥rHóp
::Alignment };

49 
ölöe
 * 
mÆloc
 (c⁄° 
size_t
) {

50 * 
	g±r
 = (
E¡ry
 *Ë
di˘
.
gë
();

51 i‡(
	g±r
) {

52 
as£π
 (
Su≥rHóp
::
gëSize
(
±r
Ë>(
di˘
));

54  
	g±r
;

58 
ölöe
 
‰ì
 (* 
±r
) {

59 i‡(
	g±r
) {

60 
as£π
 (
Su≥rHóp
::
gëSize
(
±r
Ë>(
di˘
));

61 
E¡ry
 * 
	gíåy
 = (E¡ry *Ë
±r
;

62 
	gdi˘
.
ö£π
 (
íåy
);

67 
ölöe
 
ªmove
 (* 
±r
) {

68 i‡(
	g±r
) {

69 
as£π
 (
Su≥rHóp
::
gëSize
(
±r
Ë>(
di˘
));

70 
	gdi˘
.
ªmove
 ((
E¡ry
 *Ë
±r
);

76 
ölöe
 
˛ór
 () {

77 
E¡ry
 * 
	g±r
;

78 (
	g±r
 = (
E¡ry
 *Ë
di˘
.
gë
()Ë!
NULL
) {

79 
Su≥rHóp
::
‰ì
 (
±r
);

81 
	gdi˘
.
˛ór
();

82 
	gSu≥rHóp
::
˛ór
();

86 
	g¥iv©e
:

89 
Di˘i⁄¨y
 
di˘
;

91 ˛as†
	cE¡ry
 : 
public
 
Di˘i⁄¨y
::
E¡ry
 {};

	@Heap-Layers/heaps/buildingblock/all.h

1 
	~"ad≠thóp.h
"

2 
	~"bounded‰ìli°hóp.h
"

3 
	~"chunkhóp.h
"

4 
	~"cﬂÀs˚hóp.h
"

5 
	~"‰ìli°hóp.h
"

	@Heap-Layers/heaps/buildingblock/boundedfreelistheap.h

3 #i‚de‡
_BOUNDEDFREELISTHEAP_H_


4 
	#_BOUNDEDFREELISTHEAP_H_


	)

8 
	~<c°dlib
>

10 
	gãm∂©e
 <
	gnumObje˘s
, 
˛ass
 
	gSu≥r
>

11 ˛as†
	cBoundedFªeLi°Hóp
 : 
public
 
Su≥r
 {

12 
public
:

14 
	$BoundedFªeLi°Hóp
()

15 : 
	`nObje˘s
 (0),

16 
	$myFªeLi°
 (
NULL
)

19 ~
	$BoundedFªeLi°Hóp
()

21 
	`˛ór
();

22 
	}
}

24 
ölöe
 * 
	$mÆloc
 (
size_t
 
sz
) {

26 * 
±r
 = 
myFªeLi°
;

27 i‡(
±r
 =
NULL
) {

28 
±r
 = 
Su≥r
::
	`mÆloc
 (
sz
);

30 
myFªeLi°
 = myFªeLi°->
√xt
;

32  
±r
;

33 
	}
}

35 
ölöe
 
	$‰ì
 (* 
±r
) {

36 i‡(
nObje˘s
 < 
numObje˘s
) {

38 ((
‰ìObje˘
 *Ë
±r
)->
√xt
 = 
myFªeLi°
;

39 
myFªeLi°
 = (
‰ìObje˘
 *Ë
±r
;

40 
nObje˘s
++;

42 
	`˛ór
();

45 
	}
}

47 
ölöe
 
	$˛ór
 () {

49 * 
±r
 = 
myFªeLi°
;

50 
±r
 !
NULL
) {

51 * 
ﬁd±r
 = 
±r
;

52 
±r
 = (*Ë((
‰ìObje˘
 *Ë±r)->
√xt
;

53 
Su≥r
::
	`‰ì
 (
ﬁd±r
);

55 
myFªeLi°
 = 
NULL
;

56 
nObje˘s
 = 0;

57 
	}
}

59 
	g¥iv©e
:

61 ˛as†
	c‰ìObje˘
 {

62 
public
:

63 
‰ìObje˘
 * 
√xt
;

66 
	gnObje˘s
;

67 
‰ìObje˘
 * 
	gmyFªeLi°
;

	@Heap-Layers/heaps/buildingblock/chunkheap.h

3 #i‚de‡
_CHUNKHEAP_H_


4 
	#_CHUNKHEAP_H_


	)

30 
	~<as£π.h
>

38 
«me•a˚
 
	gHL
 {

40 
	gãm∂©e
 <
	gChunkSize
, 
˛ass
 
	gSu≥rHóp
>

41 ˛as†
	cChunkHóp
 : 
public
 
Su≥rHóp
 {

42 
public
:

44 
ölöe
 
ChunkHóp
 ()

45 : 
buf„r
 (
NULL
),

46 
eob
 (
NULL
)

49 
ölöe
 * 
mÆloc
 (c⁄° 
size_t
 
sz
) {

50 * 
	g±r
 = 
buf„r
;

51 
	gbuf„r
 +
sz
;

52 i‡(
	gbuf„r
 <
eob
) {

53 
as£π
 (
eob
 !
NULL
);

54 
as£π
 ((
size_t
Ë(
eob
 - (*Ë
±r
 + 1Ë>
sz
);

55  
	g±r
;

57 
	gbuf„r
 -
sz
;

58  
gëM‹eMem‹y
(
sz
);

61 
ölöe
 
˛ór
 () {

62 
	gbuf„r
 = 
NULL
;

63 
	geob
 = 
NULL
;

64 
	gSu≥rHóp
::
˛ór
 ();

67 
	g¥iv©e
:

70 
ölöe
 
ªmove
 (*);

72 * 
gëM‹eMem‹y
 (
size_t
 
sz
) {

73 
as£π
 (
sz
 > 0);

75 
size_t
 
	gªqSize
 = (((
sz
-1Ë/ 
ChunkSize
) + 1) * ChunkSize;

76 * 
	gbuf
 = (*Ë
Su≥rHóp
::
mÆloc
 (
ªqSize
);

77 i‡(
	gbuf
 =
NULL
) {

78  
NULL
;

82 i‡(
	geob
 !
buf
) {

83 
buf„r
 = 
buf
;

87 
	gªqSize
 +
eob
 - 
buf„r
;

89 
	geob
 = 
buf„r
 + 
ªqSize
;

91 * 
	g±r
 = 
buf„r
;

92 
	gbuf„r
 +
sz
;

93  
	g±r
;

97 * 
	gbuf„r
;

100 * 
	geob
;

	@Heap-Layers/heaps/buildingblock/coalesceheap.h

3 #i‚de‡
HL_COALESCEHEAP_H


4 
	#HL_COALESCEHEAP_H


	)

30 
	~<as£π.h
>

32 
	~"hó∂ayîs.h
"

41 
«me•a˚
 
	gHL
 {

43 
	gãm∂©e
 <
˛ass
 
	gsu≥r
>

44 ˛as†
	cCﬂÀs˚Hóp
 : 
public
 
su≥r
 {

45 
public
:

47 
ölöe
 * 
mÆloc
 (c⁄° 
size_t
 
sz
)

49 * 
±r
 = 
su≥r
::
mÆloc
 (
sz
);

50 i‡(
	g±r
 !
NULL
) {

51 
su≥r
::
m¨kInU£
 (
±r
);

52 * 
	g•lôPõ˚
 = 
•lô
 (
±r
, 
sz
);

53 i‡(
	g•lôPõ˚
 !
NULL
) {

54 
su≥r
::
m¨kFªe
 (
•lôPõ˚
);

55 
	gsu≥r
::
‰ì
 (
•lôPõ˚
);

58  
	g±r
;

62 
ölöe
 
‰ì
 (* 
±r
)

65 i‡((
	gsu≥r
::
gëNext
(
su≥r
::
gëPªv
(
±r
)) !=Ötr) || (super::getPrev(super::getNext(ptr)) !=Ötr)) {

67 
su≥r
::
‰ì
 (
±r
);

70 
as£π
 (
su≥r
::
gëPªv
(su≥r::
gëNext
(
±r
)) ==Ötr);

72 * 
	g¥ev
 = 
su≥r
::
gëPªv
(
±r
);

73 * 
	g√xt
 = 
su≥r
::
gëNext
 (
±r
);

74 
as£π
 (
¥ev
 !
±r
);

76 i‡(
	gsu≥r
::
isPªvFªe
(
±r
)) {

77 
as£π
 (
su≥r
::
isFªe
(
¥ev
));

78 
	gsu≥r
::
ªmove
 (
¥ev
);

79 
cﬂÀs˚
 (
¥ev
, 
±r
);

80 
	g±r
 = 
¥ev
;

82 i‡(
	gsu≥r
::
isFªe
(
√xt
)) {

83 
su≥r
::
ªmove
 (
√xt
);

84 
cﬂÀs˚
 (
±r
, 
√xt
);

87 
	gsu≥r
::
m¨kFªe
 (
±r
);

90 
	gsu≥r
::
‰ì
 (
±r
);

93 
	g¥iv©e
:

97 
ölöe
 
cﬂÀs˚
 (* 
fú°
, c⁄° * 
£c⁄d
) {

99 
as£π
 (
su≥r
::
gëNext
(
fú°
Ë=
£c⁄d
);

100 
as£π
 (
su≥r
::
gëPªv
(
£c⁄d
Ë=
fú°
);

102 
size_t
 
	g√wSize
 = ((size_tË
£c⁄d
 - (size_tË
fú°
Ë+ 
su≥r
::
gëSize
(second);

103 
	gsu≥r
::
£tSize
 (
fú°
, 
√wSize
);

104 
£tPªvSize
 (
su≥r
::
gëNext
(
fú°
), 
√wSize
);

108 
ölöe
 * 
•lô
 (* 
obj
, c⁄° 
size_t
 
ªque°edSize
) {

109 
as£π
 (
su≥r
::
gëSize
(
obj
Ë>
ªque°edSize
);

111 c⁄° 
size_t
 
	ga˘uÆSize
 = 
su≥r
::
gëSize
(
obj
);

112 i‡(
	ga˘uÆSize
 - 
	gªque°edSize
 >(
ty≥«me
 
su≥r
::
Hódî
) + ()) {

114 
su≥r
::
£tSize
(
obj
, 
ªque°edSize
);

115 * 
	g•lôPõ˚
 = (*Ë
obj
 + 
ªque°edSize
 + (
ty≥«me
 
su≥r
::
Hódî
);

116 
	gsu≥r
::
makeObje˘
 ((*Ë
su≥r
::
gëHódî
(
•lôPõ˚
),

117 
ªque°edSize
,

118 
a˘uÆSize
 - 
ªque°edSize
 - (
ty≥«me
 
su≥r
::
Hódî
));

119 
as£π
 (!
su≥r
::
isFªe
(
•lôPõ˚
));

122 (
	gsu≥r
::
gëHódî
(
•lôPõ˚
))->
m¨kPªvInU£
();

123 
as£π
 (
su≥r
::
gëSize
(
•lôPõ˚
) >= ());

124 
as£π
 (
su≥r
::
gëSize
(
obj
Ë>
ªque°edSize
);

125  
	g•lôPõ˚
;

127  
	gNULL
;

	@Heap-Layers/heaps/buildingblock/freelistheap.h

27 #i‚de‡
HL_FREELISTHEAP_H


28 
	#HL_FREELISTHEAP_H


	)

39 
	~<as£π.h
>

40 
	~"utûôy/‰ì¶li°.h
"

42 #i‚de‡
NULL


43 
	#NULL
 0

	)

46 
«me•a˚
 
	gHL
 {

48 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

49 ˛as†
	cFªñi°Hóp
 : 
public
 
Su≥rHóp
 {

50 
public
:

52 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

54 * 
±r
 = 
_‰ìli°
.
gë
();

57 i‡(
	g±r
 == 0) {

58 
±r
 = 
Su≥rHóp
::
mÆloc
 (
sz
);

60  
	g±r
;

63 
ölöe
 
‰ì
 (* 
±r
) {

64 i‡(
	g±r
 == 0) {

67 
	g_‰ìli°
.
ö£π
 (
±r
);

70 
ölöe
 
˛ór
 () {

71 * 
	g±r
;

72 (
	g±r
 = 
_‰ìli°
.
gë
())) {

73 
Su≥rHóp
::
‰ì
 (
±r
);

77 
	g¥iv©e
:

79 
FªeSLLi°
 
_‰ìli°
;

	@Heap-Layers/heaps/combining/all.h

1 
	~"hybridhóp.h
"

2 
	~"£ghóp.h
"

3 
	~"°ri˘£ghóp.h
"

4 
	~"åyhóp.h
"

	@Heap-Layers/heaps/combining/hybridheap.h

27 #i‚de‡
HL_HYBRIDHEAP_H


28 
	#HL_HYBRIDHEAP_H


	)

30 
	~<as£π.h
>

32 
	~<hó∂ayîs.h
>

40 
«me•a˚
 
	gHL
 {

42 
	gãm∂©e
 <
	gBigSize
, 
˛ass
 
	gSmÆlHóp
, cœs†
	gBigHóp
>

43 ˛as†
	cHybridHóp
 : 
public
 
SmÆlHóp
 {

44 
public
:

46 
HybridHóp
 ()

50 íum { 
Alignmít
 = 
gcd
<(Ë
SmÆlHóp
::Alignmít, (Ë
	gBigHóp
::Alignmít>::
vÆue
 };

52 
MALLOC_FUNCTION
 
INLINE
 * 
mÆloc
 (
size_t
 
sz
) {

53 * 
	g±r
;

54 i‡(
	gsz
 <
BigSize
) {

55 
±r
 = 
SmÆlHóp
::
mÆloc
 (
sz
);

57 
	g±r
 = 
¶owP©h
 (
sz
);

59 
as£π
 (
SmÆlHóp
::
gëSize
(
±r
Ë>
sz
);

60 
as£π
 ((
size_t
Ë
±r
 % 
Alignmít
 == 0);

61  
	g±r
;

64 
ölöe
 
‰ì
 (* 
±r
) {

65 i‡(
	gSmÆlHóp
::
gëSize
(
±r
Ë<
BigSize
) {

66 
SmÆlHóp
::
‰ì
 (
±r
);

68 
	gbm
.
‰ì
 (
±r
);

72 
ölöe
 
˛ór
 () {

73 
	gbm
.
˛ór
();

74 
	gSmÆlHóp
::
˛ór
();

78 
	g¥iv©e
:

80 
MALLOC_FUNCTION
 
NO_INLINE


81 * 
¶owP©h
 (
size_t
 
sz
) {

82  
bm
.
mÆloc
 (
sz
);

86 
	gHL
::
ßs£π
<(
BigSize
 > 0)> 
checkBigSizeN⁄Zîo
;

88 
BigHóp
 
	gbm
;

	@Heap-Layers/heaps/combining/segheap.h

32 #i‚de‡
HL_SEGHEAP_H


33 
	#HL_SEGHEAP_H


	)

59 
	~<as£π.h
>

60 
	~<utûôy/gcd.h
>

62 
«me•a˚
 
	gHL
 {

64 
	gãm∂©e
 <
	gNumBös
,

65 (*
	ggëSizeCœss
Ë(c⁄° 
	gsize_t
),

66 
size_t
 (*
gëCœssMaxSize
) (const ),

67 
˛ass
 
	gLôéeHóp
,

68 
˛ass
 
	gBigHóp
>

69 ˛as†
	cSegHóp
 : 
public
 
LôéeHóp
 {

70 
public
:

72 íum { 
Alignmít
 = 
gcd
<
LôéeHóp
::Alignmít, 
	gBigHóp
::Alignmít>::
VALUE
 };

74 
ölöe
 
SegHóp
()

75 : 
_mem‹yHñd
 (0),

76 
_maxObje˘Size
 (
gëCœssMaxSize
(
NumBös
 - 1))

78 
	gi
 = 0; i < 
	gNUM_ULONGS
; i++) {

79 
	gböm≠
[
i
] = 0;

83 
ölöe
 
size_t
 
gëMem‹yHñd
() const {

84  
	g_mem‹yHñd
;

87 
size_t
 
gëSize
 (* 
±r
) {

88  
	gLôéeHóp
::
gëSize
 (
±r
);

91 
ölöe
 * 
mÆloc
 (c⁄° 
size_t
 
sz
) {

92 * 
	g±r
 = 
NULL
;

93 i‡(
	gsz
 > 
	g_maxObje˘Size
) {

94 
	gGET_MEMORY
;

98 c⁄° 
	gsc
 = 
gëSizeCœss
(
sz
);

99 
as£π
 (
sc
 >= 0);

100 
as£π
 (
sc
 < 
NumBös
);

101 
	gidx
 = 
sc
;

102 
	gblock
 = 
idx2block
 (
idx
);

103 
	gm≠
 = 
böm≠
[
block
];

104 
	gbô
 = 
idx2bô
 (
idx
);

107 i‡(
	gbô
 > 
	gm≠
 || bit == 0) {

109 i‡(++
block
 >
NUM_ULONGS
) {

110 
GET_MEMORY
;

113 }  (
	gm≠
 = 
böm≠
[
block
]) == 0);

115 
	gidx
 = 
block
 << 
SHIFTS_PER_ULONG
;

116 
	gbô
 = 1;

119 (
	gbô
 & 
	gm≠
) == 0) {

120 
bô
 <<= 1;

121 
as£π
(
bô
 != 0);

122 
	gidx
++;

125 
as£π
 (
idx
 < 
NumBös
);

126 
	g±r
 = 
myLôéeHóp
[
idx
].
mÆloc
 (
sz
);

128 i‡(
	g±r
 =
NULL
) {

129 
böm≠
[
block
] = 
m≠
 &~
bô
;

130 
	gidx
++;

131 
	gbô
 <<= 1;

133 
	g_mem‹yHñd
 -
sz
;

134  
	g±r
;

139 
	gGET_MEMORY
:

140 i‡(
±r
 =
NULL
) {

143 
±r
 = 
bighóp
.
mÆloc
 (
sz
);

146  
	g±r
;

150 
ölöe
 
‰ì
 (* 
±r
) {

152 c⁄° 
size_t
 
	gobje˘Size
 = 
gëSize
(
±r
);

153 i‡(
	gobje˘Size
 > 
	g_maxObje˘Size
) {

154 
	gbighóp
.
‰ì
 (
±r
);

156 
	gobje˘SizeCœss
 = 
gëSizeCœss
(
obje˘Size
);

157 
as£π
 (
obje˘SizeCœss
 >= 0);

158 
as£π
 (
obje˘SizeCœss
 < 
NumBös
);

160 
as£π
 (
gëCœssMaxSize
(
obje˘SizeCœss
Ë>
obje˘Size
);

162 
gëCœssMaxSize
(
obje˘SizeCœss
Ë> 
	gobje˘Size
) {

163 
	gobje˘SizeCœss
--;

166 
as£π
 (
gëCœssMaxSize
(
obje˘SizeCœss
Ë<
obje˘Size
);

167 i‡(
	gobje˘SizeCœss
 > 0) {

168 
as£π
 (
obje˘Size
 >
gëCœssMaxSize
(
obje˘SizeCœss
 - 1));

171 
	gmyLôéeHóp
[
obje˘SizeCœss
].
‰ì
 (
±r
);

172 
m¨k_bö
 (
obje˘SizeCœss
);

173 
	g_mem‹yHñd
 +
obje˘Size
;

178 
˛ór
() {

179 
	gi
 = 0; i < 
	gNumBös
; i++) {

180 
	gmyLôéeHóp
[
i
].
˛ór
();

182 
	gj
 = 0; j < 
	gNUM_ULONGS
; j++) {

183 
	gböm≠
[
j
] = 0;

185 
	gbighóp
.
˛ór
();

186 
	g_mem‹yHñd
 = 0;

189 
	g¥iv©e
:

191 íum { 
BITS_PER_ULONG
 = () * 8 };

192 íum { 
	gSHIFTS_PER_ULONG
 = (
BITS_PER_ULONG
 == 32) ? 5 : 6 };

193 íum { 
	gMAX_BITS
 = (
NumBös
 + 
BITS_PER_ULONG
 - 1) & ~(BITS_PER_ULONG - 1) };

196 
	g¥iv©e
:

198 
ölöe
 
idx2block
 (
i
) {

199 
blk
 = 
i
 >> 
SHIFTS_PER_ULONG
;

200 
as£π
 (
blk
 < 
NUM_ULONGS
);

201 
as£π
 (
blk
 >= 0);

202  
	gblk
;

205 
ölöe
 
idx2bô
 (
i
) {

206 
	gbô
 = ((1U << ((
i
Ë& ((1U << 
SHIFTS_PER_ULONG
)-1))));

207  
	gbô
;

211 
	g¥Ÿe˘ed
:

213 
BigHóp
 
bighóp
;

215 íum { 
	gNUM_ULONGS
 = 
MAX_BITS
 / 
BITS_PER_ULONG
 };

216 
	gböm≠
[
NUM_ULONGS
];

218 
ölöe
 
gë_böm≠
 (
i
) const {

219  
	gböm≠
[
i
 >> 
SHIFTS_PER_ULONG
] & 
idx2bô
(i);

222 
ölöe
 
m¨k_bö
 (
i
) {

223 
	gböm≠
[
i
 >> 
SHIFTS_PER_ULONG
] |
idx2bô
(i);

226 
ölöe
 
unm¨k_bö
 (
i
) {

227 
	gböm≠
[
i
 >> 
SHIFTS_PER_ULONG
] &~(
idx2bô
(i));

230 
size_t
 
	g_mem‹yHñd
;

232 c⁄° 
size_t
 
	g_maxObje˘Size
;

235 
LôéeHóp
 
	gmyLôéeHóp
[
NumBös
];

	@Heap-Layers/heaps/combining/strictsegheap.h

32 #i‚de‡
HL_STRICTSEGHEAP_H


33 
	#HL_STRICTSEGHEAP_H


	)

35 
	~"£ghóp.h
"

55 
«me•a˚
 
	gHL
 {

57 
	gãm∂©e
 <
	gNumBös
,

58 (*
	gsize2˛ass
Ë(c⁄° 
	gsize_t
),

59 
size_t
 (*
˛ass2size
) (const ),

60 
˛ass
 
	gLôéeHóp
,

61 
˛ass
 
	gBigHóp
>

62 
˛ass
 
	gSåi˘SegHóp
 :

63 
public
 
SegHóp
<
NumBös
, 
	gsize2˛ass
, 
	g˛ass2size
, 
	gLôéeHóp
, 
	gBigHóp
>

65 
	g¥iv©e
:

67 
SegHóp
<
	tNumBös
, 
	tsize2˛ass
, 
	t˛ass2size
, 
	tLôéeHóp
, 
	tBigHóp
> 
	tSu≥rHóp
;

69 
	gpublic
:

71 
˛ór
 () {

72 
i
;

73 
	gi
 = 0; i < 
	gNumBös
; i++) {

74 c⁄° 
size_t
 
	gsz
 = 
˛ass2size
(
i
);

75 * 
	g±r
;

76 (
	g±r
 = 
Su≥rHóp
::
myLôéeHóp
[
i
].
mÆloc
 (
sz
)Ë!
NULL
) {

77 
Su≥rHóp
::
bighóp
.
‰ì
 (
±r
);

80 
	gj
 = 0; j < 
	gSu≥rHóp
::
NUM_ULONGS
; j++) {

81 
	gSu≥rHóp
::
böm≠
[
j
] = 0;

83 
	gSu≥rHóp
::
_mem‹yHñd
 = 0;

91 
ölöe
 * 
mÆloc
 (c⁄° 
size_t
 
sz
) {

92 * 
	g±r
 = 
NULL
;

93 c⁄° 
	gsizeCœss
 = 
size2˛ass
(
sz
);

94 c⁄° 
size_t
 
	gªÆSize
 = 
˛ass2size
(
sizeCœss
);

96 
as£π
 (
ªÆSize
 >
sz
);

98 i‡(
	gªÆSize
 <
Su≥rHóp
::
_maxObje˘Size
) {

99 
as£π
 (
sizeCœss
 >= 0);

100 
as£π
 (
sizeCœss
 < 
NumBös
);

101 
	g±r
 = 
Su≥rHóp
::
myLôéeHóp
[
sizeCœss
].
mÆloc
 (
ªÆSize
);

103 i‡(!
	g±r
) {

104 
	g±r
 = 
Su≥rHóp
::
bighóp
.
mÆloc
 (
ªÆSize
);

106  
	g±r
;

109 
ölöe
 
‰ì
 (* 
±r
) {

110 c⁄° 
size_t
 
	gobje˘Size
 = 
Su≥rHóp
::
gëSize
(
±r
);

111 i‡(
	gobje˘Size
 > 
	gSu≥rHóp
::
_maxObje˘Size
) {

112 
Su≥rHóp
::
bighóp
.
‰ì
 (
±r
);

114 
	gobje˘SizeCœss
 = 
size2˛ass
(
obje˘Size
);

115 
as£π
 (
obje˘SizeCœss
 >= 0);

116 
as£π
 (
obje˘SizeCœss
 < 
NumBös
);

123 
˛ass2size
(
obje˘SizeCœss
Ë> 
	gobje˘Size
)

124 
	gobje˘SizeCœss
--;

126 
	gSu≥rHóp
::
myLôéeHóp
[
obje˘SizeCœss
].
‰ì
 (
±r
);

	@Heap-Layers/heaps/combining/tryheap.h

27 #i‚de‡
HL_TRYHEAP_H


28 
	#HL_TRYHEAP_H


	)

30 
	~<c°ddef
>

32 
«me•a˚
 
	gHL
 {

34 
	gãm∂©e
 <
˛ass
 
	gHóp1
, cœs†
	gHóp2
>

35 ˛as†
	cTryHóp
 : 
public
 
Hóp2
 {

36 
public
:

38 
TryHóp
 ()

41 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

42 * 
±r
 = 
hóp1
.
mÆloc
 (
sz
);

43 i‡(
	g±r
 =
NULL
)

44 
±r
 = 
Hóp2
::
mÆloc
 (
sz
);

45  
	g±r
;

48 
ölöe
 
‰ì
 (* 
±r
) {

49 
	ghóp1
.
‰ì
 (
±r
);

52 
	g¥iv©e
:

53 
Hóp1
 
hóp1
;

	@Heap-Layers/heaps/debug/all.h

1 
	~"checkhóp.h
"

2 
	~"debughóp.h
"

3 
	~"loghóp.h
"

4 
	~"ßnôycheckhóp.h
"

5 
	~"°©shóp.h
"

	@Heap-Layers/heaps/debug/checkheap.h

3 #i‚de‡
HL_CHECKHEAP_H


4 
	#HL_CHECKHEAP_H


	)

6 
	~<c°rög
>

8 
	~<as£π.h
>

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

18 
«me•a˚
 
	gHL
 {

20 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

21 ˛as†
	cCheckHóp
 : 
public
 
Su≥rHóp
 {

22 
¥iv©e
:

24 íum { 
RECEIVED_A_NULL_OBJECT_FROM_MALLOC
 = 0 };

25 íum { 
	gRECEIVED_AN_UNALIGNED_OBJECT_FROM_MALLOC
 = 0 };

27 
	gpublic
:

29 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

30 * 
addr
 = 
Su≥rHóp
::
mÆloc
 (
sz
);

31 #i‡!
deföed
(
NDEBUG
)

34 i‡(
	gaddr
 =
NULL
) {

35 
as£π
 (
RECEIVED_A_NULL_OBJECT_FROM_MALLOC
);

36 
¥ötf
 ("RECEIVED_A_NULL_OBJECT_FROM_MALLOC\n");

37 
ab‹t
();

40 
as£π
 (
Su≥rHóp
::
gëSize
(
addr
Ë>
sz
);

43 i‡((Ë
	gaddr
 % 
	gSu≥rHóp
::
Alignmít
 != 0) {

44 
as£π
 (
RECEIVED_AN_UNALIGNED_OBJECT_FROM_MALLOC
);

45 
¥ötf
 ("RECEIVED_AN_UNALIGNED_OBJECT_FROM_MALLOC\n");

46 
ab‹t
();

50 
	g°d
::
mem£t
 (
addr
, 0, 
Su≥rHóp
::
gëSize
(addr));

52  
	gaddr
;

55 
ölöe
 
‰ì
 (* 
±r
) {

56 #i‡!
deföed
(
NDEBUG
)

58 
	g°d
::
mem£t
 (
±r
, 0, 
Su≥rHóp
::
gëSize
(ptr));

60 
	gSu≥rHóp
::
‰ì
 (
±r
);

	@Heap-Layers/heaps/debug/debugheap.h

4 #i‚de‡
HL_DEBUGHEAP_H_


5 
	#HL_DEBUGHEAP_H_


	)

7 
	~<as£π.h
>

8 
	~<°dlib.h
>

15 
«me•a˚
 
	gHL
 {

17 
	gãm∂©e
 <
˛ass
 
	gSu≥r
,

18 
	g‰ìCh¨
 = 'F'>

19 ˛as†
	cDebugHóp
 : 
public
 
Su≥r
 {

20 
¥iv©e
:

22 íum { 
CANARY
 = 0xdeadbeef };

24 
	gpublic
:

27 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

29 * 
±r
;

30 
	g±r
 = 
Su≥r
::
mÆloc
 (
sz
 + (
size_t
));

31 i‡(
	g±r
 =
NULL
) {

32  
NULL
;

34 
size_t
 
	gªÆSize
 = 
Su≥r
::
gëSize
 (
±r
);

35 
as£π
 (
ªÆSize
 >
sz
);

36 
size_t
 
	gi
 = 0; i < 
	gªÆSize
; i++) {

37 ((*Ë
	g±r
)[
i
] = 'A';

39 
size_t
 * 
	gˇ«ryLoˇti⁄
 =

40 (
size_t
 *Ë((*Ë
±r
 + 
ªÆSize
 - (size_t));

41 *
	gˇ«ryLoˇti⁄
 = (
size_t
Ë
CANARY
;

42  
	g±r
;

46 
ölöe
 
‰ì
 (* 
±r
) {

47 i‡(
	g±r
) {

48 
size_t
 
	gªÆSize
 = 
Su≥r
::
gëSize
(
±r
);

50 
size_t
 * 
	gˇ«ryLoˇti⁄
 =

51 (
size_t
 *Ë((*Ë
±r
 + 
ªÆSize
 - (size_t));

52 
size_t
 
	g°‹edC™¨y
 = *
ˇ«ryLoˇti⁄
;

53 i‡(
	g°‹edC™¨y
 !
CANARY
) {

54 
ab‹t
();

56 
	gi
 = 0; i < 
	gªÆSize
; i++) {

57 ((*Ë
	g±r
)[
i
] = 
‰ìCh¨
;

59 
	gSu≥r
::
‰ì
 (
±r
);

	@Heap-Layers/heaps/debug/logheap.h

3 #i‚de‡
HL_LOGHEAP_H_


4 
	#HL_LOGHEAP_H_


	)

11 
	~<as£π.h
>

12 
	~<m©h.h
>

13 
	~<limôs.h
>

14 
	~<°dlib.h
>

17 #i‡
deföed
(
unix
)

18 
	~<uni°d.h
>

19 
	~<sys/ty≥s.h
>

22 
	~<f°ªam
>

23 
	~<ios
>

26 
usög
 
«me•a˚
 
	g°d
;

28 
«me•a˚
 
	gHL
 {

30 
	gãm∂©e
 <
˛ass
 
	gObj
,

31 
	gMAX_ENTRIES
 = 300000>

32 ˛as†
	cLog
 {

33 
public
:

35 
Log
() :

36 
numE¡rõs
 (0)

38 #i‡
deföed
(
unix
)

39 
•rötf
 (
fûíame
, "theLog-%d", 
gëpid
());

41 
•rötf
 (
fûíame
, "theLog");

45 
wrôeLog
() {

47 
of°ªam
 
outfûe
 (
fûíame
, 
ios_ba£
::
≠p
);

49 
wrôe
(
fûíame
);

52 
dump
() {

53 
wrôe
 (
fûíame
);

54 
	gnumE¡rõs
 = 0;

57 
≠≥nd
 (c⁄° 
Obj
& 
o
) {

58 i‡(
	gnumE¡rõs
 < 
	gMAX_ENTRIES
) {

59 
	gíåõs
[
numE¡rõs
] = 
o
;

60 
	gnumE¡rõs
++;

67 
wrôe
 (* 
‚ame
) {

68 
of°ªam
 
outfûe
 (
‚ame
, 
ios_ba£
::
≠p
);

69 
	gi
 = 0; i < 
	gnumE¡rõs
; i++) {

70 
	goutfûe
 << 
	gíåõs
[
i
] << 
	gídl
;

74 
	g¥iv©e
:

76 
numE¡rõs
;

77 
Obj
 
	gíåõs
[
MAX_ENTRIES
];

78 
	gfûíame
[255];

82 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

83 ˛as†
	cLogHóp
 : 
public
 
Su≥rHóp
 {

84 
public
:

86 
LogHóp
()

87 : 
ÆlD⁄e
 (
Ál£
)

90 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

91 * 
±r
 = 
Su≥rHóp
::
mÆloc
 (
sz
);

92 i‡(!
	gÆlD⁄e
) {

93 
Mem‹yReque°
 
	gm
;

94 
	gm
.
mÆloc
 (
±r
, 
sz
);

95 i‡(!
	glog
.
≠≥nd
 (
m
)) {

96 
	gÆlD⁄e
 = 
åue
;

97 
	glog
.
dump
();

98 
	glog
.
≠≥nd
(
m
);

99 
	gÆlD⁄e
 = 
Ál£
;

102  
	g±r
;

105 
wrôe
() {

106 
	gÆlD⁄e
 = 
åue
;

107 
	glog
.
wrôeLog
();

110 
ölöe
 
‰ì
 (* 
±r
) {

111 i‡(!
	gÆlD⁄e
) {

112 
Mem‹yReque°
 
	gm
;

113 
	gm
.
‰ì
 (
±r
);

114 
	glog
.
≠≥nd
 (
m
);

116 
	gSu≥rHóp
::
‰ì
 (
±r
);

119 
	g¥iv©e
:

121 ˛as†
	cMem‹yReque°
 {

122 
public
:

124 
Mem‹yReque°
()

127 
_£c
 (
LONG_MAX
),

128 
_u£c
 (
LONG_MAX
),

130 
_size
 (0),

131 
_addªss
 (
INVALID
)

134 íum { 
	gFREE_OP
 = 0,

135 
	gMALLOC_OP
,

136 
	gREALLOC_OP
,

137 
	gREFREE_OP
,

138 
	gALLOCATE_OP
,

139 
	gDEALLOCATE_OP
,

140 
	gINVALID


143 
‰õnd
 
	g°d
::
o°ªam
& 
›î©‹
<< (
°d
::o°ªam& 
os
, 
	gMem‹yReque°
& 
	gm
) {

144 
	gm
.
gëTy≥
()) {

145 
	gFREE_OP
:

146 
os
 << "F\t" << (*Ë
m
.
gëAddªss
();

148 
	gMALLOC_OP
:

149 
os
 << "M\t" << 
m
.
gëSize
(Ë<< "\t" << (*Ëm.
gëAddªss
();

152 
ab‹t
();

155  
	gos
;

158 
mÆloc
 (* 
addr
,

159 
size_t
 
sz
)

161 
as£π
 ((((Ë
addr
) & 7) == 0);

162 
	g_size
 = 
sz
;

163 
	g_addªss
 = (Ë
addr
 | 
MALLOC_OP
;

169 
‰ì
 (* 
addr
)

171 
as£π
 ((((Ë
addr
) & 7) == 0);

172 
	g_addªss
 = (Ë
addr
 | 
FREE_OP
;

178 
Æloˇã
 (
sz
)

180 
	g_addªss
 = 
ALLOCATE_OP
;

181 
	g_size
 = 
sz
;

182 
m¨kTime
 (
_£c
, 
_u£c
);

187 
dóŒoˇã
 (
sz
)

189 
	g_addªss
 = 
DEALLOCATE_OP
;

190 
	g_size
 = 
sz
;

191 
m¨kTime
 (
_£c
, 
_u£c
);

197 
m¨kTime
 (& 
£c
, & 
u£c
)

200 #ifde‡
__SVR4


201 
hπime_t
 
	gt
;

202 
	gt
 = 
gëhπime
();

203 
	g£c
 = *((*Ë&
t
);

204 
	gu£c
 = *((*Ë&
t
 + 1);

206 
timevÆ
 
	gtv
;

207 
timez⁄e
 
	gtz
;

208 
gëtimeofday
 (&
tv
, &
tz
);

209 
	g£c
 = 
tv
.
tv_£c
;

210 
	gu£c
 = 
tv
.
tv_u£c
;

215 
gëTy≥
() {

216  
	g_addªss
 & 7;

219 
gëAŒoˇãd
() {

220  
	g_size
;

223 
gëDóŒoˇãd
() {

224  
	g_size
;

227 
gëAddªss
() {

228  
	g_addªss
 & ~7;

231 
gëSize
() {

232  
	g_size
;

236 
gëTime
() {

237  (Ë
	g_£c
 + (Ë
	g_u£c
 / 1000000.0;

240 
gëSec⁄ds
() {

241  
	g_£c
;

244 
gëU£c⁄ds
() {

245  
	g_u£c
;

248 
‰õnd
 
	g›î©‹
< (
	gMem‹yReque°
& 
	gm
, Mem‹yReque°& 
	gn
) {

249  ((
	gm
.
	g_£c
 < 
	gn
._sec)

250 || ((
	gm
.
	g_£c
 =
n
.
_£c
)

251 && (
m
.
_u£c
 < 
n
._usec)));

254 
‰õnd
 
	g›î©‹
=(
Mem‹yReque°
& 
m
, 
	gMem‹yReque°
& 
	gn
) {

255  ((
	gm
.
	g_£c
 =
n
.
_£c
Ë&& (
m
.
_u£c
 ==Ç._usec));

259 
	g¥iv©e
:

260 
_size
;

261 
	g_addªss
;

263 
	g_£c
;

264 
	g_u£c
;

268 
	gLog
<
	gMem‹yReque°
> 
	glog
;

270 
boﬁ
 
	gÆlD⁄e
;

	@Heap-Layers/heaps/debug/sanitycheckheap.h

3 #i‚de‡
HL_SANITYCHECKHEAP_H


4 
	#HL_SANITYCHECKHEAP_H


	)

13 
	~<m≠
>

15 
	~"hóps/t›/mÆlochóp.h
"

16 
	~"hóps/•ecül/z⁄ehóp.h
"

17 
	~"wøµîs/°œŒoˇt‹.h
"

18 
	~"hóps/t›/mm≠hóp.h
"

20 
«me•a˚
 
	gHL
 {

22 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

23 ˛as†
	cS™ôyCheckHóp
 : 
public
 
Su≥rHóp
 {

24 
¥iv©e
:

30 
°d
::
	t∑ú
<c⁄° *, 
	tsize_t
> 
	tobjTy≥
;

33 
	gHL
::
	tFªñi°Hóp
<
	tHL
::
	tZ⁄eHóp
<HL::
	tMm≠Hóp
, 16384> > 
	thópTy≥
;

36 
	gHL
::
	tSTLAŒoˇt‹
<
	tobjTy≥
, 
	thópTy≥
> 
	tloˇlAŒoˇt‹
;

38 
	g°d
::
	tÀss
<*> 
	tloˇlCom∑øt‹
;

41 
	g°d
::
	tm≠
<*, 
	tsize_t
, 
	tloˇlCom∑øt‹
, 
	tloˇlAŒoˇt‹
> 
	tm≠Ty≥
;

44 íum { 
	gFREED
 = -1 };

50 íum { 
	gMALLOC_RETURNED_ALLOCATED_OBJECT
 = 0,

51 
	gFREE_CALLED_ON_OBJECT_I_NEVER_ALLOCATED
 = 0,

52 
	gFREE_CALLED_TWICE_ON_SAME_OBJECT
 = 0 };

54 
	gpublic
:

56 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

57 * 
±r
 = 
Su≥rHóp
::
mÆloc
 (
sz
);

58 i‡(
	g±r
 =
NULL
) {

59  
NULL
;

62 
mem£t
 (
±r
, 'A', 
sz
);

64 
	gm≠Ty≥
::
ôî©‹
 
i
;

66 
	gi
 = 
ÆloˇãdObje˘s
.
föd
 (
±r
);

67 i‡(
	gi
 =
ÆloˇãdObje˘s
.
íd
()) {

70 
ÆloˇãdObje˘s
.
ö£π
 (
°d
::
∑ú
<*, >(
±r
, 
sz
));

74 i‡((*
	gi
).
	g£c⁄d
 !
FREED
) {

76 
as£π
 ( 
MALLOC_RETURNED_ALLOCATED_OBJECT
 );

77  
	gNULL
;

80 (*
	gi
).
	g£c⁄d
 = 
sz
;

83  
	g±r
;

86 
ölöe
 
‰ì
 (* 
±r
) {

88 
	gm≠Ty≥
::
ôî©‹
 
i
;

89 
	gi
 = 
ÆloˇãdObje˘s
.
föd
 (
±r
);

90 i‡(
	gi
 =
ÆloˇãdObje˘s
.
íd
()) {

91 
as£π
 ( 
FREE_CALLED_ON_OBJECT_I_NEVER_ALLOCATED
 );

95 i‡((*
	gi
).
	g£c⁄d
 =
FREED
) {

97 
as£π
 ( 
FREE_CALLED_TWICE_ON_SAME_OBJECT
 );

101 
mem£t
 (
±r
, 'F', (*
i
).
£c⁄d
);

103 (*
	gi
).
	g£c⁄d
 = 
FREED
;

104 
	gSu≥rHóp
::
‰ì
 (
±r
);

107 
	g¥iv©e
:

110 
m≠Ty≥
 
ÆloˇãdObje˘s
;

	@Heap-Layers/heaps/debug/statsheap.h

3 #i‚de‡
HL_STATS_H


4 
	#HL_STATS_H


	)

6 
	~<m≠
>

7 
	~<ˇs£π
>

9 
«me•a˚
 
	gHL
 {

11 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

12 ˛as†
	cInU£Hóp
 : 
public
 
Su≥rHóp
 {

13 
¥iv©e
:

14 
°d
::
	tm≠
<*, > 
	tm≠Ty≥
;

15 
	gpublic
:

16 
InU£Hóp
()

17 : 
öU£
 (0),

18 
maxInU£
 (0)

20 * 
mÆloc
 (
size_t
 
sz
) {

21 * 
	g±r
 = 
Su≥rHóp
::
mÆloc
 (
sz
);

22 i‡(
	g±r
 !
NULL
) {

23 
öU£
 +
sz
;

24 i‡(
	gmaxInU£
 < 
	göU£
) {

25 
	gmaxInU£
 = 
öU£
;

27 
	gÆloˇãdObje˘s
.
ö£π
 (
°d
::
∑ú
<*, >(
±r
, 
sz
));

29  
	g±r
;

32 
‰ì
 (* 
±r
) {

33 
	gm≠Ty≥
::
ôî©‹
 
i
;

34 
	gi
 = 
ÆloˇãdObje˘s
.
föd
 (
±r
);

35 i‡(
	gi
 =
ÆloˇãdObje˘s
.
íd
()) {

37 
as£π
 (0);

39 
	göU£
 -(*
i
).
£c⁄d
;

40 
	gÆloˇãdObje˘s
.
îa£
 (
i
);

41 
	gSu≥rHóp
::
‰ì
 (
±r
);

44 
gëInU£
 () const {

45  
	göU£
;

48 
gëMaxInU£
 () const {

49  
	gmaxInU£
;

52 
	g¥iv©e
:

53 
öU£
;

54 
	gmaxInU£
;

55 
m≠Ty≥
 
	gÆloˇãdObje˘s
;

59 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

60 ˛as†
	cAŒoˇãdHóp
 : 
public
 
Su≥rHóp
 {

61 
public
:

62 
AŒoˇãdHóp
 ()

63 : 
Æloˇãd
 (0),

64 
maxAŒoˇãd
 (0)

66 * 
mÆloc
 (
size_t
 
sz
) {

67 * 
	g±r
 = 
Su≥rHóp
::
mÆloc
 (
sz
);

68 i‡(
	g±r
 !
NULL
) {

69 
Æloˇãd
 +
Su≥rHóp
::
gëSize
(
±r
);

70 i‡(
	gmaxAŒoˇãd
 < 
	gÆloˇãd
) {

71 
	gmaxAŒoˇãd
 = 
Æloˇãd
;

74  
	g±r
;

77 
‰ì
 (* 
±r
) {

78 
	gÆloˇãd
 -
Su≥rHóp
::
gëSize
(
±r
);

79 
	gSu≥rHóp
::
‰ì
 (
±r
);

82 
gëAŒoˇãd
 () const {

83  
	gÆloˇãd
;

85 
gëMaxAŒoˇãd
 () const {

86  
	gmaxAŒoˇãd
;

89 
	g¥iv©e
:

90 
Æloˇãd
;

91 
	gmaxAŒoˇãd
;

95 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

96 ˛as†
	cSètsHóp
 : 
public
 
Su≥rHóp
 {

97 
public
:

98 ~
SètsHóp
 () {

99 
¥ötf
 ("I¿u£ = %d,áŒoˇãd = %d\n", 
Su≥rHóp
::
gëInU£
(), Su≥rHóp::
gëAŒoˇãd
());

100 
¥ötf
 ("Max i¿u£ = %d, maxáŒoˇãd = %d\n", 
Su≥rHóp
::
gëMaxInU£
(), Su≥rHóp::
gëMaxAŒoˇãd
());

	@Heap-Layers/heaps/general/all.h

1 
	~"dlhóp.h
"

2 
	~"kög¶eyhóp.h
"

3 
	~"ÀamÆlochóp.h
"

	@Heap-Layers/heaps/general/dlheap.h

27 #i‚de‡
HL_DLHEAP_H


28 
	#HL_DLHEAP_H


	)

36 
	~<as£π.h
>

38 
	~"hóps/buûdögblock/ad≠thóp.h
"

39 
	~"utûôy/dŒi°.h
"

40 
	~"utûôy/¶li°.h
"

41 
	~"hóps/obje˘ªp/cﬂÀs˚abÀhóp.h
"

42 
	~"hóps/buûdögblock/cﬂÀs˚hóp.h
"

44 #i‚de‡
TRUE


45 
	#TRUE
 1

	)

46 
	#FALSE
 0

	)

56 
«me•a˚
 
	gHL
 {

58 
	gãm∂©e
 <
˛ass
 
	gMm≠
>

59 
˛ass
 
	gCﬂÀs˚abÀMm≠Hóp
 : 
public
 
RequúeCﬂÀs˚abÀ
<
Mm≠
> {

60 
public
:

61 
RequúeCﬂÀs˚abÀ
<
	tMm≠
> 
	tsu≥r
;

62 
ty≥«me
 
	tRequúeCﬂÀs˚abÀ
<
	tMm≠
>::
	tHódî
 Header;

64 
ölöe
 * 
mÆloc
 (c⁄° 
size_t
 
sz
) {

65 * 
	gbuf
 = 
su≥r
::
mÆloc
 (
sz
 + (
Hódî
));

66 * 
	g±r
 = 
Hódî
::
makeObje˘
 (
buf
, 0, 
sz
);

67 
	gsu≥r
::
m¨kMm≠≥d
 (
±r
);

68 
	gsu≥r
::
m¨kInU£
 (
±r
);

69  
	g±r
;

71 
ölöe
 
‰ì
 (* 
±r
) {

72 
	gsu≥r
::
‰ì
 (
Hódî
::
gëHódî
 (
±r
));

74 
ölöe
 
ªmove
 (* 
±r
) {

75  
	gsu≥r
::
ªmove
 (
Hódî
::
gëHódî
 (
±r
));

89 
	gãm∂©e
 <
	gThªshﬁdByãs
, 
˛ass
 
	gSmÆlHóp
, cœs†
	gsu≥r
>

90 ˛as†
	cSñe˘Mm≠Hóp
 : 
public
 
su≥r
 {

91 
public
:

92 
ölöe
 * 
mÆloc
 (c⁄° 
size_t
 
sz
) {

93 * 
±r
 = 
NULL
;

94 i‡(
	gsz
 <
ThªshﬁdByãs
) {

95 
±r
 = 
sm
.
mÆloc
 (
sz
);

100 i‡(
	g±r
 =
NULL
) {

101 
±r
 = 
su≥r
::
mÆloc
 (
sz
);

102 
	gsu≥r
::
m¨kMm≠≥d
 (
±r
);

104  
	g±r
;

106 
ölöe
 
‰ì
 (* 
±r
) {

107 i‡(
	gsu≥r
::
isMm≠≥d
(
±r
)) {

108 
su≥r
::
‰ì
 (
±r
);

110 
	gsm
.
‰ì
 (
±r
);

113 
ölöe
 
ªmove
 (* 
±r
) {

114 i‡(
	gsu≥r
::
isMm≠≥d
(
±r
)) {

115  
su≥r
::
ªmove
 (
±r
);

117  
	gsm
.
ªmove
 (
±r
);

120 
ölöe
 
˛ór
 () {

121 
	gsm
.
˛ór
();

122 
	gsu≥r
::
˛ór
();

125 
	g¥iv©e
:

126 
SmÆlHóp
 
sm
;

136 
	gãm∂©e
 <
	gThªshﬁdByãs
, 
˛ass
 
	gsu≥r
>

137 ˛as†
	cThªshﬁd
 : 
public
 
su≥r
 {

138 
public
:

140 íum { 
MIN_LARGE_SIZE
 = 64 };

143 
Thªshﬁd
 ()

144 : 
‰ìAŒNextMÆloc
 (
FALSE
),

145 
öU£
 (0),

146 
maxInU£
 (0),

147 
thªshﬁd
 (0)

150 
ölöe
 * 
mÆloc
 (c⁄° 
size_t
 
sz
) {

151 * 
	g±r
 = 
su≥r
::
mÆloc
 (
sz
);

152 i‡(
	g±r
) {

153 c⁄° 
size_t
 
	ga˘uÆSize
 = 
su≥r
::
gëSize
(
±r
);

154 
	göU£
 +
a˘uÆSize
;

155 i‡(
	göU£
 > 
	gmaxInU£
) {

156 
	gmaxInU£
 = 
öU£
;

157 
	gthªshﬁd
 = 16384 + 
maxInU£
 / 2;

160 i‡(
	g‰ìd
 < 0) {

161 
	g‰ìd
 = 0;

165  
	g±r
;

170 * 
öã∫ÆMÆloc
 (c⁄° 
size_t
 
sz
) {

171 i‡(
	g‰ìAŒNextMÆloc
 || (
	g‰ìd
 > 0)) {

172 
	g‰ìd
 = 0;

173 
	gsu≥r
::
‰ìAŒ
();

174 
	g‰ìAŒNextMÆloc
 = 
FALSE
;

176 * 
	g±r
 = 
su≥r
::
mÆloc
 (
sz
);

177 i‡(
	g±r
 !
NULL
) {

178 i‡(
sz
 < 
MIN_LARGE_SIZE
) {

179 
‰ìd
 -
gëSize
(
±r
);

180 i‡(
	g‰ìd
 < 0) {

181 
	g‰ìd
 = 0;

185  
	g±r
;

190 
ölöe
 
‰ì
 (* 
±r
) {

191 c⁄° 
size_t
 
	gsz
 = 
su≥r
::
gëSize
(
±r
);

192 
	göU£
 -
sz
;

193 
	gsu≥r
::
‰ì
 (
±r
);

194 i‡(
	gsu≥r
::
gëMem‹yHñd
(Ë> 
thªshﬁd
) {

195 
su≥r
::
‰ìAŒ
();

199 
	g¥iv©e
:

202 
size_t
 
öU£
;

205 
size_t
 
	gmaxInU£
;

207 
size_t
 
	gthªshﬁd
;

213 
boﬁ
 
	g‰ìAŒNextMÆloc
;

216 
ölöe
 
Thªshﬁd
 ()

219 
ölöe
 * 
mÆloc
 (c⁄° 
size_t
 
sz
) {

220 i‡((
gëMem‹yHñd
(Ë> 
	gThªshﬁdByãs
) ||

221 ((
	gsz
 >
MIN_LARGE_SIZE
Ë&& (
gëMem‹yHñd
(Ë>
sz
))) {

222 
su≥r
::
‰ìAŒ
();

224  
	gsu≥r
::
mÆloc
 (
sz
);

235 
«me•a˚
 
	gDLBigHópNS


237 c⁄° 
size_t
 
	gbös
[] = {8U, 16U, 24U, 32U, 40U, 48U, 56U, 64U, 72U, 80U, 88U,

256 íum { 
	gNUMBINS
 = (
bös
Ë/ (
size_t
) };

257 íum { 
	gBIG_OBJECT
 = 2147483648U };

263 
ölöe
 
log2
 (c⁄° 
size_t
 
sz
) {

264 
	gc
 = 0;

265 
size_t
 
	gsz1
 = 
sz
;

266 
	gsz1
 > 1) {

267 
	gsz1
 >>= 1;

268 
	gc
++;

270  
	gc
;

273 
ölöe
 
gëSizeCœss
 (c⁄° 
size_t
 
sz
);

275 
ölöe
 
size_t
 
gëCœssSize
 (c⁄° 
i
) {

276 
as£π
 (
i
 >= 0);

277 
as£π
 (
i
 < 
NUMBINS
);

279 i‡(
	gi
 < 64) {

280  ((
	gsize_t
Ë((
	gi
+1) << 3));

283 (
	gi
 < 89Ë? ((
	gsize_t
) ((i - 55) << 6)) :

284 (
i
 < 106Ë? ((
size_t
) ((i - 84) << 9)) :

285 (
i
 < 114Ë? ((
size_t
) ((i - 103) << 12)) :

286 (
i
 < 118Ë? ((
size_t
) ((i - 112) << 15)) :

287 (
i
 < 120Ë? ((
size_t
) ((i - 117) * 262144)) :

288 (
i
 < 122Ë? ((
size_t
) ((i - 119) * 1048576)) :

289 (
i
 < 124Ë? ((
size_t
) ((i - 121) * 4 * 1048576)) :

290 (
i
 < 126Ë? ((
size_t
) ((i - 123) * 16 * 1048576)) :

291 (
i
 < 128Ë? ((
size_t
) ((i - 125) * 64 * 1048576)) :

292 (
i
 < 130Ë? ((
size_t
) ((i - 127) * 256 * 1048576)) :

293 ((
size_t
Ë((
i
 - 129) * 1024 * 1048576));

297 i‡(
	gi
 < 64) {

298  (
	gsize_t
Ë((
	gi
+1) << 3);

301  
	gbös
[
i
];

305 
ölöe
 
gëSizeCœss
 (c⁄° 
size_t
 
sz
) {

306 
size_t
 
	gsz1
 = 
sz
 - 1;

307 i‡(
	gsz1
 <= 513) {

308  (Ë(
sz1
 >> 3);

312 
	gsz1
 >>= 6;

313 i‡(
	gsz1
 <= 32) {

314  56 + 
sz1
;

316 
	gsz1
 >>= 3;

317 i‡(
	gsz1
 <= 20) {

318  91 + 
sz1
;

320 
	gsz1
 >>= 3;

321 i‡(
	gsz1
 <= 10) {

322  110 - 6 + 
sz1
;

324 
	gsz1
 >>= 3;

325 i‡(
	gsz1
 <= 4) {

326  119 - 6 + 
sz1
;

328 
	gsz1
 >>= 3;

329 i‡(
	gsz1
 <= 2) {

330  124 - 6 + 
sz1
;

332  125 - 6 + 
log2
(
sz1
 >> 2);

334 c⁄° 
size_t
 
	gsz1
 = 
sz
 - 1;

335  (Ë((((
	gsz1
 >> 6Ë<32)? 56 + (
sz1
 >> 6):

336 ((
sz1
 >> 9) <= 20)? 91 + (sz1 >> 9):

337 ((
sz1
 >> 12) <= 10)? 110 - 6 + (sz1 >> 12):

338 ((
sz1
 >> 15) <= 4)? 119 - 6 + (sz1 >> 15):

339 ((
sz1
 >> 18Ë<2)? 124 - 6 + (sz1 >> 18): 126 - 6 + 
log2
(sz1>>19)));

352 
«me•a˚
 
	gDLSmÆlHópNS
 {

353 íum { 
	gNUMBINS
 = 8 };

354 
ölöe
 
gëSizeCœss
 (c⁄° 
size_t
 
sz
) {

355  (Ë((
	gsz
-1) >> 3);

357 
ölöe
 
size_t
 
gëCœssSize
 (c⁄° 
i
) {

358 
as£π
 (
i
 >= 0);

359 
as£π
 (
i
 < 
NUMBINS
);

360  (
	gsize_t
Ë((
	gi
+1) << 3);

366 
	~"kög¶eyhóp.h
"

374 
	gãm∂©e
 <
˛ass
 
	gsu≥r
>

375 
˛ass
 
	gDLBigHópTy≥
 :

376 
public


377 
CﬂÀs˚Hóp
<
RequúeCﬂÀs˚abÀ
<

378 
SegHóp
<
Kög¶ey
::
NUMBINS
,

379 
	gKög¶ey
::
size2Cœss
,

380 
	gKög¶ey
::
˛ass2Size
,

381 
	gAd≠tHóp
<
	gDLLi°
, 
	gNuŒHóp
<
	gsu≥r
> >,

382 
	gsu≥r
> > >

387 
	gãm∂©e
 <
˛ass
 
	gsu≥r
>

388 
˛ass
 
	gDLBigHópTy≥
 :

389 
public


390 
CﬂÀs˚Hóp
<
RequúeCﬂÀs˚abÀ
<

391 
SegHóp
<
DLBigHópNS
::
NUMBINS
,

392 
	gDLBigHópNS
::
gëSizeCœss
,

393 
	gDLBigHópNS
::
gëCœssSize
,

394 
	gAd≠tHóp
<
	gDLLi°
, 
	gNuŒHóp
<
	gsu≥r
> >,

395 
	gsu≥r
> > >

406 
	gãm∂©e
 <
˛ass
 
	gsu≥r
>

407 
˛ass
 
	gDLSmÆlHópTy≥
 :

408 
public
 
RequúeCﬂÀs˚abÀ
<

409 
Såi˘SegHóp
<
DLSmÆlHópNS
::
NUMBINS
,

410 
	gDLSmÆlHópNS
::
gëSizeCœss
,

411 
	gDLSmÆlHópNS
::
gëCœssSize
,

412 
	gAd≠tHóp
<
	gHL
::
SLLi°
, 
	gNuŒHóp
<
	gsu≥r
> >,

413 
	gsu≥r
> > {};

428 
	gãm∂©e
 <
˛ass
 
	gSbrk
, cœs†
	gMm≠
>

429 
˛ass
 
	gLóHóp
 :

430 
public


431 
Sñe˘Mm≠Hóp
<128 * 1024,

432 
	gThªshﬁd
<4096,

433 
	gDLSmÆlHópTy≥
<
	gDLBigHópTy≥
<
	gCﬂÀs˚abÀHóp
<
	gSbrk
> > > >,

434 
	gCﬂÀs˚abÀMm≠Hóp
<
	gMm≠
> >

	@Heap-Layers/heaps/general/kingsleyheap.h

27 #i‚de‡
HL_KINGSLEYHEAP_H


28 
	#HL_KINGSLEYHEAP_H


	)

30 
	~"utûôy/ûog2.h
"

31 
	~"hóps/comböög/°ri˘£ghóp.h
"

43 
«me•a˚
 
	gKög¶ey
 {

45 
ölöe
 
size_t
 
˛ass2Size
 (c⁄° 
i
) {

46 
size_t
 
	gsz
 = (size_tË(1UL << (
i
+3));

47  
	gsz
;

50 
ölöe
 
size2Cœss
 (c⁄° 
size_t
 
sz
) {

51 
	g˛
 = 
HL
::
ûog2
 ((
sz
 < 8) ? 8 : sz) - 3;

52  
	g˛
;

55 íum { 
	gNUMBINS
 = 29 };

67 
«me•a˚
 
	gHL
 {

69 
	gãm∂©e
 <
˛ass
 
	gPîCœssHóp
, cœs†
	gBigHóp
>

70 
˛ass
 
	gKög¶eyHóp
 :

71 
public
 
Såi˘SegHóp
<
Kög¶ey
::
NUMBINS
,

72 
	gKög¶ey
::
size2Cœss
,

73 
	gKög¶ey
::
˛ass2Size
,

74 
	gPîCœssHóp
,

75 
	gBigHóp
> {};

	@Heap-Layers/heaps/general/leamallocheap.h

27 #i‚de‡
HL_LEAMALLOCHEAP_H


28 
	#HL_LEAMALLOCHEAP_H


	)

30 
	~<c°dlib
>

32 
	~"wøµîs/mÆlocöfo.h
"

39 "C" * 
dlmÆloc
 (
size_t
);

40 "C" 
dl‰ì
 (*);

41 "C" 
size_t
 
dlmÆloc_ußbÀ_size
 (*);

43 
«me•a˚
 
	gHL
 {

45 ˛as†
	cLóMÆlocHóp
 {

46 
	gpublic
:

47 íum { 
Alignmít
 = 
MÆlocInfo
::Alignment };

49 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

50 * 
	g±r
 = 
dlmÆloc
 (
sz
);

51  
	g±r
;

54 
ölöe
 
‰ì
 (* 
p
) {

55 
dl‰ì
 (
p
);

58 
ölöe
 
size_t
 
gëSize
 (c⁄° * 
p
) {

59  
dlmÆloc_ußbÀ_size
 ((*Ë
p
);

	@Heap-Layers/heaps/general/oldkingsleyheap.h

27 #i‚de‡
HL_KINGSLEYHEAP_H


28 
	#HL_KINGSLEYHEAP_H


	)

30 
	~"hóps/comböög/°ri˘£ghóp.h
"

44 
«me•a˚
 
	gKög¶ey
 {

46 
size_t
 
˛ass2Size
 (c⁄° 
i
);

48 #i‡
deföed
(
__•¨c
Ë&& deföed(
__GNUC__
)

49 
ölöe
 
p›c
 (
v
) {

50 
	gr
;

51 
asm
 volatile ("popc %1, %0"

52 : "Ù" (
r
)

53 : "r" (
v
));

54  
	gr
;

63 c⁄° 
	g˛
[16] = { 0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4 };

65 
ölöe
 
size2Cœss
 (c⁄° 
size_t
 
sz
) {

66 #i‡
deföed
(
__•¨c
Ë&& deföed(
__GNUC__
)

68 
size_t
 
	gx
 = 
sz
;

69 
	gx
 = 
x
 | (x >> 1);

70 
	gx
 = 
x
 | (x >> 2);

71 
	gx
 = 
x
 | (x >> 4);

72 
	gx
 = 
x
 | (x >> 8);

73 
	gx
 = 
x
 | (x >> 16);

74  
p›c
(
x
) - 3;

76 i‡(
	gsz
 < 128 ) {

77 
as£π
 (
˛ass2Size
(
˛
[
sz
 >> 3]) >= sz);

78  
	g˛
[(
sz
 - 1) >> 3];

84 
	gc
 = 4;

85 
size_t
 
	gsz1
 = ((
sz
 - 1) >> 4);

86 
	gsz1
 > 7) {

87 
	gsz1
 >>= 1;

88 
	gc
++;

90 
as£π
 (
˛ass2Size
(
c
Ë>
sz
);

91  
	gc
;

97 
ölöe
 
size_t
 
˛ass2Size
 (c⁄° 
i
) {

98  (
	gsize_t
Ë(1 << (
	gi
+3));

101 íum { 
	gNUMBINS
 = 29 };

113 
«me•a˚
 
	gHL
 {

115 
	gãm∂©e
 <
˛ass
 
	gPîCœssHóp
, cœs†
	gBigHóp
>

116 
˛ass
 
	gKög¶eyHóp
 :

117 
public
 
Såi˘SegHóp
<
Kög¶ey
::
NUMBINS
,

118 
	gKög¶ey
::
size2Cœss
,

119 
	gKög¶ey
::
˛ass2Size
,

120 
	gPîCœssHóp
,

121 
	gBigHóp
> {};

	@Heap-Layers/heaps/objectrep/addheap.h

3 #i‚de‡
HL_ADDHEAP_H


4 
	#HL_ADDHEAP_H


	)

32 
	~<as£π.h
>

33 
	~"utûôy/lcm.h
"

35 
«me•a˚
 
	gHL
 {

37 
	gãm∂©e
 <
˛ass
 
	gAdd
, cœs†
	gSu≥rHóp
>

38 ˛as†
	cAddHóp
 : 
public
 
Su≥rHóp
 {

39 
public
:

41 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

42 * 
±r
 = 
Su≥rHóp
::
mÆloc
 (
sz
 + 
HódîSize
);

43 * 
	g√wPå
 = (*Ë
±r
 + 
HódîSize
;

44  
	g√wPå
;

47 
ölöe
 
‰ì
 (* 
±r
) {

48 
	gSu≥rHóp
::
‰ì
 (
gëOrigöÆ
(
±r
));

51 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

52  
	gSu≥rHóp
::
gëSize
 (
gëOrigöÆ
(
±r
));

55 
	g¥iv©e
:

57 
ölöe
 * 
gëOrigöÆ
 (* 
±r
) {

58 * 
‹igPå
 = (*Ë((*Ë
±r
 - 
HódîSize
);

59  
	g‹igPå
;

64 íum { 
	gHódîSize
 = 
lcm
<(Ë
Su≥rHóp
::
Alignmít
, (
	gAdd
)>::
vÆue
 };

	@Heap-Layers/heaps/objectrep/all.h

1 
	~"addhóp.h
"

2 
	~"cﬂÀs˚abÀhóp.h
"

3 
	~"sizehóp.h
"

4 
	~"sizeow√rhóp.h
"

	@Heap-Layers/heaps/objectrep/coalesceableheap.h

33 #i‚de‡
HL_COALESCEABLEHEAP_H


34 
	#HL_COALESCEABLEHEAP_H


	)

36 
	~<as£π.h
>

38 
	#MULTIPLE_HEAP_SUPPORT
 0

	)

45 
«me•a˚
 
	gHL
 {

47 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

48 ˛as†
	cRequúeCﬂÀs˚abÀ
 : 
public
 
Su≥rHóp
 {

49 
public
:

52 
ölöe
 
gëHóp
 (* 
±r
Ë{  
Hódî
::
gëHódî
(ptr)->getHeap(); }

53 
ölöe
 
£tHóp
 (* 
±r
, 
h
Ë{ 
	gHódî
::
gëHódî
(ptr)->setHeap(h); }

54 
ölöe
 
gëPªvHóp
 (* 
±r
Ë{  
	gHódî
::
gëHódî
(ptr)->getPrevHeap(); }

55 
ölöe
 
£tPªvHóp
 (* 
±r
, 
h
Ë{ 
	gHódî
::
gëHódî
(ptr)->setPrevHeap(h); }

57 
ölöe
 
size_t
 
gëSize
 (c⁄° * 
±r
Ë{  
	gHódî
::
gëHódî
(ptr)->getSize(); }

59 
ölöe
 
£tSize
 (* 
±r
, c⁄° 
size_t
 
sz
Ë{ 
	gHódî
::
gëHódî
(ptr)->setSize(sz); }

60 
ölöe
 
size_t
 
gëPªvSize
 (* 
±r
Ë{  
	gHódî
::
gëHódî
(ptr)->getPrevSize(); }

61 
ölöe
 
£tPªvSize
 (* 
±r
, c⁄° 
size_t
 
sz
Ë{ 
	gHódî
::
gëHódî
(ptr)->setPrevSize(sz); }

62 
ölöe
 
m¨kFªe
 (* 
±r
Ë{ 
	gHódî
::
gëHódî
(ptr)->markFree(); }

63 
ölöe
 
m¨kInU£
 (* 
±r
Ë{ 
	gHódî
::
gëHódî
(ptr)->markInUse(); }

64 
ölöe
 
m¨kPªvInU£
 (* 
±r
Ë{ 
	gHódî
::
gëHódî
(ptr)->markPrevInUse(); }

65 
ölöe
 
m¨kMm≠≥d
 (* 
±r
Ë{ 
	gHódî
::
gëHódî
(ptr)->markMmapped(); }

66 
ölöe
 
isFªe
 (* 
±r
Ë{  
	gHódî
::
gëHódî
(ptr)->isFree(); }

67 
ölöe
 
isPªvFªe
 (* 
±r
Ë{  
	gHódî
::
gëHódî
(ptr)->isPrevFree(); }

68 
ölöe
 
isMm≠≥d
 (* 
±r
Ë{  
	gHódî
::
gëHódî
(ptr)->isMmapped(); }

69 
ölöe
 * 
gëNext
 (c⁄° * 
±r
Ë{  
	gHódî
::
gëHódî
(ptr)->getNext(); }

70 
ölöe
 * 
gëPªv
 (c⁄° * 
±r
Ë{  
	gHódî
::
gëHódî
(ptr)->getPrev(); }

73 ˛as†
	cHódî
 {

74 
‰õnd
 
˛ass
 
	gRequúeCﬂÀs˚abÀ
<
	gSu≥rHóp
>;

75 
	gpublic
:

81 
ölöe
 * 
makeObje˘
 (* 
buf
, c⁄° 
size_t
 
¥evsz
, c⁄° size_à
sz
) {

82 *((
	gHódî
 *Ë
	gbuf
Ë
Hódî
 (
¥evsz
, 
sz
);

83 
Hódî
 * 
	g√xtHódî
 = (Hódî *Ë((*Ë((Hódî *Ë
buf
 + 1Ë+ 
sz
);

86 
	g√xtHódî
->
£tPªvSize
 (
sz
);

88  ((
	gHódî
 *Ë
	gbuf
 + 1);

92 
ölöe
 
ßnôyCheck
 () {

93 #i‚de‡
NDEBUG


94 
	ghódîSize
 = (
Hódî
);

95 
as£π
 (
hódîSize
 <= ());

96 
as£π
 (
gëSize
(Ë=
gëNextHódî
()->
gëPªvSize
());

97 
as£π
 (
isFªe
(Ë=
gëNextHódî
()->
isPªvFªe
());

98 
as£π
 (
gëNextHódî
()->
gëPªv
(Ë=
gëObje˘
(
this
));

100 i‡(
isPªvFªe
()) {

101 
as£π
 (
gëPªvSize
(Ë=
gëHódî
(
gëPªv
())->
gëSize
());

108 
ölöe
 
Hódî
 * 
gëHódî
 (c⁄° * 
±r
Ë{  ((
	gHódî
 *Ë
	g±r
 - 1); }

111 
ölöe
 * 
gëObje˘
 (c⁄° 
Hódî
 * 
hd
Ë{  (*Ë(
	ghd
 + 1); }

113 
ölöe
 
£tSize
 (c⁄° 
size_t
 
sz
Ë{ 
	g_size
 = sz; }

114 
ölöe
 
£tPªvSize
 (c⁄° 
size_t
 
sz
){ 
	g_¥evSize
 = sz; }

117 
ölöe
 
size_t
 
gëPªvSize
 (Ëc⁄° {  
	g_¥evSize
; }

119 
ölöe
 
m¨kFªe
 () {

121 
gëNextHódî
()->
m¨kPªvFªe
();

123 
ölöe
 
m¨kInU£
 () {

125 
gëNextHódî
()->
m¨kPªvInU£
();

127 
ölöe
 
m¨kMm≠≥d
 (Ë{ 
	g_isMm≠≥d
 = 
IS_MMAPPED
; }

128 
ölöe
 
m¨kNŸMm≠≥d
 (Ë{ 
	g_isMm≠≥d
 = 
NOT_MMAPPED
; }

129 
ölöe
 
isFªe
 () const {

131  
gëNextHódî
()->
isPªvFªe
();

133 
ölöe
 
isNextFªe
 () const {

135  
gëNextHódî
()->gëNextHódî()->
isPªvFªe
();

137 
ölöe
 
isMm≠≥d
 (Ëc⁄° {  (
	g_isMm≠≥d
 !
NOT_MMAPPED
); }

138 
ölöe
 * 
gëPªv
 () const {

140  ((*Ë
	gthis
Ë- 
gëPªvSize
();

142 
ölöe
 * 
gëNext
 () const {

144  ((*Ë(
	gthis
 + 2)Ë+ 
gëSize
();

147 
ölöe
 
m¨kPªvFªe
 (Ë{ 
	g_¥evSètus
 = 
PREV_FREE
; }

148 
ölöe
 
m¨kPªvInU£
 (Ë{ 
	g_¥evSètus
 = 
PREV_INUSE
; }

149 
ölöe
 
isPªvFªe
 (Ëc⁄° {  (
	g_¥evSètus
 !
PREV_INUSE
); }

150 
ölöe
 
size_t
 
gëSize
 (Ëc⁄° {  
	g_size
; }

152 #i‡
MULTIPLE_HEAP_SUPPORT


153 
ölöe
 
gëHóp
 (Ëc⁄° {  
	g_cuºHóp
; }

154 
ölöe
 
£tHóp
 (
h
Ë{ 
	g_cuºHóp
 = h; }

155 
ölöe
 
gëPªvHóp
 (Ëc⁄° {  
	g_¥evHóp
; }

156 
ölöe
 
£tPªvHóp
 (
h
Ë{ 
	g_¥evHóp
 = h; }

158 
ölöe
 
gëHóp
 () const {  0; }

159 
ölöe
 
£tHóp
 () { }

160 
ölöe
 
gëPªvHóp
 () const {  0; }

161 
ölöe
 
£tPªvHóp
 () { }

165 
	g¥iv©e
:

167 
ex∂icô
 
ölöe
 
Hódî
 () {}

168 
ex∂icô
 
ölöe
 
Hódî
 (c⁄° 
size_t
 
¥evsz
, c⁄° size_à
sz
)

170 
_¥evSize
 (
¥evsz
),

171 
_size
 (
sz
),

173 
_isMm≠≥d
 (
NOT_MMAPPED
)

174 #i‡
MULTIPLE_HEAP_SUPPORT


175 , 
_¥evHóp
 (0),

176 
_cuºHóp
 (0)

179 
as£π
 ((
Hódî
) <= ());

182 
ölöe
 
Hódî
 * 
gëNextHódî
 () const {

184  ((
	gHódî
 *Ë((*Ë(
	gthis
 + 1Ë+ 
gëSize
()));

187 #i‡!(
MULTIPLE_HEAP_SUPPORT
)

190 íum { 
	gPREV_INUSE
 = 0, 
	gPREV_FREE
 = 1 };

191 
	g_¥evSètus
 : 1;

194 íum { 
	gNOT_MMAPPED
 = 0, 
	gIS_MMAPPED
 = 1 };

195 
	g_isMm≠≥d
 : 1;

198 íum { 
	gNUM_BITS_STOLEN_FROM_PREVSIZE
 = 2 };

199 
size_t
 
	g_¥evSize
 : (size_tË* 8 - 
NUM_BITS_STOLEN_FROM_PREVSIZE
;

202 íum { 
	gNUM_BITS_STOLEN_FROM_SIZE
 = 0 };

203 
size_t
 
	g_size
;

209 íum { 
	gNUM_BITS_FOR_HEAP
 = 5 };

211 íum { 
	gNUM_BITS_STOLEN_FROM_SIZE
 = 
NUM_BITS_FOR_HEAP
 + 1 };

212 íum { 
	gNUM_BITS_STOLEN_FROM_PREVSIZE
 = 
NUM_BITS_FOR_HEAP
 + 1 };

215 íum { 
	gMAX_OBJECT_SIZE
 = 1 << ((
size_t
Ë* 8 - 
NUM_BITS_STOLEN_FROM_SIZE
) };

220 
size_t
 
	g_¥evSize
 : (size_tË* 8 - 
NUM_BITS_STOLEN_FROM_PREVSIZE
;

223 
	g_¥evHóp
 : 
NUM_BITS_FOR_HEAP
;

226 íum { 
	gPREV_FREE
 = 0, 
	gPREV_INUSE
 = 1 };

227 
	g_¥evSètus
 : 1;

232 
size_t
 
	g_size
 : (size_tË* 8 - 
NUM_BITS_STOLEN_FROM_SIZE
;

235 
	g_cuºHóp
 : 
NUM_BITS_FOR_HEAP
;

238 íum { 
	gNOT_MMAPPED
 = 0, 
	gIS_MMAPPED
 = 1 };

239 
	g_isMm≠≥d
 : 1;

244 
ölöe
 * 
makeObje˘
 (* 
buf
, c⁄° 
size_t
 
¥evsz
, c⁄° size_à
sz
) {

245  
	gHódî
::
makeObje˘
 (
buf
, 
¥evsz
, 
sz
);

248 
ölöe
 
Hódî
 * 
gëHódî
 (c⁄° * 
±r
) {

249  
	gHódî
::
gëHódî
 (
±r
);

260 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

261 
˛ass
 
	gCﬂÀs˚abÀHóp
 : 
public
 
RequúeCﬂÀs˚abÀ
<
Su≥rHóp
> {

262 
public
:

264 
ty≥«me
 
	tRequúeCﬂÀs˚abÀ
<
	tSu≥rHóp
>::
	tHódî
 Header;

266 
ölöe
 
CﬂÀs˚abÀHóp
 ()

269 
ölöe
 * 
mÆloc
 (c⁄° 
size_t
 
sz
) {

270 * 
	gbuf
 = 
Su≥rHóp
::
mÆloc
 (
sz
 + (
Hódî
));

271 i‡(
	gbuf
) {

272 
Hódî
 * 
	ghódî
 = (Hódî *Ë
buf
;

279 
	ghódî
->
£tSize
 (
sz
);

283 
Hódî
 * 
	g√xtHódî
 = (Hódî *Ë((*Ë(
hódî
 + 1Ë+ 
sz
);

285 
	g√xtHódî
->
£tPªvSize
 (
sz
);

293 
as£π
 (
hódî
->
isMm≠≥d
(Ë=
FALSE
);

294 
as£π
 (
√xtHódî
->
gëSize
() == 0);

295 
as£π
 (!
√xtHódî
->
isFªe
());

296 
as£π
 (!
√xtHódî
->
isPªvFªe
());

308 
	ghódî
->
m¨kNŸMm≠≥d
 ();

310 
	g√xtHódî
->
£tSize
 (0);

318 
	g√xtHódî
->
m¨kInU£
 ();

323  (
	ghódî
 + 1);

325  
	gNULL
;

328 
ölöe
 
‰ì
 (* 
±r
) {

329 
as£π
 (
Su≥rHóp
::
isFªe
(
±r
));

330 
	gSu≥rHóp
::
‰ì
 ((
Hódî
 *Ë
±r
 - 1);

	@Heap-Layers/heaps/objectrep/sizeheap.h

27 #i‚de‡
HL_SIZEHEAP_H


28 
	#HL_SIZEHEAP_H


	)

35 
	~<as£π.h
>

37 
	~"wøµîs/mÆlocöfo.h
"

38 
	~"hóps/obje˘ªp/addhóp.h
"

39 
	~"utûôy/gcd.h
"

41 
«me•a˚
 
	gHL
 {

48 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

49 ˛as†
	cSizeHóp
 : 
public
 
Su≥rHóp
 {

51 
¥iv©e
:

52 
	s‰ìObje˘
 {

53 
size_t
 
_sz
;

54 
size_t
 
	g_magic
;

58 
	gpublic
:

60 íum { 
Alignmít
 = 
gcd
<(Ë
Su≥rHóp
::Alignment,

61 (Ë(
	g‰ìObje˘
)>::
vÆue
 };

63 
	gvútuÆ
 ~
SizeHóp
 () {}

65 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

66 
‰ìObje˘
 * 
	gp
 = (‰ìObje˘ *Ë
Su≥rHóp
::
mÆloc
 (
sz
 + (freeObject));

67 
	gp
->
	g_sz
 = 
sz
;

68 
	gp
->
	g_magic
 = 0xcafebabe;

69  (*Ë(
	gp
 + 1);

72 
ölöe
 
‰ì
 (* 
±r
) {

73 
as£π
 (
gëHódî
(
±r
)->
_magic
 == 0xcafebabe);

74 
	gSu≥rHóp
::
‰ì
 (
gëHódî
(
±r
));

77 
ölöe
 
size_t
 
gëSize
 (c⁄° * 
±r
) {

78 
as£π
 (
gëHódî
(
±r
)->
_magic
 == 0xcafebabe);

79 
size_t
 
	gsize
 = 
gëHódî
(
±r
)->
_sz
;

80  
	gsize
;

83 
	g¥iv©e
:

85 
ölöe
 
£tSize
 (* 
±r
, 
size_t
 
sz
) {

86 
as£π
 (
gëHódî
(
±r
)->
_magic
 == 0xcafebabe);

87 
gëHódî
(
±r
)->
	g_sz
 = 
sz
;

90 
ölöe
 
‰ìObje˘
 * 
gëHódî
 (c⁄° * 
±r
) {

91  ((
	g‰ìObje˘
 *Ë
	g±r
 - 1);

	@Heap-Layers/heaps/objectrep/sizeownerheap.h

27 #i‚de‡
HL_SIZEOWNERHEAP_H_


28 
	#HL_SIZEOWNERHEAP_H_


	)

30 
	~<as£π.h
>

32 
	~"addhóp.h
"

39 
«me•a˚
 
	gHL
 {

41 
	gãm∂©e
 <
˛ass
 
	gHóp
>

42 ˛as†
	cSizeOw√r
 {

43 
	gpublic
:

46 
size_t
 
size
;

47 
Hóp
 * 
	gow√r
;

48 } 
	gs
;

49 
	gdummy
;

53 
	gãm∂©e
 <
˛ass
 
	gSu≥r
>

54 
˛ass
 
	gSizeOw√rHóp
 : 
public
 
AddHóp
<
SizeOw√r
<
Su≥r
>, 
	gSu≥r
> {

55 
	g¥iv©e
:

57 
AddHóp
<
	tSizeOw√r
<
	tSu≥r
>, Su≥r> 
	tSu≥rHóp
;

59 
	gpublic
:

61 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

62 * 
±r
 = 
Su≥rHóp
::
mÆloc
 (
sz
);

64 
	gSizeOw√r
<
	gSu≥r
> * 
	gso
 = (
SizeOw√r
<
Su≥r
> *Ë
±r
;

65 
	gso
->
	gs
.
	gsize
 = 
sz
;

66 
	gso
->
	gs
.
	gow√r
 = 
this
;

68  (*Ë(
	gso
 + 1);

71 
ölöe
 
‰ì
 (* 
±r
) {

72 * 
	g‹igPå
 = (*Ë((
SizeOw√r
<
Su≥r
> *Ë
±r
 - 1);

73 
	gSu≥rHóp
::
‰ì
 (
‹igPå
);

76 
ölöe
 
Su≥r
 * 
ow√r
 (* 
±r
) {

77 
	gSizeOw√r
<
	gSu≥r
> * 
	gso
 = (
SizeOw√r
<
Su≥r
> *Ë
±r
 - 1;

78  
	gso
->
	gs
.
	gow√r
;

81 
ölöe
 
size_t
 
size
 (* 
±r
) {

82 
	gSizeOw√r
<
	gSu≥r
> * 
	gso
 = (
SizeOw√r
<
Su≥r
> *Ë
±r
 - 1;

83  
	gso
->
	gs
.
	gsize
;

	@Heap-Layers/heaps/special/all.h

1 
	~"bum∑Œoc.h
"

2 
	~"√°edhóp.h
"

3 
	~"xÆlochóp.h
"

4 
	~"z⁄ehóp.h
"

	@Heap-Layers/heaps/special/bumpalloc.h

27 #i‚de‡
HL_BUMPALLOC_H


28 
	#HL_BUMPALLOC_H


	)

30 
	~<c°ddef
>

32 
	~"utûôy/gcd.h
"

33 
	~"utûôy/ßs£π.h
"

35 #i‡
deföed
(
__˛™g__
)

36 #¥agm®
˛™g
 
dügno°ic
 
push


37 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wunused-variable"

46 
«me•a˚
 
	gHL
 {

48 
	gãm∂©e
 <
	gChunkSize
,

49 
˛ass
 
	gSu≥rHóp
,

50 
	gAlignmít_
 = 1>

51 ˛as†
	cBumpAŒoc
 : 
public
 
Su≥rHóp
 {

52 
public
:

54 íum { 
Alignmít
 = 
Alignmít_
 };

56 
BumpAŒoc
()

57 : 
_bump
 (
NULL
),

58 
_ªmaöög
 (0)

60 
	gßs£π
<((Ë
	ggcd
<
	gChunkSize
, 
	gAlignmít
>::
VALUE
 =
Alignmít
)>

61 
vîifyAlignmítS©isfübÀ
;

62 
	gßs£π
<((Ë
	ggcd
<
	gSu≥rHóp
::
Alignmít
, 
	gAlignmít
>::
VALUE
 == Alignment)>

63 
vîifyAlignmítFromSu≥rHóp
;

64 
	gßs£π
<((
	gAlignmít
 & (Alignment-1)) == 0)>

65 
vîifyPowîOfTwoAlignmít
;

66 
	gvîifyAlignmítS©isfübÀ
 = 
vîifyAlignmítS©isfübÀ
;

67 
	gvîifyAlignmítFromSu≥rHóp
 = 
vîifyAlignmítFromSu≥rHóp
;

68 
	gvîifyPowîOfTwoAlignmít
 = 
vîifyPowîOfTwoAlignmít
;

71 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

73 
size_t
 
	g√wSize
 = (
sz
 + 
Alignmít
 - 1) & ~(Alignment - 1);

77 i‡(
	g_ªmaöög
 < 
	g√wSize
) {

78 
ªfûl
(
√wSize
);

81 * 
	gﬁd
 = 
_bump
;

82 
	g_bump
 +
√wSize
;

83 
	g_ªmaöög
 -
√wSize
;

85 
as£π
 ((
size_t
Ë
ﬁd
 % 
Alignmít
 == 0);

86  
	gﬁd
;

90 
ölöe
 
boﬁ
 
‰ì
 (*Ë{  
	gÁl£
; }

92 
	g¥iv©e
:

95 * 
_bump
;

98 
size_t
 
	g_ªmaöög
;

101 
ªfûl
 (
size_t
 
sz
) {

102 i‡(
	gsz
 < 
	gChunkSize
) {

103 
	gsz
 = 
ChunkSize
;

105 
	g_bump
 = (*Ë
Su≥rHóp
::
mÆloc
 (
sz
);

106 
as£π
 ((
size_t
Ë
_bump
 % 
Alignmít
 == 0);

107 
	g_ªmaöög
 = 
sz
;

114 #i‡
deföed
(
__˛™g__
)

115 #¥agm®
˛™g
 
dügno°ic
 
p›


	@Heap-Layers/heaps/special/nestedheap.h

27 #i‚de‡
_NESTEDHEAP_H_


28 
	#_NESTEDHEAP_H_


	)

30 
	~<as£π.h
>

38 
«me•a˚
 
	gHL
 {

40 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

41 ˛as†
	cNe°edHóp
 : 
public
 
Su≥rHóp
 {

42 
public
:

44 
Ne°edHóp
()

45 : 
∑ª¡
 (
NULL
),

46 
chûd
 (
NULL
),

47 
¥ev
 (
NULL
),

48 
√xt
 (
NULL
)

52 ~
Ne°edHóp
()

54 
˛ór
();

55 i‡(
	g∑ª¡
 !
NULL
) {

56 
∑ª¡
->
ªmoveChûd
 (
this
);

58 
ªmoveSiblög
 (
this
);

61 
ölöe
 
˛ór
() {

64 
	gSu≥rHóp
::
˛ór
();

71 i‡(
	gchûd
 !
NULL
) {

72 
Ne°edHóp
<
Su≥rHóp
> * 
√xtChûd
 = 
chûd
->
√xt
;

73 
	gchûd
 !
NULL
) {

74 
Ne°edHóp
<
Su≥rHóp
> * 
¥evChûd
 = 
chûd
->
¥ev
;

75 
dñëe
 
	gchûd
;

76 
	gchûd
 = 
¥evChûd
;

78 
	gchûd
 = 
√xtChûd
;

79 
	gchûd
 !
NULL
) {

80 
√xtChûd
 = 
chûd
->
√xt
;

81 
dñëe
 
	gchûd
;

82 
	gchûd
 = 
√xtChûd
;

85 
as£π
 (
chûd
 =
NULL
);

89 
	gNe°edHóp
<
	gSu≥rHóp
> * 
	gch
 = 
chûd
;

90 
	gch
 !
NULL
) {

91 
Ne°edHóp
<
Su≥rHóp
> * 
√xtChûd
 = 
ch
->
√xt
;

92 
	gch
->
˛ór
();

93 
	gch
 = 
√xtChûd
;

99 
addChûd
 (
Ne°edHóp
<
Su≥rHóp
> * 
ch
)

101 i‡(
	gchûd
 =
NULL
) {

102 
chûd
 = 
ch
;

103 
	gchûd
->
	g¥ev
 = 
NULL
;

104 
	gchûd
->
	g√xt
 = 
NULL
;

106 
as£π
 (
chûd
->
¥ev
 =
NULL
);

107 
as£π
 (
ch
->
√xt
 =
NULL
);

108 
	gch
->
	g¥ev
 = 
NULL
;

109 
	gch
->
	g√xt
 = 
chûd
;

110 
	gchûd
->
	g¥ev
 = 
ch
;

111 
	gchûd
 = 
ch
;

113 
	gchûd
->
	g∑ª¡
 = 
this
;

116 
	g¥iv©e
:

118 
ªmoveChûd
 (
Ne°edHóp
<
Su≥rHóp
> * 
ch
)

120 
as£π
 (
ch
 !
NULL
);

121 i‡(
	gchûd
 =
ch
) {

122 i‡(
ch
->
¥ev
) {

123 
chûd
 = 
ch
->
¥ev
;

124 } i‡(
	gch
->
	g√xt
) {

125 
	gchûd
 = 
ch
->
√xt
;

127 
	gchûd
 = 
NULL
;

130 
ªmoveSiblög
 (
ch
);

133 
ölöe
 
ªmoveSiblög
 (
Ne°edHóp
<
Su≥rHóp
> * 
sib
)

135 i‡(
	gsib
->
	g¥ev
) {

136 
	gsib
->
	g¥ev
->
	g√xt
 = 
sib
->
√xt
;

138 i‡(
	gsib
->
	g√xt
) {

139 
	gsib
->
	g√xt
->
	g¥ev
 = 
sib
->
¥ev
;

143 
	gNe°edHóp
<
	gSu≥rHóp
> * 
	g∑ª¡
;

144 
	gNe°edHóp
<
	gSu≥rHóp
> * 
	gchûd
;

145 
	gNe°edHóp
<
	gSu≥rHóp
> * 
	g¥ev
;

146 
	gNe°edHóp
<
	gSu≥rHóp
> * 
	g√xt
;

	@Heap-Layers/heaps/special/obstack.h

30 #i‚de‡
HL_OBSTACK_H


31 
	#HL_OBSTACK_H


	)

34 
	~<as£π.h
>

35 
	~<√w
>

37 
	~"utûôy/Æign.h
"

38 
	~"wøµîs/mÆlocöfo.h
"

45 
«me•a˚
 
	gHL
 {

47 
	gãm∂©e
 <
	gChunkSize
, 
˛ass
 
	gSu≥rHóp
>

48 ˛as†
	cOb°ackHóp
 : 
public
 
Su≥rHóp
 {

49 
public
:

51 
Ob°ackHóp
()

54 
cuºítChunk
 = 
makeChunk
 (
NULL
, 
ChunkSize
);

55 
	gcuºítBa£
 = 
√xtPos
 = (*Ë(
cuºítChunk
 + 1);

56 
as£π
 (
isVÆid
());

59 ~
Ob°ackHóp
() {

61 
as£π
 (
isVÆid
());

62 
ChunkHódî
 * 
	gch
 = 
cuºítChunk
;

63 
	gch
 !
NULL
) {

64 
ChunkHódî
 * 
pch
 = 
ch
->
gëPªvChunk
();

66 
	gSu≥rHóp
::
‰ì
 (
ch
);

67 
	gch
 = 
pch
;

73 
ölöe
 * 
grow
 (
size_t
 
sz
) {

76 
as£π
 (
isVÆid
());

77 i‡((Ë((*Ë
	gcuºítChunk
->
gëLimô
(Ë- (*Ë
	g√xtPos
Ë< 
	gsz
) {

78 
ChunkHódî
 * 
	g√wCuºít
 = 
c›yToNew
(
sz
);

79 i‡(
	g√wCuºít
 =
NULL
)

80  
NULL
;

83 i‡(
	gdñëeChunk
 !
NULL
) {

84 
Su≥rHóp
::
‰ì
 (
dñëeChunk
);

87 
as£π
 (
isVÆid
());

89 
as£π
 (((Ë((*Ë
cuºítChunk
->
gëLimô
(Ë- (*Ë
√xtPos
Ë>
sz
));

90 
as£π
 ((*Ë(
sz
 + 
√xtPos
Ë<
cuºítChunk
->
gëLimô
());

92 * 
	g¥evNextPos
 = 
√xtPos
;

93 
	g√xtPos
 +
sz
;

94 
as£π
 (
isVÆid
());

95  
	g¥evNextPos
;

99 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

100 
as£π
 (
isVÆid
());

101 i‡(
	gcuºítChunk
 =
NULL
) {

102  
NULL
;

107 i‡((Ë((*Ë
	gcuºítChunk
->
gëLimô
(Ë- (*Ë
	g√xtPos
Ë< 
	gsz
) {

109 
	gcuºítChunk
 = 
makeChunk
 (
cuºítChunk
, 
sz
);

110 i‡(
	gcuºítChunk
 =
NULL
) {

111  
NULL
;

113 
	gcuºítBa£
 = 
√xtPos
 = (*Ë(
cuºítChunk
 + 1);

114 
as£π
 (
isVÆid
());

116 
as£π
 (((Ë((*Ë
cuºítChunk
->
gëLimô
(Ë- (*Ë
√xtPos
Ë>
sz
));

117 
as£π
 ((*Ë(
sz
 + 
√xtPos
Ë<
cuºítChunk
->
gëLimô
());

119 
	gcuºítBa£
 = 
√xtPos
;

120 
	g√xtPos
 +
sz
;

121 * 
	g±r
 = 
cuºítBa£
;

122 
föÆize
();

123 
as£π
 (
isVÆid
());

124  (*Ë
	g±r
;

129 
ölöe
 
‰ì
 (* 
±r
) {

130 
as£π
 (
isVÆid
());

133 
	gcuºítChunk
 !
NULL
 &&

134 (((*Ë
cuºítChunk
 > (*Ë
±r
) ||

135 ((*Ë
cuºítChunk
->
gëLimô
(Ë< (*Ë
±r
))) {

136 
ChunkHódî
 * 
pch
 = 
cuºítChunk
;

137 
	gcuºítChunk
 = 
cuºítChunk
->
gëPªvChunk
();

138 
	gSu≥rHóp
::
‰ì
 (
pch
);

140 i‡(
	gcuºítChunk
 !
NULL
) {

141 
cuºítBa£
 = 
√xtPos
 = (*Ë
±r
;

142 
as£π
 (
isVÆid
());

144 i‡(
	g±r
 !
NULL
) {

147 
ab‹t
();

150 
	gcuºítChunk
 = 
makeChunk
 (
NULL
, 
ChunkSize
);

151 
	gcuºítBa£
 = 
√xtPos
 = (*Ë(
cuºítChunk
 + 1);

152 
as£π
 (
isVÆid
());

158 
ölöe
 * 
gëObje˘Ba£
() {

159 
as£π
 (
isVÆid
());

160  
	gcuºítBa£
;

164 
ölöe
 
föÆize
() {

165 
as£π
 (
isVÆid
());

166 
	g√xtPos
 = (*Ë
HL
::
Æign
<HL::
MÆlocInfo
::
Alignmít
>((Ë
√xtPos
);

167 
	gcuºítBa£
 = 
√xtPos
;

168 
as£π
 (
isVÆid
());

172 
	g¥iv©e
:

175 
ölöe
 
obje˘Size
() {

176 
diff
 = (Ë(
√xtPos
 - 
cuºítBa£
);

177 
as£π
 (
diff
 >= 0);

178  
	gdiff
;

182 
isVÆid
() {

184 #i‚de‡
NDEBUG


185 
boﬁ
 
	gc1
 = (
cuºítBa£
 <
√xtPos
);

186 
as£π
 (
c1
);

187 
boﬁ
 
	gc2
 = (
√xtPos
 <
cuºítChunk
->
gëLimô
());

188 
as£π
 (
c2
);

189 
boﬁ
 
	gc3
 = ((*Ë
cuºítChunk
 <cuºítChunk->
gëLimô
());

190 
as£π
 (
c3
);

191 
boﬁ
 
	gc4
 = ((*Ë
cuºítChunk
 <
cuºítBa£
);

192 
as£π
 (
c4
);

193 
boﬁ
 
	gc5
 = (
cuºítChunk
 !cuºítChunk->
gëPªvChunk
());

194 
as£π
 (
c5
);

195 
boﬁ
 
	gc6
 = (
obje˘Size
() >= 0);

196 
as£π
 (
c6
);

197  (
	gc1
 && 
	gc2
 && 
	gc3
 && 
	gc4
 && 
	gc5
 && 
	gc6
);

204 ˛as†
	cChunkHódî
 {

205 
	gpublic
:

206 
ölöe
 
ChunkHódî
 (ChunkHódî * 
¥ev
, 
size_t
 
sz
)

207 : 
_∑°End
 ((*Ë(
this
 + 1Ë+ 
sz
),

208 
_¥evChunk
 (
¥ev
)

212 
ölöe
 * 
gëLimô
(Ë{  
	g_∑°End
; }

215 
ölöe
 
ChunkHódî
 * 
gëPªvChunk
(Ë{  
	g_¥evChunk
; }

217 
	g¥iv©e
:

219 * 
_∑°End
;

222 
ChunkHódî
 * 
	g_¥evChunk
;

227 
ölöe
 
ChunkHódî
 * 
makeChunk
 (ChunkHódî * 
ch
, 
size_t
 
sz
) {

229 
size_t
 
	gÆlocSize


230 
HL
::
Æign
<()>((
sz
 > 
ChunkSize
 - (
ChunkHódî
)) ? sz : ChunkSize - (ChunkHeader));

232 
ChunkHódî
 * 
	g√wChunk


233 
√w
 (
Su≥rHóp
::
mÆloc
 ((
ChunkHódî
Ë+ 
ÆlocSize
)ËChunkHódî (
ch
,állocSize);

234  
	g√wChunk
;

240 
ölöe
 
ChunkHódî
 * 
c›yToNew
 (
size_t
 
sz
) {

241 
size_t
 
	gobj_size
 = 
obje˘Size
();

242 
size_t
 
	g√w_size
 = 
obj_size
 + 
sz
 + (obj_size >> 3) + 100;

244 
ChunkHódî
 * 
	g√wChunk
;

247 
ChunkHódî
 * 
	gdñëeChunk
 = 
NULL
;

250 i‡(
	gcuºítBa£
 =(*Ë(
cuºítChunk
 + 1)) {

251 
√wChunk
 = 
makeChunk
 (
cuºítChunk
->
gëPªvChunk
(), 
√w_size
);

252 
	gdñëeChunk
 = 
cuºítChunk
;

254 
	g√wChunk
 = 
makeChunk
 (
cuºítChunk
, 
√w_size
);

257 
	g√wChunk
 = 
makeChunk
 (
cuºítChunk
, 
√w_size
);

259 i‡(
	g√wChunk
 =
NULL
) {

260 
cuºítChunk
 = 
NULL
;

261  
	gNULL
;

264 
mem˝y
 ((*Ë(
√wChunk
 + 1), 
cuºítBa£
, 
obj_size
);

265 
	gcuºítChunk
 = 
√wChunk
;

266 
	gcuºítBa£
 = (*Ë(
cuºítChunk
 + 1);

267 
	g√xtPos
 = 
cuºítBa£
 + 
obj_size
;

269 i‡(
	gdñëeChunk
 !
NULL
) {

270 
Su≥rHóp
::
‰ì
 (
dñëeChunk
);

273  
	gcuºítChunk
;

278 * 
	gcuºítBa£
;

281 * 
	g√xtPos
;

284 
ChunkHódî
 * 
	gcuºítChunk
;

290 
	sob°ack
 {

291 * 
	g_dummy
[3];

	@Heap-Layers/heaps/special/obstackheap.h

29 #i‚de‡
HL_OBSTACKHEAP_H


30 
	#HL_OBSTACKHEAP_H


	)

32 
	~<as£π.h
>

33 
	~<√w
>

35 
	~"utûôy/Æign.h
"

37 
«me•a˚
 
	gHL
 {

39 
	gãm∂©e
 <
	gChunkSize
, 
˛ass
 
	gSu≥rHóp
>

40 ˛as†
	cOb°ackHóp
 : 
public
 
Su≥rHóp
 {

41 
public
:

43 íum { 
Alignmít
 = () };

45 
Ob°ackHóp
()

48 
	gcuºítChunk
 = 
makeChunk
 (
NULL
, 
ChunkSize
);

49 
	gcuºítBa£
 = 
√xtPos
 = (*Ë(
cuºítChunk
 + 1);

50 
as£π
 (
isVÆid
());

53 ~
Ob°ackHóp
() {

55 
as£π
 (
isVÆid
());

56 
ChunkHódî
 * 
	gch
 = 
cuºítChunk
;

57 
	gch
 !
NULL
) {

58 
ChunkHódî
 * 
pch
 = 
ch
->
gëPªvChunk
();

60 
	gSu≥rHóp
::
‰ì
 (
ch
);

61 
	gch
 = 
pch
;

67 
ölöe
 * 
grow
 (
size_t
 
sz
) {

70 
as£π
 (
isVÆid
());

71 i‡((Ë((*Ë
	gcuºítChunk
->
gëLimô
(Ë- (*Ë
	g√xtPos
Ë< 
	gsz
) {

72 
ChunkHódî
 * 
	g√wCuºít
 = 
c›yToNew
(
sz
);

73 i‡(
	g√wCuºít
 =
NULL
)

74  
NULL
;

77 i‡(
	gdñëeChunk
 !
NULL
) {

78 
Su≥rHóp
::
‰ì
 (
dñëeChunk
);

81 
as£π
 (
isVÆid
());

83 
as£π
 (((Ë((*Ë
cuºítChunk
->
gëLimô
(Ë- (*Ë
√xtPos
Ë>
sz
));

84 
as£π
 ((*Ë(
sz
 + 
√xtPos
Ë<
cuºítChunk
->
gëLimô
());

86 * 
	g¥evNextPos
 = 
√xtPos
;

87 
	g√xtPos
 +
sz
;

88 
as£π
 (
isVÆid
());

89  
	g¥evNextPos
;

93 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

94 
as£π
 (
isVÆid
());

95 i‡(
	gcuºítChunk
 =
NULL
) {

96  
NULL
;

101 i‡((Ë((*Ë
	gcuºítChunk
->
gëLimô
(Ë- (*Ë
	g√xtPos
Ë< 
	gsz
) {

103 
	gcuºítChunk
 = 
makeChunk
 (
cuºítChunk
, 
sz
);

104 i‡(
	gcuºítChunk
 =
NULL
) {

105  
NULL
;

107 
	gcuºítBa£
 = 
√xtPos
 = (*Ë(
cuºítChunk
 + 1);

108 
as£π
 (
isVÆid
());

110 
as£π
 (((Ë((*Ë
cuºítChunk
->
gëLimô
(Ë- (*Ë
√xtPos
Ë>
sz
));

111 
as£π
 ((*Ë(
sz
 + 
√xtPos
Ë<
cuºítChunk
->
gëLimô
());

113 
	gcuºítBa£
 = 
√xtPos
;

114 
	g√xtPos
 +
sz
;

115 * 
	g±r
 = 
cuºítBa£
;

116 
föÆize
();

117 
as£π
 (
isVÆid
());

118  (*Ë
	g±r
;

123 
ölöe
 
‰ì
 (* 
±r
) {

124 
as£π
 (
isVÆid
());

127 
	gcuºítChunk
 !
NULL
 &&

128 (((*Ë
cuºítChunk
 > (*Ë
±r
) ||

129 ((*Ë
cuºítChunk
->
gëLimô
(Ë< (*Ë
±r
))) {

130 
ChunkHódî
 * 
pch
 = 
cuºítChunk
;

131 
	gcuºítChunk
 = 
cuºítChunk
->
gëPªvChunk
();

132 
	gSu≥rHóp
::
‰ì
 (
pch
);

134 i‡(
	gcuºítChunk
 !
NULL
) {

135 
cuºítBa£
 = 
√xtPos
 = (*Ë
±r
;

136 
as£π
 (
isVÆid
());

138 i‡(
	g±r
 !
NULL
) {

141 
ab‹t
();

144 
	gcuºítChunk
 = 
makeChunk
 (
NULL
, 
ChunkSize
);

145 
	gcuºítBa£
 = 
√xtPos
 = (*Ë(
cuºítChunk
 + 1);

146 
as£π
 (
isVÆid
());

152 
ölöe
 * 
gëObje˘Ba£
() {

153 
as£π
 (
isVÆid
());

154  
	gcuºítBa£
;

158 
ölöe
 
föÆize
() {

159 
as£π
 (
isVÆid
());

160 
	g√xtPos
 = (*Ë
HL
::
Æign
<
Alignmít
> ((
size_t
Ë
√xtPos
);

161 
	gcuºítBa£
 = 
√xtPos
;

162 
as£π
 (
isVÆid
());

166 
	g¥iv©e
:

169 
ölöe
 
obje˘Size
() {

170 
diff
 = (Ë(
√xtPos
 - 
cuºítBa£
);

171 
as£π
 (
diff
 >= 0);

172  
	gdiff
;

176 
isVÆid
() {

178 #i‚de‡
NDEBUG


179 
boﬁ
 
	gc1
 = (
cuºítBa£
 <
√xtPos
);

180 
as£π
 (
c1
);

181 
boﬁ
 
	gc2
 = (
√xtPos
 <
cuºítChunk
->
gëLimô
());

182 
as£π
 (
c2
);

183 
boﬁ
 
	gc3
 = ((*Ë
cuºítChunk
 <cuºítChunk->
gëLimô
());

184 
as£π
 (
c3
);

185 
boﬁ
 
	gc4
 = ((*Ë
cuºítChunk
 <
cuºítBa£
);

186 
as£π
 (
c4
);

187 
boﬁ
 
	gc5
 = (
cuºítChunk
 !cuºítChunk->
gëPªvChunk
());

188 
as£π
 (
c5
);

189 
boﬁ
 
	gc6
 = (
obje˘Size
() >= 0);

190 
as£π
 (
c6
);

191  (
	gc1
 && 
	gc2
 && 
	gc3
 && 
	gc4
 && 
	gc5
 && 
	gc6
);

198 ˛as†
	cChunkHódî
 {

199 
	gpublic
:

200 
ölöe
 
ChunkHódî
 (ChunkHódî * 
¥ev
, 
size_t
 
sz
)

201 : 
_∑°End
 ((*Ë(
this
 + 1Ë+ 
sz
),

202 
_¥evChunk
 (
¥ev
)

206 
ölöe
 * 
gëLimô
(Ë{  
	g_∑°End
; }

209 
ölöe
 
ChunkHódî
 * 
gëPªvChunk
(Ë{  
	g_¥evChunk
; }

211 
	g¥iv©e
:

213 * 
_∑°End
;

216 
ChunkHódî
 * 
	g_¥evChunk
;

220 
ölöe
 
ChunkHódî
 * 
makeChunk
 (ChunkHódî * 
ch
, 
size_t
 
sz
) {

222 
size_t
 
	gÆlocSize


223 
HL
::
Æign
<
Alignmít
>((
sz
 > 
ChunkSize
 - (
ChunkHódî
)) ? sz : ChunkSize - (ChunkHeader));

225 * 
	g±r
 = 
Su≥rHóp
::
mÆloc
 ((
ChunkHódî
Ë+ 
ÆlocSize
);

226 i‡(
	g±r
 =
NULL
) {

227  
NULL
;

229 
ChunkHódî
 * 
	g√wChunk


230 
√w
 (
±r
Ë
ChunkHódî
 (
ch
, 
ÆlocSize
);

231  
	g√wChunk
;

237 
ölöe
 
ChunkHódî
 * 
c›yToNew
 (
size_t
 
sz
) {

238 
size_t
 
	gobj_size
 = 
obje˘Size
();

239 
size_t
 
	g√w_size
 = 
obj_size
 + 
sz
 + (obj_size >> 3) + 100;

241 
ChunkHódî
 * 
	g√wChunk
;

244 
ChunkHódî
 * 
	gdñëeChunk
 = 
NULL
;

247 i‡(
	gcuºítBa£
 =(*Ë(
cuºítChunk
 + 1)) {

248 
√wChunk
 = 
makeChunk
 (
cuºítChunk
->
gëPªvChunk
(), 
√w_size
);

249 
	gdñëeChunk
 = 
cuºítChunk
;

251 
	g√wChunk
 = 
makeChunk
 (
cuºítChunk
, 
√w_size
);

254 
	g√wChunk
 = 
makeChunk
 (
cuºítChunk
, 
√w_size
);

256 i‡(
	g√wChunk
 =
NULL
) {

257 
cuºítChunk
 = 
NULL
;

258  
	gNULL
;

261 
mem˝y
 ((*Ë(
√wChunk
 + 1), 
cuºítBa£
, 
obj_size
);

262 
	gcuºítChunk
 = 
√wChunk
;

263 
	gcuºítBa£
 = (*Ë(
cuºítChunk
 + 1);

264 
	g√xtPos
 = 
cuºítBa£
 + 
obj_size
;

266 i‡(
	gdñëeChunk
 !
NULL
) {

267 
Su≥rHóp
::
‰ì
 (
dñëeChunk
);

270  
	gcuºítChunk
;

275 * 
	gcuºítBa£
;

278 * 
	g√xtPos
;

281 
ChunkHódî
 * 
	gcuºítChunk
;

	@Heap-Layers/heaps/special/obstackreap.h

3 #i‚de‡
HL_OBSTACKREAP_H


4 
	#HL_OBSTACKREAP_H


	)

6 
	~<as£π.h
>

14 #i‡
WIN32


15 
	~<wödows.h
>

18 
	~"utûôy/dy«ºay.h
"

20 
«me•a˚
 
	gOb°ackRópNS
 {

23 
	gãm∂©e
 <
˛ass
 
	gObjTy≥
>

24 ˛as†
	cDy«micAºay
 {

25 
	gpublic
:

26 
Dy«micAºay
()

27 : 
öã∫ÆAºay
 (0),

28 
öã∫ÆAºayLígth
 (0)

31 ~
Dy«micAºay
()

33 
˛ór
();

38 
ölöe
 
˛ór
() {

39 i‡(
	göã∫ÆAºay
) {

40 
	gdñëe
 [] 
	göã∫ÆAºay
;

41 
	göã∫ÆAºay
 = 0;

42 
	göã∫ÆAºayLígth
 = 0;

50 
ölöe
 c⁄° 
	gObjTy≥
& 
	g›î©‹
[] (
	gödex
) const {

51 
as£π
 (
ödex
 < 
öã∫ÆAºayLígth
);

52 
as£π
 (
ödex
 >= 0);

53  
	göã∫ÆAºay
[
ödex
];

59 
ölöe
 
	gObjTy≥
& 
	g›î©‹
[] (
	gödex
) {

60 
as£π
 (
ödex
 >= 0);

61 i‡(
	gödex
 >
öã∫ÆAºayLígth
) {

66 c⁄° 
√wSize
 = 
ödex
 * 2 + 1;

67 
ObjTy≥
 * 
	g¨r
 = 
√w
 ObjTy≥[
√wSize
];

69 #i‡
MALLOC_TRACE


70 
¥ötf
 ("m %x %d\n", 
¨r
, 
√wSize
 * (
ObjTy≥
));

72 i‡(
	göã∫ÆAºay
) {

73 
mem˝y
 (
¨r
, 
öã∫ÆAºay
, 
öã∫ÆAºayLígth
 * (
ObjTy≥
));

74 
	gdñëe
 [] 
	göã∫ÆAºay
;

75 #i‡
MALLOC_TRACE


76 
¥ötf
 ("‡%x\n", 
öã∫ÆAºay
);

79 
	göã∫ÆAºay
 = 
¨r
;

80 
	göã∫ÆAºayLígth
 = 
√wSize
;

83  
	göã∫ÆAºay
[
ödex
];

90 
ölöe
 
åim
 (
√…s
) {

95 i‡(
	göã∫ÆAºay
) {

96 i‡(
	g√…s
 * 4 < 
	göã∫ÆAºayLígth
) {

97 c⁄° 
	g√wSize
 = 
√…s
 * 2;

98 
ObjTy≥
 * 
	g¨r
 = 
√w
 ObjTy≥[
√wSize
];

100 #i‡
MALLOC_TRACE


101 
¥ötf
 ("m %x %d\n", 
¨r
, 
√wSize
 * (
ObjTy≥
));

103 
mem˝y
 (
¨r
, 
öã∫ÆAºay
, (
ObjTy≥
Ë* 
√…s
);

104 
	gdñëe
 [] 
	göã∫ÆAºay
;

105 #i‡
MALLOC_TRACE


106 
¥ötf
 ("‡%x\n", 
öã∫ÆAºay
);

108 
	göã∫ÆAºay
 = 
¨r
;

109 
	göã∫ÆAºayLígth
 = 
√wSize
;

111 
as£π
 (
√…s
 <
öã∫ÆAºayLígth
);

116 
	g¥iv©e
:

120 
ObjTy≥
 * 
öã∫ÆAºay
;

124 
	göã∫ÆAºayLígth
;

128 
	gãm∂©e
 <
˛ass
 
	gOBJTYPE
>

129 ˛as†
	cDynSèck
 {

130 
	gpublic
:

131 
DynSèck
()

132 : 
numIãms
 (0)

134 
ôems
[0] = 0;

137 
Àngth
(Ëc⁄° {  
	gnumIãms
; }

139 
ölöe
 
push
 (
OBJTYPE
 * 
±r
) {

140 
	gnumIãms
++;

141 
	gôems
[
numIãms
] = 
±r
;

144 
ölöe
 
OBJTYPE
 * 
p›
() {

145 
OBJTYPE
 * 
	g±r
 = 0;

146 i‡(
	gnumIãms
 > 0) {

147 
	g±r
 = 
ôems
[
numIãms
];

148 
	gnumIãms
--;

150 
	gôems
.
åim
 (
numIãms
 + 1);

152  
	g±r
;

155 
ölöe
 
OBJTYPE
 * 
t›
() {

156 
OBJTYPE
 * 
	g±r
 = 
NULL
;

157 i‡(
	gnumIãms
 > 0) {

158 
	g±r
 = 
ôems
[
numIãms
];

160  
	g±r
;

163 
ölöe
 
˛ór
() {

164 
	gôems
.
˛ór
();

167 
	g¥iv©e
:

174 
numIãms
;

178 
	gHL
::
Dy«micAºay
<
OBJTYPE
 *> 
ôems
;

186 
	gãm∂©e
 <
˛ass
 
	gRópTy≥
>

187 ˛as†
	cOb°ackRóp
 {

188 
	mpublic
:

190 
	$Ob°ackRóp
()

192 
cuºítRóp
 = 
√w
 
RópTy≥
;

193 
	`öôCuºítObje˘
();

196 ~
	$Ob°ackRóp
() {

197 
RópTy≥
 * 
r
;

198 (
r
 = 
ª≠Sèck
.
	`p›
())) {

199 
dñëe
 
r
;

201 
dñëe
 
cuºítRóp
;

202 
dñëe
 
cuºítObje˘
;

203 
	}
}

205 
ölöe
 * 
mÆloc
 (
size_t
 
sz
);

206 
ölöe
 
‰ìA·î
 (* 
±r
);

207 
ölöe
 
‰ìAŒ
();

208 
ölöe
 * 
gëObje˘Ba£
();

209 
ölöe
 
föÆize
();

210 
ölöe
 * 
grow
 (
size_t
 
sz
);

212 
	g¥iv©e
:

214 
ölöe
 
öôCuºítObje˘
();

217 
‰ì
 (*);

219 íum { 
	gINITIAL_OBJECT_SIZE
 = 8 * () };

221 * 
	gcuºítObje˘
;

222 * 
	gcuºítObje˘Posôi⁄
;

223 
size_t
 
	gcuºítObje˘Size
;

224 
size_t
 
	ga˘uÆObje˘Size
;

225 
boﬁ
 
	gisCuºítObje˘Expo£d
;

226 
RópTy≥
 * 
	gcuºítRóp
;

227 
	gOb°ackRópNS
::
DynSèck
<
RópTy≥
> 
ª≠Sèck
;

231 
	gãm∂©e
 <
˛ass
 
	gRópTy≥
>

232 
	gOb°ackRóp
<
	gRópTy≥
>::
	$öôCuºítObje˘
() {

233 
cuºítObje˘
 = 
cuºítRóp
->
	`mÆloc
 (
INITIAL_OBJECT_SIZE
);

234 
cuºítObje˘Posôi⁄
 = (*Ë
cuºítObje˘
;

235 
cuºítObje˘Size
 = 0;

236 
a˘uÆObje˘Size
 = 
INITIAL_OBJECT_SIZE
;

237 
isCuºítObje˘Expo£d
 = 
Ál£
;

238 
	}
}

240 
	gãm∂©e
 <
˛ass
 
	gRópTy≥
>

241 * 
	gOb°ackRóp
<
	gRópTy≥
>::
	$mÆloc
 (
size_t
 
sz
) {

242 i‡(!
isCuºítObje˘Expo£d
) {

243  
cuºítRóp
->
	`mÆloc
 (
sz
);

245 * 
±r
 = 
cuºítRóp
->
	`ªÆloc
 (
cuºítObje˘
, 
sz
);

246 
ª≠Sèck
.
	`push
 (
cuºítRóp
);

247 
cuºítRóp
 = 
√w
 
RópTy≥
;

248 
	`öôCuºítObje˘
();

249  
±r
;

251 
	}
}

253 
	gãm∂©e
 <
˛ass
 
	gRópTy≥
>

254 
	gOb°ackRóp
<
	gRópTy≥
>::
	$‰ìA·î
 (* 
±r
) {

255 
cuºítRóp
 && (!cuºítRóp->
	`föd
(
±r
))) {

256 
dñëe
 
cuºítRóp
;

257 
cuºítRóp
 = 
ª≠Sèck
.
	`p›
();

259 
	}
}

261 
	gãm∂©e
 <
˛ass
 
	gRópTy≥
>

262 
	gOb°ackRóp
<
	gRópTy≥
>::
	$‰ìAŒ
() {

263 
cuºítRóp
) {

264 
dñëe
 
cuºítRóp
;

265 
cuºítRóp
 = 
ª≠Sèck
.
	`p›
();

267 
cuºítRóp
 = 
√w
 
RópTy≥
;

268 
	}
}

271 
	gãm∂©e
 <
˛ass
 
	gRópTy≥
>

272 
ölöe
 * 
	gOb°ackRóp
<
	gRópTy≥
>::
	$gëObje˘Ba£
() {

273 
isCuºítObje˘Expo£d
 = 
åue
;

274  
cuºítObje˘
;

275 
	}
}

277 
	gãm∂©e
 <
˛ass
 
	gRópTy≥
>

278 
ölöe
 
	gOb°ackRóp
<
	gRópTy≥
>::
	$föÆize
() {

279 i‡(
isCuºítObje˘Expo£d
) {

280 
ª≠Sèck
.
	`push
 (
cuºítRóp
);

281 
cuºítRóp
 = 
√w
 
RópTy≥
;

283 
	`öôCuºítObje˘
();

284 
	}
}

286 
	gãm∂©e
 <
˛ass
 
	gRópTy≥
>

287 
ölöe
 * 
	gOb°ackRóp
<
	gRópTy≥
>::
	$grow
 (
size_t
 
sz
) {

289 c⁄° 
ªque°edObje˘Size
 = 
cuºítObje˘Size
 + 
sz
;

291 i‡(
ªque°edObje˘Size
 > 
a˘uÆObje˘Size
) {

292 * 
±r
 = 
cuºítRóp
->
	`ªÆloc
 (
cuºítObje˘
, 
sz
);

293 
cuºítObje˘Posôi⁄
 = (*Ë
±r
 + (cuºítObje˘Posôi⁄ - (*Ë
cuºítObje˘
);

294 i‡(
isCuºítObje˘Expo£d
) {

295 
ª≠Sèck
.
	`push
 (
cuºítRóp
);

296 
cuºítRóp
 = 
√w
 
RópTy≥
;

298 
cuºítObje˘
 = 
±r
;

304 
isCuºítObje˘Expo£d
 = 
Ál£
;

305 
cuºítObje˘Size
 +
sz
;

306 * 
ﬁdPosôi⁄
 = 
cuºítObje˘Posôi⁄
;

307 
cuºítObje˘Posôi⁄
 +
sz
;

308  
ﬁdPosôi⁄
;

309 
	}
}

	@Heap-Layers/heaps/special/sbrk.c

1 
	~<as£π.h
>

2 
	~<wödows.h
>

3 
	~<¥o˚ss.h
>

7 * 
	$sbrk
 (
size
) {

14 
	#PRE_RESERVE
 1024 * 1024 * 1024

	)

16 
ªmaöögRe£rved
 = 
PRE_RESERVE
;

18 
öôülized
 = 0;

19 * 
cuºítPosôi⁄
 = 
NULL
;

20 * 
√xtPage
 = 
NULL
;

21 
ªmaöögCommôãd
 = 0;

22 
∑geSize
;

23 * 
p
;

25 i‡(!
öôülized
) {

35 
SYSTEM_INFO
 
sSysInfo
;

36 
LPVOID
 
ba£
;

37 
	`GëSy°emInfo
(&
sSysInfo
);

39 
∑geSize
 = 
sSysInfo
.
dwPageSize
;

44 
ba£
 = 
	`VútuÆAŒoc
(
NULL
, 
ªmaöögRe£rved
, 
MEM_RESERVE
, 
PAGE_NOACCESS
);

46 
ba£
 = 
	`VútuÆAŒoc
(
NULL
, 
ªmaöögRe£rved
, 
MEM_COMMIT
 | 
MEM_RESERVE
, 
PAGE_EXECUTE_READWRITE
);

47 
ªmaöögCommôãd
 = 
PRE_RESERVE
;

50 i‡(
ba£
 =
NULL
 )

51 
	`exô
 (1);

53 
cuºítPosôi⁄
 = 
√xtPage
 = (*Ë
ba£
;

54 
öôülized
 = 1;

57 i‡(
size
 < 0) {

66 
byãsToUncommô
 = (-
size
 & ~(
∑geSize
 - 1));

68 i‡(
byãsToUncommô
 > 
PRE_RESERVE
 - 
ªmaöögRe£rved
) {

71  
cuºítPosôi⁄
;

74 i‡(
byãsToUncommô
 > 0) {

76 
ªsu…
 = 
	`VútuÆFªe
 (
√xtPage
 - 
byãsToUncommô
, byãsToUncommô, 
MEM_DECOMMIT
);

77 i‡(
ªsu…
 == 0) {

79  
cuºítPosôi⁄
;

81 
ªmaöögCommôãd
 -
byãsToUncommô
;

84 
cuºítPosôi⁄
 -
size
;

85 
ªmaöögRe£rved
 +
size
;

87  
cuºítPosôi⁄
;

91 i‡(
size
 > 0) {

92 * 
p
;

93 i‡(
size
 > 
ªmaöögCommôãd
) {

100 
byãsToCommô
 = (
size
 - 
ªmaöögCommôãd
 + 
∑geSize
 - 1) & ~(pageSize - 1);

101 * 
ªsu…
;

103 
ªsu…
 = 
	`VútuÆAŒoc
((
LPVOID
Ë
√xtPage
, 
byãsToCommô
, 
MEM_COMMIT
, 
PAGE_EXECUTE_READWRITE
);

105 i‡(
ªsu…
 =
NULL
 )

106 
	`exô
 (1);

108 
√xtPage
 +
byãsToCommô
;

109 
ªmaöögCommôãd
 +
byãsToCommô
;

112 
p
 = 
cuºítPosôi⁄
;

113 
cuºítPosôi⁄
 +
size
;

114 
ªmaöögCommôãd
 -
size
;

115 
ªmaöögRe£rved
 -
size
;

116  
p
;

119 
	`as£π
 (
size
 == 0);

120  
cuºítPosôi⁄
;

122 
	}
}

	@Heap-Layers/heaps/special/xallocheap.h

27 #i‚de‡
HL_XALLOCHEAP_H


28 
	#HL_XALLOCHEAP_H


	)

30 
	~<c°ddef
>

31 
	~<utûôy/Æign.h
>

33 
«me•a˚
 
	gHL
 {

35 
	gãm∂©e
 <
	gAª«Size
, 
˛ass
 
	gSu≥rHóp
>

36 ˛as†
	cXÆlocHóp
 : 
public
 
Su≥rHóp
 {

38 
public
:

40 
ölöe
 
XÆlocHóp
() {

41 
°¨t_of_¨øy
 = (*Ë
Su≥rHóp
::
mÆloc
 (
Aª«Size
);

42 
	gíd_of_¨øy
 = 
°¨t_of_¨øy
 + 
HL
::
Æign
<()>((
Nuggõ
));

43 
size_lvÆ
(
íd_of_¨øy
) = 0;

44 
	gœ°_block
 = 
NULL
;

47 
	gölöe
 ~
XÆlocHóp
() {

48 
	gSu≥rHóp
::
‰ì
 (
°¨t_of_¨øy
);

51 
ölöe
 * 
mÆloc
 (
size_t
 
size
) {

52 * 
	gﬁd_íd_of_¨øy
 = 
íd_of_¨øy
;

53 
	gíd_of_¨øy
 +
HL
::
Æign
<()>(
size
 + (
Nuggõ
));

54 i‡(
	gﬁd_íd_of_¨øy
 + 
	gsize
 >
°¨t_of_¨øy
 + 
Aª«Size
) {

56  
NULL
;

58 
size_lvÆ
(
íd_of_¨øy
Ëíd_of_¨øy - 
ﬁd_íd_of_¨øy
;

59 
˛ór_u£
(
íd_of_¨øy
);

60 
£t_u£
(
ﬁd_íd_of_¨øy
);

61 
	gœ°_block
 = 
ﬁd_íd_of_¨øy
;

62  
	gﬁd_íd_of_¨øy
;

65 
ölöe
 
‰ì
 (* 
±r
) {

66 * 
	gp
 = (*Ë
±r
;

67 * 
	gq
;

70 
˛ór_u£
(
p
);

71 i‡(
	gp
 =
œ°_block
) {

73 
q
 = 
¥ev_block
(
p
);

74 i‡(
	gq
 =
p
) {

75 
œ°_block
 = 
NULL
;

76 
	gíd_of_¨øy
 = 
p
;

79 i‡(
ö_u£
(
q
)) {

80 
	gœ°_block
 = 
q
;

81 
	gíd_of_¨øy
 = 
p
;

84 
	gp
 = 
q
;

89 
	g¥iv©e
:

91 
ölöe
 
size_t
& 
size_lvÆ
 (* 
x
) {

92  (((
Nuggõ
 *)(((*)
x
Ë- (Nuggõ)))->
size
);

95 
ölöe
 * 
¥ev_block
 (* 
x
) {

96  (((*Ë
	gx
Ë- (
size_lvÆ
(
x
) & (~1)));

99 
ölöe
 
ö_u£
 (* 
x
) {

100  (
size_lvÆ
(
x
) & (1));

103 
ölöe
 
£t_u£
 (* 
x
) {

104 (
size_lvÆ
(
x
) |= (1));

107 
ölöe
 
˛ór_u£
 (* 
x
) {

108 (
size_lvÆ
(
x
) &= (~1));

111 ˛as†
	cNuggõ
 {

112 
	gpublic
:

113 
size_t
 
size
;

116 * 
	gíd_of_¨øy
;

117 * 
	g°¨t_of_¨øy
;

118 * 
	gœ°_block
;

	@Heap-Layers/heaps/special/zoneheap.h

38 #i‚de‡
HL_ZONEHEAP_H


39 
	#HL_ZONEHEAP_H


	)

41 
	~<as£π.h
>

43 
	~"utûôy/Æign.h
"

44 
	~"wøµîs/mÆlocöfo.h
"

45 
	~"utûôy/ßs£π.h
"

47 
«me•a˚
 
	gHL
 {

49 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
, 
size_t
 
	gChunkSize
>

50 ˛as†
	cZ⁄eHóp
 : 
public
 
Su≥rHóp
 {

51 
public
:

53 íum { 
Alignmít
 = 
Su≥rHóp
::Alignment };

55 
Z⁄eHóp
()

56 : 
_sizeRemaöög
 (-1),

57 
_cuºítAª«
 (
NULL
),

58 
_∑°Aª«s
 (
NULL
)

61 ~
Z⁄eHóp
()

65 
Aª«
 * 
	g±r
 = 
_∑°Aª«s
;

66 
	g±r
 !
NULL
) {

67 * 
ﬁdPå
 = (*Ë
±r
;

68 
	g±r
 = 
±r
->
√xtAª«
;

70 
	gSu≥rHóp
::
‰ì
 (
ﬁdPå
);

72 i‡(
	g_cuºítAª«
 !
NULL
)

74 
Su≥rHóp
::
‰ì
 ((*Ë
_cuºítAª«
);

77 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

78 * 
	g±r
 = 
z⁄eMÆloc
 (
sz
);

79 
as£π
 ((
size_t
Ë
±r
 % 
Alignmít
 == 0);

80  
	g±r
;

84 
ölöe
 
‰ì
 (*) {}

87 
ölöe
 
ªmove
 (*) {  0; }

90 
	g¥iv©e
:

92 
Z⁄eHóp
 (const ZoneHeap&);

93 
	gZ⁄eHóp
& 
	g›î©‹
=(c⁄° 
Z⁄eHóp
&);

95 
ölöe
 * 
z⁄eMÆloc
 (
size_t
 
sz
) {

96 * 
	g±r
;

98 
	gsz
 = 
HL
::
Æign
<HL::
MÆlocInfo
::
Alignmít
>(
sz
);

100 i‡((
	g_cuºítAª«
 =
NULL
Ë|| (
_sizeRemaöög
 < (Ë
sz
)) {

102 i‡(
_cuºítAª«
 !
NULL
) {

103 
_cuºítAª«
->
√xtAª«
 = 
_∑°Aª«s
;

104 
	g_∑°Aª«s
 = 
_cuºítAª«
;

107 
size_t
 
	gÆlocSize
 = 
ChunkSize
;

108 i‡(
	gÆlocSize
 < 
	gsz
) {

109 
	gÆlocSize
 = 
sz
;

111 
	g_cuºítAª«
 =

112 (
Aª«
 *Ë
Su≥rHóp
::
mÆloc
 (
ÆlocSize
 + (Arena));

113 i‡(
	g_cuºítAª«
 =
NULL
) {

114  
NULL
;

116 
	g_cuºítAª«
->
	g¨íaS∑˚
 = (*Ë(
_cuºítAª«
 + 1);

117 
	g_cuºítAª«
->
	g√xtAª«
 = 
NULL
;

118 
	g_sizeRemaöög
 = 
ChunkSize
;

121 
	g_sizeRemaöög
 -
sz
;

122 
	g±r
 = 
_cuºítAª«
->
¨íaS∑˚
;

123 
	g_cuºítAª«
->
	g¨íaS∑˚
 +
sz
;

124 
as£π
 (
±r
 !
NULL
);

125 
as£π
 ((
size_t
Ë
±r
 % 
Su≥rHóp
::
Alignmít
 == 0);

126  
	g±r
;

129 ˛as†
	cAª«
 {

130 
	gpublic
:

131 
Aª«
() {

132 
ßs£π
<((
Aª«
Ë% 
HL
::
MÆlocInfo
::
Alignmít
 =0)> 
vîifyAlignmít
;

135 
Aª«
 * 
	g√xtAª«
;

136 * 
	g¨íaS∑˚
;

140 
	g_sizeRemaöög
;

143 
Aª«
 * 
	g_cuºítAª«
;

146 
Aª«
 * 
	g_∑°Aª«s
;

	@Heap-Layers/heaps/threads/all.h

1 
	~"lockedhóp.h
"

2 
	~"phŸhªadhóp.h
"

3 
	~"thªadhóp.h
"

4 
	~"thªad•ecifichóp.h
"

5 
	~"sizëhªadhóp.h
"

	@Heap-Layers/heaps/threads/lockedheap.h

27 #i‚de‡
HL_LOCKEDHEAP_H


28 
	#HL_LOCKEDHEAP_H


	)

30 
	~<c°ddef
>

31 
	~"utûôy/gu¨d.h
"

33 
«me•a˚
 
	gHL
 {

35 
	gãm∂©e
 <
˛ass
 
	gLockTy≥
, cœs†
	gSu≥r
>

36 ˛as†
	cLockedHóp
 : 
public
 
Su≥r
 {

37 
public
:

39 íum { 
Alignmít
 = 
Su≥r
::Alignment };

41 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

42 
	gGu¨d
<
	gLockTy≥
> 
l
 (
thñock
);

43  
	gSu≥r
::
mÆloc
 (
sz
);

46 
ölöe
 
‰ì
 (* 
±r
) {

47 
	gGu¨d
<
	gLockTy≥
> 
l
 (
thñock
);

48 
	gSu≥r
::
‰ì
 (
±r
);

51 
ölöe
 
size_t
 
gëSize
 (* 
±r
) const {

52 
	gGu¨d
<
	gLockTy≥
> 
l
 (
thñock
);

53  
	gSu≥r
::
gëSize
 (
±r
);

56 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

57 
	gGu¨d
<
	gLockTy≥
> 
l
 (
thñock
);

58  
	gSu≥r
::
gëSize
 (
±r
);

61 
ölöe
 
lock
 () {

62 
	gthñock
.
lock
();

65 
ölöe
 
u∆ock
 () {

66 
	gthñock
.
u∆ock
();

69 
	g¥iv©e
:

71 
LockTy≥
 
thñock
;

	@Heap-Layers/heaps/threads/phothreadheap.h

3 #i‚de‡
HL_PHOTHREADHEAP_H


4 
	#HL_PHOTHREADHEAP_H


	)

6 
	~<as£π.h
>

8 
	~"thªads/˝uöfo.h
"

10 #i‡
deföed
(
__˛™g__
)

11 #¥agm®
˛™g
 
dügno°ic
 
push


12 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wunused-variable"

15 
usög
 
«me•a˚
 
	gHL
;

17 
	gãm∂©e
 <
	gNumHóps
, 
˛ass
 
	gSu≥rHóp
>

18 ˛as†
	cM¨kThªadHóp
 : 
public
 
Su≥rHóp
 {

19 
public
:

21 
ölöe
 * 
	$mÆloc
 (
size_t
 
sz
) {

22 
tid
 = 
CPUInfo
::
	`gëThªadId
(Ë% 
NumHóps
;

23 * 
±r
 = 
Su≥rHóp
::
	`mÆloc
 (
sz
);

24 i‡(
±r
 !
NULL
) {

25 
Su≥rHóp
::
	`£tHóp
(
±r
, 
tid
);

26 
Su≥rHóp
::
	`£tPªvHóp
(Su≥rHóp::
	`gëNext
(
±r
), 
tid
);

28  
±r
;

30 
	}
};

33 
	gãm∂©e
 <
	gNumHóps
, 
˛ass
 
	gSu≥rHóp
>

34 ˛as†
	cCheckThªadHóp
 : 
public
 
Su≥rHóp
 {

35 
public
:

37 
ölöe
 * 
	$mÆloc
 (
size_t
 
sz
) {

38 * 
±r
 = 
Su≥rHóp
::
	`mÆloc
 (
sz
);

39 #i‚de‡
NDEBUG


40 i‡(
±r
 !
NULL
) {

41 
tid
 = 
CPUInfo
::
	`gëThªadId
(Ë% 
NumHóps
;

42 
	`as£π
 (
Su≥rHóp
::
	`gëHóp
(
±r
Ë=
tid
);

45  
±r
;

48 
ölöe
 
	$‰ì
 (* 
±r
) {

49 
Su≥rHóp
::
	`‰ì
 (
±r
);

50 
	}
}

67 
	gãm∂©e
 <
	gNumHóps
, 
˛ass
 
	gSu≥rHóp
>

68 ˛as†
	cPHOThªadHóp
 {

69 
	mpublic
:

71 
ölöe
 * 
	$mÆloc
 (
size_t
 
sz
) {

72 
tid
 = 
CPUInfo
::
	`gëThªadId
(Ë% 
NumHóps
;

73 * 
±r
 = 
	`£À˘Hóp
(
tid
)->
	`mÆloc
 (
sz
);

74  
±r
;

77 
ölöe
 
	$‰ì
 (* 
±r
) {

78 
tid
 = 
Su≥rHóp
::
	`gëHóp
(
±r
);

79 
	`£À˘Hóp
(
tid
)->
	`‰ì
 (
±r
);

80 
	}
}

83 
ölöe
 
ªmove
 (* 
±r
);

86 
	gtid
 = 
Su≥rHóp
::
gëHóp
(
±r
);

87 
£À˘Hóp
(
tid
)->
ªmove
 (
±r
);

91 
	g¥iv©e
:

94 
M¨kThªadHóp
<
NumHóps
, 
	gSu≥rHóp
> * 
	$£À˘Hóp
 (
ödex
) {

95 
	`as£π
 (
ödex
 >= 0);

96 
	`as£π
 (
ödex
 < 
NumHóps
);

97  &
±Hóps
[
ödex
];

98 
	}
}

100 
	gM¨kThªadHóp
<
	gNumHóps
, 
	gSu≥rHóp
> 
	g±Hóps
[
NumHóps
];

104 #i‡
deföed
(
__˛™g__
)

105 #¥agm®
˛™g
 
dügno°ic
 
p›


	@Heap-Layers/heaps/threads/sizethreadheap.h

3 #i‚de‡
HL_SIZETHREADHEAP_H


4 
	#HL_SIZETHREADHEAP_H


	)

6 
	~<as£π.h
>

8 
	~"thªads/˝uöfo.h
"

10 
«me•a˚
 
	gHL
 {

12 
	gãm∂©e
 <
˛ass
 
	gSu≥r
>

13 ˛as†
	cSizeThªadHóp
 : 
public
 
Su≥r
 {

14 
public
:

16 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

19 
as£π
 ((
°
) <= ());

20 
°
 * 
	g±r
 = (° *Ë
Su≥r
::
mÆloc
 (
sz
 + ());

22 
	g±r
->
	gsize
 = 
sz
;

23 
as£π
 (
gëOrigPå
(
±r
 + 1) ==Ötr);

24  (*Ë(
	g±r
 + 1);

27 
ölöe
 
‰ì
 (* 
±r
) {

28 * 
	g‹igPå
 = (*Ë
gëOrigPå
(
±r
);

29 
	gSu≥r
::
‰ì
 (
‹igPå
);

32 
ölöe
 
	gsize_t
& 
size
 (* 
±r
) {

33  
gëOrigPå
(
±r
)->
	gsize
;

36 
ölöe
 & 
thªad
 (* 
±r
) {

37  
gëOrigPå
(
±r
)->
	gtid
;

40 
	g¥iv©e
:

42 
	s_°
 {

43 
size_t
 
size
;

44 
	gtid
;

45 } 
	t°
;

47 
ölöe
 
°
 * 
gëOrigPå
 (* 
±r
) {

48  (
	g°
 *Ë((*Ë
	g±r
 - 1);

	@Heap-Layers/heaps/threads/threadheap.h

3 #i‚de‡
HL_THREADHEAP_H


4 
	#HL_THREADHEAP_H


	)

30 
	~<as£π.h
>

31 
	~<√w
>

33 
	~"thªads/˝uöfo.h
"

35 #i‡!
deföed
(
_WIN32
)

36 
	~<±hªad.h
>

54 
«me•a˚
 
	gHL
 {

56 
	gãm∂©e
 <
	gNumHóps
, 
˛ass
 
	gPîThªadHóp
>

57 ˛as†
	cThªadHóp
 : 
public
 
PîThªadHóp
 {

58 
public
:

60 íum { 
Alignmít
 = 
PîThªadHóp
::Alignment };

62 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

63 
	gtid
 = 
Modulo
<
NumHóps
>::
mod
 (
CPUInfo
::
gëThªadId
());

64 
as£π
 (
tid
 >= 0);

65 
as£π
 (
tid
 < 
NumHóps
);

66  
gëHóp
(
tid
)->
mÆloc
 (
sz
);

69 
ölöe
 
‰ì
 (* 
±r
) {

70 
	gtid
 = 
Modulo
<
NumHóps
>::
mod
 (
CPUInfo
::
gëThªadId
());

71 
as£π
 (
tid
 >= 0);

72 
as£π
 (
tid
 < 
NumHóps
);

73 
gëHóp
(
tid
)->
‰ì
 (
±r
);

76 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

77 
	gtid
 = 
Modulo
<
NumHóps
>::
mod
 (
CPUInfo
::
gëThªadId
());

78 
as£π
 (
tid
 >= 0);

79 
as£π
 (
tid
 < 
NumHóps
);

80  
gëHóp
(
tid
)->
gëSize
 (
±r
);

84 
	g¥iv©e
:

87 
ölöe
 
PîThªadHóp
 * 
gëHóp
 (
ödex
) {

88 
as£π
 (
ödex
 >= 0);

89 
as£π
 (
ödex
 < 
NumHóps
);

90  &
	g±Hóps
[
ödex
];

93 
PîThªadHóp
 
	g±Hóps
[
NumHóps
];

	@Heap-Layers/heaps/threads/threadspecificheap.h

3 #i‚de‡
HL_THREADSPECIFICHEAP_H


4 
	#HL_THREADSPECIFICHEAP_H


	)

30 
	~<as£π.h
>

31 
	~<√w
>

33 #i‡!
deföed
(
_WIN32
)

35 
	~<±hªad.h
>

37 
	~"wøµîs/mm≠wøµî.h
"

39 #i‡
deföed
(
__˛™g__
)

40 #¥agm®
˛™g
 
dügno°ic
 
push


41 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wunused-variable"

44 
«me•a˚
 
	gHL
 {

46 
	gãm∂©e
 <
˛ass
 
	gPîThªadHóp
>

47 ˛as†
	cThªadS≥cificHóp
 {

48 
	gpublic
:

50 
ThªadS≥cificHóp
 ()

53 
±hªad_⁄˚
 (&(
gëOn˚
()), 
öôülizeHóp
);

56 
	gvútuÆ
 ~
ThªadS≥cificHóp
()

60 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

61  
gëHóp
()->
mÆloc
 (
sz
);

64 
ölöe
 
‰ì
 (* 
±r
) {

65 
gëHóp
()->
‰ì
 (
±r
);

68 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

69  
gëHóp
()->
gëSize
(
±r
);

72 íum { 
	gAlignmít
 = 
PîThªadHóp
::
Alignmít
 };

74 
	g¥iv©e
:

76 
öôülizeHóp
() {

77 
gëHóp
();

80 
	g±hªad_key_t
& 
gëHópKey
() {

81 
±hªad_key_t
 
	ghópKey
;

82 
	gr
 = 
±hªad_key_¸óã
 (&
hópKey
, 
dñëeHóp
);

83  
	ghópKey
;

86 
	g±hªad_⁄˚_t
& 
gëOn˚
() {

87 
±hªad_⁄˚_t
 
	göôOn˚
 = 
PTHREAD_ONCE_INIT
;

88  
	göôOn˚
;

91 
dñëeHóp
 (*) {

92 
PîThªadHóp
 * 
	ghóp
 = 
gëHóp
();

93 
	gHL
::
Mm≠Wøµî
::
unm≠
 (
hóp
, (
PîThªadHóp
));

97 
PîThªadHóp
 * 
gëHóp
() {

98 
PîThªadHóp
 * 
	ghóp
 =

99 (
PîThªadHóp
 *Ë
±hªad_gë•ecific
 (
gëHópKey
());

100 i‡(
	ghóp
 =
NULL
) {

103 * 
buf
 = 
HL
::
Mm≠Wøµî
::
m≠
 ((
PîThªadHóp
));

104 
	ghóp
 = 
√w
 (
buf
Ë
PîThªadHóp
;

105 
±hªad_£t•ecific
 (
gëHópKey
(), (*Ë
hóp
);

107  
	ghóp
;

113 #i‡
deföed
(
__˛™g__
)

114 #¥agm®
˛™g
 
dügno°ic
 
p›


	@Heap-Layers/heaps/top/all.h

1 
	~"mÆlochóp.h
"

2 
	~"mm≠hóp.h
"

3 
	~"°©ichóp.h
"

	@Heap-Layers/heaps/top/mallocheap.h

27 #i‚de‡
HL_MALLOCHEAP_H


28 
	#HL_MALLOCHEAP_H


	)

30 
	~<c°dlib
>

32 #i‡
deföed
(
__SVR4
)

33 "C" 
size_t
 
mÆloc_ußbÀ_size
 (*);

34 #ñi‡
deföed
(
__APPLE__
)

35 
	~<mÆloc/mÆloc.h
>

37 "C" 
size_t
 
	$mÆloc_ußbÀ_size
 (*Ë
	`throw
 ();

45 
	~"wøµîs/mÆlocöfo.h
"

48 
«me•a˚
 
HL
 {

50 ˛as†
	cMÆlocHóp
 {

51 
public
:

53 íum { 
Alignmít
 = 
MÆlocInfo
::Alignment };

55 
ölöe
 * 
	`mÆloc
 (
size_t
 
sz
) {

56  ::
	`mÆloc
 (
sz
);

59 
ölöe
 
	`‰ì
 (* 
±r
) {

60 ::
	`‰ì
 (
±r
);

63 #i‡
	`deföed
(
_MSC_VER
)

64 
ölöe
 
size_t
 
	`gëSize
 (* 
±r
) {

65  ::
	`_msize
 (
±r
);

67 #ñi‡
	`deföed
(
__APPLE__
)

68 
ölöe
 
size_t
 
	`gëSize
 (* 
±r
) {

69  ::
	`mÆloc_size
 (
±r
);

71 #ñi‡
	`deföed
(
__GNUC__
Ë&& !deföed(
__SVR4
)

72 
ölöe
 
size_t
 
	`gëSize
 (* 
±r
) {

73  ::
	`mÆloc_ußbÀ_size
 (
±r
);

77 
	}
};

	@Heap-Layers/heaps/top/mmapheap.h

27 #i‚de‡
HL_MMAPHEAP_H


28 
	#HL_MMAPHEAP_H


	)

30 #i‡
deföed
(
_WIN32
)

31 
	~<wödows.h
>

34 
	~<sys/ty≥s.h
>

35 
	~<sys/°©.h
>

36 
	~<f˙é.h
>

37 
	~<uni°d.h
>

38 
	~<sys/mm™.h
>

39 
	~<m≠
>

42 
	~<√w
>

44 
	~"hóps/buûdögblock/‰ìli°hóp.h
"

45 
	~"hóps/•ecül/z⁄ehóp.h
"

46 
	~"hóps/•ecül/bum∑Œoc.h
"

47 
	~"hóps/thªads/lockedhóp.h
"

48 
	~"locks/posixlock.h
"

49 
	~"thªads/˝uöfo.h
"

50 
	~"utûôy/myhashm≠.h
"

51 
	~"utûôy/ßs£π.h
"

52 
	~"wøµîs/mm≠wøµî.h
"

53 
	~"wøµîs/°œŒoˇt‹.h
"

55 #i‚de‡
HL_MMAP_PROTECTION_MASK


56 #i‡
HL_EXECUTABLE_HEAP


57 
	#HL_MMAP_PROTECTION_MASK
 (
PROT_READ
 | 
PROT_WRITE
 | 
PROT_EXEC
)

	)

59 
	#HL_MMAP_PROTECTION_MASK
 (
PROT_READ
 | 
PROT_WRITE
)

	)

64 #i‡!
deföed
(
MAP_ANONYMOUS
Ë&& deföed(
MAP_ANON
)

65 
	#MAP_ANONYMOUS
 
MAP_ANON


	)

75 
«me•a˚
 
	gHL
 {

77 ˛as†
	cPriv©eMm≠Hóp
 {

78 
	gpublic
:

81 íum { 
ZîoMem‹y
 = 1 };

83 íum { 
	gAlignmít
 = 
Mm≠Wøµî
::
Alignmít
 };

85 #i‡
deföed
(
_WIN32
)

87 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

89 #i‡
HL_EXECUTABLE_HEAP


90 * 
	g±r
 = (*Ë
VútuÆAŒoc
 (
NULL
, 
sz
, 
MEM_RESERVE
 | 
MEM_COMMIT
 | 
MEM_TOP_DOWN
, 
PAGE_EXECUTE_READWRITE
);

92 * 
	g±r
 = (*Ë
VútuÆAŒoc
 (
NULL
, 
sz
, 
MEM_RESERVE
 | 
MEM_COMMIT
 | 
MEM_TOP_DOWN
, 
PAGE_READWRITE
);

94  (*Ë
	g±r
;

97 
ölöe
 
‰ì
 (* 
±r
, 
size_t
) {

99 
VútuÆFªe
 (
±r
, 0, 
MEM_RELEASE
);

102 
ölöe
 
‰ì
 (* 
±r
) {

104 
VútuÆFªe
 (
±r
, 0, 
MEM_RELEASE
);

107 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

108 
MEMORY_BASIC_INFORMATION
 
	gmbi
;

109 
VútuÆQuîy
 (
±r
, &
mbi
, (mbi));

110  (
	gsize_t
Ë
	gmbi
.
	gRegi⁄Size
;

115 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

117 
	gsz
 = (
sz
 + 
CPUInfo
::
PageSize
 - 1) & ~(CPUInfo::PageSize - 1);

118 #i‡
deföed
(
MAP_ALIGN
Ë&& deföed(
MAP_ANON
)

120 * 
	g±r
 = 
mm≠
 ((*Ë
Alignmít
, 
sz
, 
HL_MMAP_PROTECTION_MASK
, 
MAP_PRIVATE
 | 
MAP_ALIGN
 | 
MAP_ANON
, -1, 0);

121 #ñi‡!
deföed
(
MAP_ANONYMOUS
)

122 
	gfd
 = ::
›í
 ("/dev/zîo", 
O_RDWR
);

123 * 
	g±r
 = 
mm≠
 (
NULL
, 
sz
, 
HL_MMAP_PROTECTION_MASK
, 
MAP_PRIVATE
, 
fd
, 0);

125 * 
	g±r
 = 
mm≠
 (
NULL
, 
sz
, 
HL_MMAP_PROTECTION_MASK
, 
MAP_PRIVATE
 | 
MAP_ANONYMOUS
, -1, 0);

127 i‡(
	g±r
 =
MAP_FAILED
) {

128 
±r
 = 
NULL
;

130  
	g±r
;

133 
‰ì
 (* 
±r
, 
size_t
 
sz
)

135 i‡((Ë
	gsz
 < 0) {

136 
ab‹t
();

138 
munm≠
 (
ªöãΩªt_ˇ°
<*>(
±r
), 
sz
);

146 ˛as†
	cMm≠Hóp
 : 
public
 
Priv©eMm≠Hóp
 {

147 #i‡!
deföed
(
_WIN32
)

149 
¥iv©e
:

153 
˛ass
 
MyHóp
 : 
public
 
LockedHóp
<
PosixLockTy≥
, 
	gFªñi°Hóp
<
	gBumpAŒoc
<16384, 
	gPriv©eMm≠Hóp
> > > {

156 
	gMyHashM≠
<*, 
	tsize_t
, 
	tMyHóp
> 
	tm≠Ty≥
;

158 
	g¥Ÿe˘ed
:

159 
m≠Ty≥
 
MyM≠
;

161 
PosixLockTy≥
 
	gMyM≠Lock
;

163 
	gpublic
:

165 íum { 
Alignmít
 = 
Priv©eMm≠Hóp
::Alignment };

167 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

168 * 
	g±r
 = 
Priv©eMm≠Hóp
::
mÆloc
 (
sz
);

169 
	gMyM≠Lock
.
lock
();

170 
	gMyM≠
.
£t
 (
±r
, 
sz
);

171 
	gMyM≠Lock
.
u∆ock
();

172 
as£π
 (
ªöãΩªt_ˇ°
<
size_t
>(
±r
Ë% 
Alignmít
 == 0);

173  
	gc⁄°_ˇ°
<*>(
	g±r
);

176 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

177 
	gMyM≠Lock
.
lock
();

178 
size_t
 
	gsz
 = 
MyM≠
.
gë
 (
±r
);

179 
	gMyM≠Lock
.
u∆ock
();

180  
	gsz
;

185 
‰ì
 (* 
±r
, 
size_t
 
sz
) {

186 
	gPriv©eMm≠Hóp
::
‰ì
 (
±r
, 
sz
);

190 
ölöe
 
‰ì
 (* 
±r
) {

191 
as£π
 (
ªöãΩªt_ˇ°
<
size_t
>(
±r
Ë% 
Alignmít
 == 0);

192 
	gMyM≠Lock
.
lock
();

193 
size_t
 
	gsz
 = 
MyM≠
.
gë
 (
±r
);

194 
	gPriv©eMm≠Hóp
::
‰ì
 (
±r
, 
sz
);

195 
	gMyM≠
.
îa£
 (
±r
);

196 
	gMyM≠Lock
.
u∆ock
();

	@Heap-Layers/heaps/top/staticheap.h

33 #i‚de‡
HL_STATICHEAP_H


34 
	#HL_STATICHEAP_H


	)

36 
	~<c°ddef
>

38 
«me•a˚
 
	gHL
 {

40 
	gãm∂©e
 <
	gMem‹ySize
>

41 ˛as†
	cSèticHóp
 {

42 
	gpublic
:

44 
SèticHóp
 ()

45 : 
±r
 (&
buf
[0]),

46 
ªmaöög
 (
Mem‹ySize
)

49 íum { 
	gAlignmít
 = 1 };

51 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

52 i‡(
	gªmaöög
 < 
	gsz
) {

53  
	gNULL
;

55 * 
	gp
 = 
±r
;

56 
	g±r
 +
sz
;

57 
	gªmaöög
 -
sz
;

58  
	gp
;

61 
‰ì
 (*) {}

62 
ªmove
 (*) {  0; }

64 
isVÆid
 (* 
±r
) {

65  (((
	gsize_t
Ë
	g±r
 >(
size_t
Ë
buf
) &&

66 ((
size_t
Ë
±r
 < (size_tË
buf
));

69 
	g¥iv©e
:

72 
SèticHóp
 (const StaticHeap&);

73 
	gSèticHóp
& 
	g›î©‹
(c⁄° 
SèticHóp
&);

75 
	gbuf
[
Mem‹ySize
];

76 * 
	g±r
;

77 
size_t
 
	gªmaöög
;

	@Heap-Layers/heaps/utility/all.h

1 
	~"exa˘ly⁄ehóp.h
"

2 
	~"ex˚±i⁄hóp.h
"

3 
	~"nuŒhóp.h
"

4 
	~"≥r˛asshóp.h
"

5 
	~"¶›hóp.h
"

6 
	~"uniquehóp.h
"

7 
	~"loˇlmÆlochóp.h
"

8 
	~"⁄ehóp.h
"

9 
	~"¥ofûehóp.h
"

10 
	~"åa˚hóp.h
"

	@Heap-Layers/heaps/utility/exactlyoneheap.h

28 #i‚de‡
HL_EXACTLYONEHEAP_H


29 
	#HL_EXACTLYONEHEAP_H


	)

31 
	~"utûôy/exa˘ly⁄e.h
"

33 
«me•a˚
 
	gHL
 {

35 
	gãm∂©e
 <
˛ass
 
	gHóp
>

36 
˛ass
 
	gExa˘lyO√Hóp
 : 
public
 
HL
::
Exa˘lyO√
<
Hóp
> {

37 
public
:

39 íum { 
Alignmít
 = 
Hóp
::Alignment };

41 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

42  (*
	gthis
)().
mÆloc
 (
sz
);

44 
ölöe
 
‰ì
 (* 
±r
) {

45 (*
	gthis
)().
‰ì
 (
±r
);

47 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

48  (*
	gthis
)().
gëSize
 (
±r
);

50 
ölöe
 
˛ór
() {

51 (*
	gthis
)().
˛ór
();

	@Heap-Layers/heaps/utility/exceptionheap.h

27 #i‚de‡
HL_EXCEPTIONHEAP_H


28 
	#HL_EXCEPTIONHEAP_H


	)

30 
	~<√w
>

34 
«me•a˚
 
	gHL
 {

36 
	gãm∂©e
 <
˛ass
 
	gSu≥r
>

37 ˛as†
	cEx˚±i⁄Hóp
 : 
public
 
Su≥r
 {

38 
public
:

39 
ölöe
 * 
mÆloc
 (
size_t
 
sz
Ë
throw
 (
°d
::
bad_Æloc
) {

40 * 
±r
 = 
Su≥r
::
mÆloc
 (
sz
);

41 i‡(
	g±r
 =
NULL
) {

42 
throw
 
√w
 
°d
::
bad_Æloc
;

44  
	g±r
;

49 
	gãm∂©e
 <
˛ass
 
	gSu≥r
>

50 ˛as†
	cC©chEx˚±i⁄Hóp
 : 
public
 
Su≥r
 {

51 
public
:

52 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

53 * 
±r
;

54 
	gåy
 {

55 
	g±r
 = 
Su≥r
::
mÆloc
 (
sz
);

56 } 
ˇtch
 (
°d
::
bad_Æloc
) {

57 
±r
 = 
NULL
;

59  
	g±r
;

	@Heap-Layers/heaps/utility/localmallocheap.h

27 #i‚de‡
HL_LOCALMALLOCHEAP_H


28 
	#HL_LOCALMALLOCHEAP_H


	)

30 
	~<c°ddef
>

31 
	~<ˇs£π
>

33 #i‡!
deföed
(
_WIN32
)

35 
	~<dlf˙.h
>

37 
	~"wøµîs/mÆlocöfo.h
"

39 #i‡
deföed
(
__SVR4
)

40 "C" 
size_t
 
mÆloc_ußbÀ_size
 (*);

42 "C" 
size_t
 
	$mÆloc_ußbÀ_size
 (*Ë
	`throw
 ();

47 * 
	tmÆlocFun˘i⁄
 (
	tsize_t
);

48 
	t‰ìFun˘i⁄
 (*);

49 
size_t
 
	tmsizeFun˘i⁄
 (*);

51 
	}
}

54 
«me•a˚
 
HL
 {

56 ˛as†
	cLoˇlMÆlocHóp
 {

57 
public
:

59 íum { 
Alignmít
 = 
HL
::
MÆlocInfo
::Alignment };

61 
LoˇlMÆlocHóp
 ()

62 : 
_‰ì‚
 (
NULL
),

63 
_msize‚
 (
NULL
),

64 
_mÆloc‚
 (
NULL
),

65 
_öôülized
 (
Ál£
),

66 
_öôülizög
 (
Ál£
)

69 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

70 i‡(
_öôülizög
) {

71  
NULL
;

73 
a˘iv©e
();

74  (*
_mÆloc‚
)(
sz
);

77 
ölöe
 
‰ì
 (* 
±r
) {

78 i‡(
_öôülizög
) {

81 
a˘iv©e
();

82 (*
_‰ì‚
)(
±r
);

85 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

86 i‡(
_öôülizög
) {

89 
a˘iv©e
();

90  (*
_msize‚
)(
±r
);

93 
¥iv©e
:

95 
a˘iv©e
() {

96 i‡(
_öôülized
) {

99 
a˘iv©eSlowP©h
();

102 
a˘iv©eSlowP©h
() {

103 
_öôülizög
 = 
åue
;

105 i‡(!
_öôülized
) {

110 
_‰ì‚
 = (
‰ìFun˘i⁄
 *)

111 ((Ë
dlsym
 (
RTLD_NEXT
, "free"));

112 
_msize‚
 = (
msizeFun˘i⁄
 *)

113 ((Ë
dlsym
 (
RTLD_NEXT
, "malloc_usable_size"));

114 
_mÆloc‚
 = (
mÆlocFun˘i⁄
 *)

115 ((Ë
dlsym
 (
RTLD_NEXT
, "malloc"));

117 i‡(!(
_‰ì‚
 && 
_msize‚
 && 
_mÆloc‚
)) {

118 
Ârötf
 (
°dîr
, "SeriousÖroblem!\n");

119 
ab‹t
();

122 
as£π
 (
_‰ì‚
);

123 
as£π
 (
_msize‚
);

124 
as£π
 (
_mÆloc‚
);

126 
_öôülized
 = 
åue
;

128 
_öôülizög
 = 
Ál£
;

133 
‰ìFun˘i⁄
 * 
_‰ì‚
;

134 
msizeFun˘i⁄
 * 
_msize‚
;

135 
mÆlocFun˘i⁄
 * 
_mÆloc‚
;

138 
boﬁ
 
_öôülized
;

141 
boﬁ
 
_öôülizög
;

	@Heap-Layers/heaps/utility/nullheap.h

27 #i‚de‡
HL_NULLHEAP_H


28 
	#HL_NULLHEAP_H


	)

30 
	~<as£π.h
>

37 
«me•a˚
 
	gHL
 {

39 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

40 ˛as†
	cNuŒHóp
 : 
public
 
Su≥rHóp
 {

41 
public
:

42 
ölöe
 * 
mÆloc
 (
size_t
) const {  0; }

43 
ölöe
 
‰ì
 (*) const {}

44 
ölöe
 
ªmove
 (*) const {  0; }

45 
ölöe
 
˛ór
 () const {}

46 
ölöe
 
size_t
 
gëSize
 (*) const {  0; }

	@Heap-Layers/heaps/utility/old/oneheap.h

27 #i‚de‡
HL_ONEHEAP_H


28 
	#HL_ONEHEAP_H


	)

34 
«me•a˚
 
	gHL
 {

36 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

37 ˛as†
	cO√Hóp
 {

38 
	gpublic
:

39 
O√Hóp
 ()

40 : 
theHóp
 (
gëHóp
())

43 
ölöe
 * 
mÆloc
 (c⁄° 
size_t
 
sz
) {

44  
theHóp
->
mÆloc
 (
sz
);

46 
ölöe
 
‰ì
 (* 
±r
) {

47 
	gtheHóp
->
‰ì
 (
±r
);

49 
ölöe
 
ªmove
 (* 
±r
) {

50  
	gtheHóp
->
ªmove
 (
±r
);

52 
ölöe
 
˛ór
 () {

53 
	gtheHóp
->
˛ór
();

55 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

56  
	gtheHóp
->
gëSize
 (
±r
);

59 íum { 
	gAlignmít
 = 
Su≥rHóp
::
Alignmít
 };

61 
	g¥iv©e
:

63 
Su≥rHóp
 * 
theHóp
;

65 
ölöe
 
Su≥rHóp
 * 
gëHóp
 () {

66 
Su≥rHóp
 
	gtheHóp
;

67  &
	gtheHóp
;

	@Heap-Layers/heaps/utility/oneheap.h

3 #i‚de‡
HL_ONEHEAP_H


4 
	#HL_ONEHEAP_H


	)

6 
	~"utûôy/sögÀt⁄.h
"

8 
«me•a˚
 
	gHL
 {

10 
	gãm∂©e
 <
˛ass
 
	gTheHóp
>

11 
˛ass
 
	gO√Hóp
 : 
public
 
sögÀt⁄
<
TheHóp
> {

12 
public
:

14 íum { 
Alignmít
 = 
TheHóp
::Alignment };

16 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

17  
	gsögÀt⁄
<
	gTheHóp
>::
gëIn°™˚
().
mÆloc
 (
sz
);

20 
ölöe
 
boﬁ
 
‰ì
 (* 
±r
) {

21  
	gsögÀt⁄
<
	gTheHóp
>::
gëIn°™˚
().
‰ì
 (
±r
);

24 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

25  
	gsögÀt⁄
<
	gTheHóp
>::
gëIn°™˚
().
gëSize
 (
±r
);

	@Heap-Layers/heaps/utility/perclassheap.h

27 #i‚de‡
HL_PERCLASSHEAP_H


28 
	#HL_PERCLASSHEAP_H


	)

30 
	~<√w
>

46 
«me•a˚
 
	gHL
 {

48 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

49 ˛as†
	cPîCœssHóp
 {

50 
	gpublic
:

51 
ölöe
 * 
›î©‹
 
√w
 (
size_t
 
sz
) {

52  
gëHóp
()->
mÆloc
 (
sz
);

54 
ölöe
 
›î©‹
 
dñëe
 (* 
±r
) {

55 
gëHóp
()->
‰ì
 (
±r
);

57 
ölöe
 * 
›î©‹
 
	g√w
[] (
size_t
 
	gsz
) {

58  
gëHóp
()->
mÆloc
 (
sz
);

60 
ölöe
 
›î©‹
 
	gdñëe
[] (* 
	g±r
) {

61 
gëHóp
()->
‰ì
 (
±r
);

66 
ölöe
 * 
›î©‹
 
√w
 (
size_t
, * 
p
Ë{  
	gp
; }

67 
ölöe
 * 
›î©‹
 
	g√w
[] (
	gsize_t
, * 
	gp
) { Ö; }

69 
	g¥iv©e
:

70 
ölöe
 
Su≥rHóp
 * 
gëHóp
 () {

71 
Su≥rHóp
 
theHóp
;

72  &
	gtheHóp
;

	@Heap-Layers/heaps/utility/profileheap.h

27 #i‚de‡
HL_PROFILEHEAP_H


28 
	#HL_PROFILEHEAP_H


	)

30 
	~<c°dio
>

35 
«me•a˚
 
	gHL
 {

37 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
, 
	gHópNumbî
>

38 ˛as†
	cProfûeHóp
 : 
public
 
Su≥rHóp
 {

39 
public
:

41 
ProfûeHóp
 ()

42 : 
memReque°ed
 (0),

43 
maxMemReque°ed
 (0)

47 ~
ProfûeHóp
()

49 i‡(
	gmaxMemReque°ed
 > 0) {

50 
°©s
();

54 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

55 * 
	g±r
 = 
Su≥rHóp
::
mÆloc
 (
sz
);

58 
	gmemReque°ed
 +
Su≥rHóp
::
gëSize
(
±r
);

59 i‡(
	gmemReque°ed
 > 
	gmaxMemReque°ed
) {

60 
	gmaxMemReque°ed
 = 
memReque°ed
;

62  
	g±r
;

65 
ölöe
 
‰ì
 (* 
±r
) {

66 
	gmemReque°ed
 -
Su≥rHóp
::
gëSize
 (
±r
);

67 
	gSu≥rHóp
::
‰ì
 (
±r
);

70 
	g¥iv©e
:

71 
°©s
 () {

72 
¥ötf
 ("Hóp: %d\n", 
HópNumbî
);

73 
¥ötf
 ("Max mem‹yÑeque°ed = %d\n", 
maxMemReque°ed
);

74 
¥ötf
 ("Mem‹y stû»ö u£ = %d\n", 
memReque°ed
);

77 
	gmemReque°ed
;

78 
	gmaxMemReque°ed
;

	@Heap-Layers/heaps/utility/slopheap.h

27 #i‚de‡
HL_SLOPHEAP_H


28 
	#HL_SLOPHEAP_H


	)

30 
	~<c°ddef
>

43 
«me•a˚
 
	gHL
 {

45 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
, 
	gSLOP
 = 16>

46 ˛as†
	cSl›Hóp
 : 
public
 
Su≥rHóp
 {

47 
public
:

48 
Sl›Hóp
 ()

49 : 
ªmaöög
 (0),

50 
±r
 (
NULL
)

53 
ölöe
 * 
mÆloc
 (c⁄° 
size_t
 
nbyãs
) {

56 i‡(
nbyãs
 <
ªmaöög
) {

57 
ªmaöög
 -
nbyãs
;

58 * 
	gp
 = 
±r
;

59 
	g±r
 +
nbyãs
;

60  (*Ë
	gp
;

68  
gëM‹eMem‹y
(
nbyãs
);

71 
ölöe
 
˛ór
 () {

72 
	g±r
 = 
NULL
;

73 
	gªmaöög
 = 0;

74 
	gSu≥rHóp
::
˛ór
 ();

77 
ölöe
 
‰ì
 (*) {}

79 
	g¥iv©e
:

82 
ölöe
 
ªmove
 (*);

84 * 
gëM‹eMem‹y
 (
size_t
 
nbyãs
) {

85 * 
	g√w±r
 = (*Ë
Su≥rHóp
::
mÆloc
 (
nbyãs
 + 
SLOP
);

87 i‡(
	g√w±r
 =
NULL
) {

88  
NULL
;

96 i‡((
	g±r
 !
NULL
Ë&& (
±r
 + 
ªmaöög
 + 
SLOP
 =
√w±r
)) {

97 
ªmaöög
 +
SLOP
;

99 
	g±r
 = 
√w±r
;

100 
	gªmaöög
 = 0;

102 * 
	gp
 = 
±r
;

103 
	g±r
 +
nbyãs
;

105  (*Ë
	gp
;

108 * 
	g±r
;

109 
size_t
 
	gªmaöög
;

	@Heap-Layers/heaps/utility/traceheap.h

27 #i‚de‡
HL_TRACEHEAP_H


28 
	#HL_TRACEHEAP_H


	)

30 
	~<c°dlib
>

32 #ifde‡
WIN32


33 
	~<io.h
>

36 
	~<f˙é.h
>

37 
	~<sys/ty≥s.h
>

38 
	~<sys/°©.h
>

39 
	~<°rög.h
>

40 
	~<c°dio
>

44 
«me•a˚
 
	gHL
 {

46 ˛as†
	cFûeObje˘
 {

47 
	gpublic
:

49 
FûeObje˘
()

50 : 
_isO≥n
 (
Ál£
),

51 
_fûe
 (0)

54 
FûeObje˘
 (c⁄° FûeObje˘& 
f
)

55 : 
_isO≥n
 (
f
._isOpen),

56 
_fûe
 (
f
._file)

59 
	gFûeObje˘
& 
	g›î©‹
=(c⁄° 
FûeObje˘
& 
f
) {

60 
_isO≥n
 = 
f
._isOpen;

61 
	g_fûe
 = 
f
.
_fûe
;

62  *
	gthis
;

65 ~
FûeObje˘
() {

66 
˛o£
();

69 
›í
 (* 
‚ame
)

72 
	g_fûe
 = 
f›í
(
‚ame
, "w+");

74 #ifde‡
WIN32


75 
	g_fûe
 = 
_›í
(
‚ame
, 
_O_WRONLY
 | 
_O_CREAT
, 
_S_IREAD
 | 
_S_IWRITE
);

77 
	g_fûe
 = ::
›í
(
‚ame
, 
O_WRONLY
 | 
O_CREAT
, 
S_IREAD
 | 
S_IWRITE
);

82 
boﬁ
 
is_›í
() {

83  
	g_isO≥n
;

86 
˛o£
()

88 i‡(
	g_isO≥n
) {

90 
f˛o£
 (
_fûe
);

92 #ifde‡
WIN32


93 
_˛o£
 (
_fûe
);

95 ::
˛o£
 (
_fûe
);

98 
	g_isO≥n
 = 
Ál£
;

103 
‰õnd
 
	gFûeObje˘
& 
	g›î©‹
<<(FûeObje˘& 
	gf
, 
	gn
) {

104 
	gbuf
[255];

105 
•rötf
 (
buf
, "%d", 
n
);

106 
	gf
.
wrôeSåög
 (
buf
);

107  
	gf
;

110 
‰õnd
 
	gFûeObje˘
& 
	g›î©‹
<<(FûeObje˘& 
	gf
, * 
	gs
) {

111 
	gbuf
[255];

112 
•rötf
 (
buf
, "%s", 
s
);

113 
	gf
.
wrôeSåög
 (
buf
);

114  
	gf
;

117 
‰õnd
 
	gFûeObje˘
& 
	g›î©‹
<<(FûeObje˘& 
	gf
, * 
	gs
) {

118 
	gbuf
[255];

119 
•rötf
 (
buf
, "%p", 
s
);

120 
	gf
.
wrôeSåög
 (
buf
);

121  
	gf
;

124 
	g¥iv©e
:

126 
wrôeSåög
 (* 
buf
) {

128 
Ârötf
 (
_fûe
, "%s", 
buf
);

130 #ifde‡
WIN32


131 
_wrôe
 (
_fûe
, 
buf
, 
°æí
(buf));

133 
wrôe
 (
_fûe
, 
buf
, 
°æí
(buf));

138 
boﬁ
 
	g_isO≥n
;

141 
FILE
 * 
	g_fûe
;

143 
	g_fûe
;

151 
	gãm∂©e
 <
˛ass
 
	gSu≥r
, 
	gNumbî
>

152 ˛as†
	cTø˚Hóp
 : 
public
 
Su≥r
 {

153 
public
:

155 
Tø˚Hóp
()

157 i‡(!
theFûe
().
is_›í
()) {

158 
‚ame
[255];

159 
•rötf
 (
‚ame
, "åa˚-%d", 
Numbî
);

160 
theFûe
().
›í
 (
‚ame
);

161 
¥ötf
 ("OPEN %s\n", 
‚ame
);

163 
gëRefs
()++;

166 ~
Tø˚Hóp
()

169 --
gëRefs
();

170 i‡(
gëRefs
() == 0) {

171 i‡(
theFûe
().
is_›í
())

172 
theFûe
().
˛o£
();

176 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

177 * 
	g±r
 = 
Su≥r
::
mÆloc
 (
sz
);

178 
theFûe
(Ë<< "M " << 
	gNumbî
 << "\t" << 
	gsz
 << "\t" << 
	g±r
 << "\n";

179  
	g±r
;

182 
ölöe
 
‰ì
 (* 
±r
) {

183 
theFûe
(Ë<< "F " << 
	gNumbî
 << "\t" << 
	g±r
 << "\n";

184 
	gSu≥r
::
‰ì
 (
±r
);

187 
	g¥iv©e
:

189 
FûeObje˘
& 
theFûe
() {

190 
FûeObje˘
 
f
;

191  
	gf
;

194 & 
gëRefs
() {

195 
	gªfs
 = 0;

196  
	gªfs
;

207 #i‚de‡
_TRACEHEAP_H_


208 
	#_TRACEHEAP_H_


	)

211 
	~<f°ªam
>

212 
	~<m≠
>

214 
	gãm∂©e
 <
˛ass
 
	gSu≥r
, 
	gNumbî
>

215 ˛as†
	cTø˚Hóp
 : 
public
 
Su≥r
 {

216 
public
:

218 
	$Tø˚Hóp
()

220 i‡(!
	`theFûe
().
	`is_›í
()) {

221 
	`¥ötf
 ("OPEN\n");

222 
	`theFûe
().
	`›í
 ("trace");

224 
	`gëRefs
()++;

226 ~
	$Tø˚Hóp
()

228 
	`theFûe
(Ë<< ::
°d
::
Êush
;

229 --
	`gëRefs
();

230 i‡(
	`gëRefs
() == 0) {

231 i‡(
	`theFûe
().
	`is_›í
())

232 
	`theFûe
().
	`˛o£
();

234 
	}
}

235 
ölöe
 * 
	$mÆloc
 (
size_t
 
sz
) {

236 * 
±r
 = 
Su≥r
::
	`mÆloc
 (
sz
);

237 
	`theFûe
(Ë<< "M\t" << 
sz
 << "\t" << 
±r
 << "\n";

238  
±r
;

239 
	}
}

241 
ölöe
 
	$‰ì
 (* 
±r
) {

242 
	`theFûe
(Ë<< "F\t" << 
±r
 << "\n";

243 
Su≥r
::
	`‰ì
 (
±r
);

244 
	}
}

245 
	g¥iv©e
:

246 
°d
::
of°ªam
& 
	$theFûe
() {

247 
°d
::
of°ªam
 
f
;

248  
f
;

249 
	}
}

250 & 
	$gëRefs
() {

251 
ªfs
 = 0;

252  
ªfs
;

253 
	}
}

	@Heap-Layers/heaps/utility/uniqueheap.h

27 #i‚de‡
HL_UNIQUEHEAP_H


28 
	#HL_UNIQUEHEAP_H


	)

30 
	~<c°dlib
>

31 
	~<√w
>

41 
«me•a˚
 
	gHL
 {

43 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
, cœs†
	gChûd
 = >

44 ˛as†
	cUniqueHóp
 {

45 
public
:

47 íum { 
Alignmít
 = 
Su≥rHóp
::Alignment };

53 
UniqueHóp
()

55 vﬁ©ûê
Su≥rHóp
 * 
	gf‹˚Cª©i⁄OfSu≥rHóp
 = 
gëSu≥rHóp
();

56 
addRef
();

64 ~
UniqueHóp
() {

65 
	gr
 = 
dñRef
();

66 i‡(
	gr
 <= 0) {

67 
gëSu≥rHóp
()->
Su≥rHóp
::~SuperHeap();

74 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

75  
gëSu≥rHóp
()->
mÆloc
 (
sz
);

78 
ölöe
 
‰ì
 (* 
±r
) {

79 
gëSu≥rHóp
()->
‰ì
 (
±r
);

82 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

83  
gëSu≥rHóp
()->
gëSize
 (
±r
);

86 
ölöe
 
ªmove
 (* 
±r
) {

87  
gëSu≥rHóp
()->
ªmove
 (
±r
);

90 
ölöe
 
˛ór
() {

91 
gëSu≥rHóp
()->
˛ór
();

95 
ölöe
 
gëAŒoˇãd
() {

96  
gëSu≥rHóp
()->
gëAŒoˇãd
();

99 
ölöe
 
gëMaxAŒoˇãd
() {

100  
gëSu≥rHóp
()->
gëMaxAŒoˇãd
();

103 
ölöe
 
gëMaxInU£
() {

104  
gëSu≥rHóp
()->
gëMaxInU£
();

108 
	g¥iv©e
:

111 
addRef
() {

112 
gëRefs
() += 1;

116 
dñRef
() {

117 
gëRefs
() -= 1;

118  
gëRefs
();

122 & 
gëRefs
() {

123 
	gnumRefs
 = 0;

124  
	gnumRefs
;

127 
Su≥rHóp
 * 
gëSu≥rHóp
() {

128 
	gsu≥rHópBuf„r
[(
Su≥rHóp
)];

129 
Su≥rHóp
 * 
	gaSu≥rHóp
 = (Su≥rHó∞*Ë(
√w
 ((*Ë&
su≥rHópBuf„r
) SuperHeap);

130  
	gaSu≥rHóp
;

133 
doNŸhög
 (
Chûd
 *) {}

	@Heap-Layers/locks/all.h

1 
	~"ma˛ock.h
"

2 
	~"posixlock.h
"

3 
	~"ªcursivñock.h
"

4 
	~"•ölock.h
"

5 
	~"wölock.h
"

	@Heap-Layers/locks/maclock.h

27 #i‚de‡
HL_MACLOCK_H


28 
	#HL_MACLOCK_H


	)

30 #i‡
deföed
(
__APPLE__
)

32 
	~<libkîn/OSAtomic.h
>

39 
«me•a˚
 
	gHL
 {

41 ˛as†
	cMacLockTy≥
 {

42 
	gpublic
:

44 
MacLockTy≥
()

45 : 
muãx
 (0)

48 ~
MacLockTy≥
()

50 
muãx
 = 0;

53 
ölöe
 
lock
() {

54 
OSSpöLockLock
 (&
muãx
);

57 
ölöe
 
u∆ock
() {

58 
OSSpöLockU∆ock
 (&
muãx
);

61 
	g¥iv©e
:

63 
OSSpöLock
 
muãx
;

	@Heap-Layers/locks/oldspinlock.h

27 #i‚de‡
HL_SPINLOCK_H


28 
	#HL_SPINLOCK_H


	)

30 #i‡
deföed
(
unix
)

31 
	~<sched.h
>

34 #i‡
deföed
(
__SVR4
)

35 
	~<thªad.h
>

38 #i‡
deföed
(
__sgi
)

39 
	~<muãx.h
>

42 #i‡
deföed
(
__APPLE__
)

43 
	~<libkîn/OSAtomic.h
>

46 
	~"thªads/˝uöfo.h
"

48 #i‡
deföed
(
_MSC_VER
)

50 #i‡!
deföed
(
NO_INLINE
)

51 #¥agm®
ölöe_dïth
(255)

52 
	#NO_INLINE
 
	`__de˛•ec
(
noölöe
)

	)

53 
	#INLINE
 
__f‹˚ölöe


	)

54 
	#ölöe
 
__f‹˚ölöe


	)

62 #i‡
deföed
(
__SUNPRO_CC
)

64 "C" 
size_t
 
MyI¡îlockedExch™ge
 (size_à* 
ﬁdvÆ
,

65 
size_t
 
√wvÆ
);

68 #i‡
deföed
(
_WIN32
Ë&& !deföed(
_WIN64
)

70 #i‚de‡
_WIN32_WINNT


71 
	#_WIN32_WINNT
 0x0500

	)

80 
	#_MM_PAUSE
 {
__asm
{
_emô
 0xf3};__asm {_emô 0x90}}

	)

81 
	~<wödows.h
>

83 #ñi‡
deföed
(
__GNUC__
)

85 
	#_MM_PAUSE
 { 
	`asm
 (".byã 0xf3; .byã 0x90" : : :); }

	)

89 
	#_MM_PAUSE


	)

95 
«me•a˚
 
	gHL
 {

97 ˛as†
	cSpöLockTy≥
 {

98 
	g¥iv©e
:

100 íum { 
UNLOCKED
 = 0, 
	gLOCKED
 = 1 };

102 
	gpublic
:

104 
SpöLockTy≥
 ()

105 #i‡
deföed
(
__APPLE__
)

106 : 
muãx
 (
OS_SPINLOCK_INIT
)

108 : 
muãx
 (
UNLOCKED
)

112 ~
SpöLockTy≥
()

115 
ölöe
 
lock
() {

116 i‡(
åue
) {

117 i‡(
MyI¡îlockedExch™ge
 (
c⁄°_ˇ°
<
size_t
 *>(&
muãx
), 
LOCKED
)

118 !
UNLOCKED
) {

119 
c⁄ãndedLock
();

122 
	gmuãx
 = 
LOCKED
;

128 
ölöe
 
u∆ock
() {

129 i‡(
	gåue
) {

130 #i‡
deföed
(
_WIN32
Ë&& !deföed(
_WIN64
)

131 
	g__asm
 {}

132 #ñi‡
deföed
(
__GNUC__
)

133 
asm
 volatile ("" : : : "memory");

136 
	gmuãx
 = 
UNLOCKED
;

140 #i‡!
deföed
(
__SUNPRO_CC
)

141 
ölöe
 
size_t
 
MyI¡îlockedExch™ge
 (size_t *, size_t);

144 
	g¥iv©e
:

147 
OSSpöLock
 
muãx
;

151 
NO_INLINE


152 
c⁄ãndedLock
() {

153 c⁄° 
	gMAX_SPIN
 = 1000;

154 
	gåue
) {

155 i‡(
MyI¡îlockedExch™ge
 (
c⁄°_ˇ°
<
size_t
 *>(&
muãx
), 
LOCKED
)

156 =
UNLOCKED
) {

159 
	gcou¡
 = 0;

160 (
	gmuãx
 =
LOCKED
Ë&& (
cou¡
 < 
MAX_SPIN
)) {

161 
_MM_PAUSE
;

162 
	gcou¡
++;

164 i‡(
	gcou¡
 =
MAX_SPIN
) {

165 
yõldPro˚ss‹
();

171 
ölöe
 
boﬁ
 
⁄Mu…ùro˚ss‹
 () {

172 
CPUInfo
 
	g˝uInfo
;

173  (
	g˝uInfo
.
gëNumPro˚ss‹s
() > 1);

176 
ölöe
 
yõldPro˚ss‹
 () {

177 #i‡
deföed
(
_WIN32
)

178 
SÀï
(0);

179 #ñi‡
deföed
(
__SVR4
)

180 
thr_yõld
();

182 
sched_yõld
();

186 íum { 
	gMAX_SPIN_LIMIT
 = 1024 };

188 vﬁ©ûê
size_t
 
	gmuãx
;

200 #i‡!
deföed
(
__SUNPRO_CC
)

201 
ölöe
 
size_t


202 
	gHL
::
SpöLockTy≥
::
	$MyI¡îlockedExch™ge
 (
size_t
 * 
ﬁdvÆ
,

203 
size_t
 
√wvÆ
)

205 #i‡
	`deföed
(
_WIN32
Ë&& deföed(
_MSC_VER
)

206  
	`I¡îlockedExch™ge
 ((vﬁ©ûê
LONG
 *Ë
ﬁdvÆ
, 
√wvÆ
);

211 #ñi‡
	`deföed
(
__•¨c
)

212 
asm
 volatile ("swap [%1],%0"

213 :"Ù" (
√wvÆ
)

214 :"r" (
ﬁdvÆ
), "0" (
√wvÆ
)

217 #ñi‡
	`deföed
(
__i386__
)

218 
asm
 volatile ("lock; xchgl %0, %1"

219 : "Ù" (
√wvÆ
)

220 : "m" (*
ﬁdvÆ
), "0" (
√wvÆ
)

223 #ñi‡
	`deföed
(
__sgi
)

224 
√wvÆ
 = 
	`ã°_™d_£t
 (
ﬁdvÆ
,Çewval);

226 #ñi‡
	`deföed
(
__x86_64__
)

228 
asm
 volatile ("lock; xchgq %0, %1"

229 : "Ù" (
√wvÆ
)

230 : "m" (*
ﬁdvÆ
), "0" (
√wvÆ
)

233 #ñi‡
	`deföed
(
__µc
Ë|| deföed(
__powîpc__
Ë|| deföed(
PPC
)

235 
ªt
;

236 
asm
 volatile (

243 : "=&r"(
ªt
)

244 : "r"(
ﬁdvÆ
), "r"(
√wvÆ
)

246  
ªt
;

248 #ñi‡
	`deföed
(
__¨m__
)

250 
ªsu…
;

251 
asm
 volatile (

255 : "=&r"(
ªsu…
)

256 : "r"(
ﬁdvÆ
), "r"(
√wvÆ
)

258  (
ªsu…
);

259 #ñi‡
	`deföed
(
__APPLE__
)

260 
size_t
 
ﬁdVÆue
 = *
ﬁdvÆ
;

261 
boﬁ
 
sw≠≥d
 = 
	`OSAtomicCom∑ªAndSw≠L⁄gB¨rõr
 (
ﬁdVÆue
, 
√wvÆ
, (vﬁ©ûê*Ë
ﬁdvÆ
);

262 i‡(
sw≠≥d
) {

263  
√wvÆ
;

265  
ﬁdVÆue
;

270  
√wvÆ
;

271 
	}
}

	@Heap-Layers/locks/posixlock.h

27 #i‚de‡
HL_POSIXLOCK_H


28 
	#HL_POSIXLOCK_H


	)

30 #i‡!
deföed
(
_WIN32
)

32 
	~<±hªad.h
>

39 
«me•a˚
 
	gHL
 {

41 ˛as†
	cPosixLockTy≥
 {

42 
	gpublic
:

44 
PosixLockTy≥
 ()

46 
r
 = 
±hªad_muãx_öô
 (&
muãx
, 
NULL
);

47 i‡(
	gr
) {

48 
	gthrow
 0;

52 ~
PosixLockTy≥
 ()

54 
±hªad_muãx_de°roy
 (&
muãx
);

57 
lock
 () {

58 
±hªad_muãx_lock
 (&
muãx
);

61 
u∆ock
 () {

62 
±hªad_muãx_u∆ock
 (&
muãx
);

65 
	g¥iv©e
:

67 
±hªad_muãx_t
 
muãx
;

68 
	g_dummy
[(
±hªad_muãx_t
)/() + 1];

	@Heap-Layers/locks/recursivelock.h

27 #i‚de‡
HL_RECURSIVELOCK_H


28 
	#HL_RECURSIVELOCK_H


	)

30 
	~<ˇs£π
>

31 
	~"thªads/˝uöfo.h
"

39 
«me•a˚
 
	gHL
 {

41 
	gãm∂©e
 <
˛ass
 
	gBa£Lock
>

42 ˛as†
	cRecursiveLockTy≥
 : 
public
 
Ba£Lock
 {

43 
public
:

45 
ölöe
 
RecursiveLockTy≥
 ()

46 : 
_tid
 (-1),

47 
_ªcursiveDïth
 (0)

50 
ölöe
 
lock
() {

51 
	gcuºthªad
 = 
CPUInfo
::
gëThªadId
();

52 i‡(
	g_tid
 =
cuºthªad
) {

53 
_ªcursiveDïth
++;

55 
	gBa£Lock
::
lock
();

56 
	g_tid
 = 
cuºthªad
;

57 
	g_ªcursiveDïth
++;

61 
ölöe
 
u∆ock
 () {

62 
	gcuºthªad
 = 
CPUInfo
::
gëThªadId
();

63 i‡(
	g_tid
 =
cuºthªad
) {

64 
_ªcursiveDïth
--;

65 i‡(
	g_ªcursiveDïth
 == 0) {

66 
_tid
 = -1;

67 
	gBa£Lock
::
u∆ock
();

72 
as£π
 (0);

73 
ab‹t
();

77 
	g¥iv©e
:

78 
_tid
;

79 
	g_ªcursiveDïth
;

	@Heap-Layers/locks/spinlock-old.h

27 #i‚de‡
HL_SPINLOCKOLD_H


28 
	#HL_SPINLOCKOLD_H


	)

30 #i‡
deföed
(
unix
)

31 
	~<sched.h
>

34 #i‡
deföed
(
__SVR4
)

35 
	~<thªad.h
>

38 #i‡
deföed
(
__sgi
)

39 
	~<muãx.h
>

42 #i‡
deföed
(
__APPLE__
)

43 
	~<libkîn/OSAtomic.h
>

46 
	~"thªads/˝uöfo.h
"

48 #i‡
deföed
(
_MSC_VER
)

50 #i‡!
deföed
(
NO_INLINE
)

51 #¥agm®
ölöe_dïth
(255)

52 
	#NO_INLINE
 
	`__de˛•ec
(
noölöe
)

	)

53 
	#INLINE
 
__f‹˚ölöe


	)

54 
	#ölöe
 
__f‹˚ölöe


	)

62 #i‡
deföed
(
__SUNPRO_CC
)

64 "C" 
size_t
 
MyI¡îlockedExch™ge
 (size_à* 
ﬁdvÆ
,

65 
size_t
 
√wvÆ
);

68 #i‡
deföed
(
_WIN32
Ë&& !deföed(
_WIN64
)

70 #i‚de‡
_WIN32_WINNT


71 
	#_WIN32_WINNT
 0x0500

	)

80 
	#_MM_PAUSE
 {
__asm
{
_emô
 0xf3};__asm {_emô 0x90}}

	)

81 
	~<wödows.h
>

83 #ñi‡
deföed
(
__GNUC__
)

85 
	#_MM_PAUSE
 { 
	`asm
 (".byã 0xf3; .byã 0x90" : : :); }

	)

89 
	#_MM_PAUSE


	)

95 
«me•a˚
 
	gHL
 {

97 ˛as†
	cSpöLockTy≥
 {

98 
	g¥iv©e
:

100 íum { 
UNLOCKED
 = 0, 
	gLOCKED
 = 1 };

102 
	gpublic
:

104 
SpöLockTy≥
 ()

105 #i‡
deföed
(
__APPLE__
)

106 : 
muãx
 (
OS_SPINLOCK_INIT
)

108 : 
muãx
 (
UNLOCKED
)

112 ~
SpöLockTy≥
()

115 
ölöe
 
lock
() {

116 i‡(
åue
) {

117 i‡(
MyI¡îlockedExch™ge
 (
c⁄°_ˇ°
<
size_t
 *>(&
muãx
), 
LOCKED
)

118 !
UNLOCKED
) {

119 
c⁄ãndedLock
();

122 
	gmuãx
 = 
LOCKED
;

128 
ölöe
 
u∆ock
() {

129 i‡(
	gåue
) {

130 #i‡
deföed
(
_WIN32
Ë&& !deföed(
_WIN64
)

131 
	g__asm
 {}

132 #ñi‡
deföed
(
__GNUC__
)

133 
asm
 volatile ("" : : : "memory");

136 
	gmuãx
 = 
UNLOCKED
;

140 #i‡!
deföed
(
__SUNPRO_CC
)

141 
ölöe
 
size_t
 
MyI¡îlockedExch™ge
 (size_t *, size_t);

144 
	g¥iv©e
:

147 
OSSpöLock
 
muãx
;

151 
NO_INLINE


152 
c⁄ãndedLock
() {

153 c⁄° 
	gMAX_SPIN
 = 1000;

154 
	gåue
) {

155 i‡(
MyI¡îlockedExch™ge
 (
c⁄°_ˇ°
<
size_t
 *>(&
muãx
), 
LOCKED
)

156 =
UNLOCKED
) {

159 
	gcou¡
 = 0;

160 (
	gmuãx
 =
LOCKED
Ë&& (
cou¡
 < 
MAX_SPIN
)) {

161 
_MM_PAUSE
;

162 
	gcou¡
++;

164 i‡(
	gcou¡
 =
MAX_SPIN
) {

165 
yõldPro˚ss‹
();

171 
ölöe
 
boﬁ
 
⁄Mu…ùro˚ss‹
 () {

172 
CPUInfo
 
	g˝uInfo
;

173  (
	g˝uInfo
.
gëNumPro˚ss‹s
() > 1);

176 
ölöe
 
yõldPro˚ss‹
 () {

177 #i‡
deföed
(
_WIN32
)

178 
SÀï
(0);

179 #ñi‡
deföed
(
__SVR4
)

180 
thr_yõld
();

182 
sched_yõld
();

186 íum { 
	gMAX_SPIN_LIMIT
 = 1024 };

188 vﬁ©ûê
size_t
 
	gmuãx
;

200 #i‡!
deföed
(
__SUNPRO_CC
)

201 
ölöe
 
size_t


202 
	gHL
::
SpöLockTy≥
::
	$MyI¡îlockedExch™ge
 (
size_t
 * 
ﬁdvÆ
,

203 
size_t
 
√wvÆ
)

205 #i‡
	`deföed
(
_WIN32
Ë&& deföed(
_MSC_VER
)

206  
	`I¡îlockedExch™ge
 ((vﬁ©ûê
LONG
 *Ë
ﬁdvÆ
, 
√wvÆ
);

211 #ñi‡
	`deföed
(
__•¨c
)

212 
asm
 volatile ("swap [%1],%0"

213 :"Ù" (
√wvÆ
)

214 :"r" (
ﬁdvÆ
), "0" (
√wvÆ
)

217 #ñi‡
	`deföed
(
__i386__
)

218 
asm
 volatile ("lock; xchgl %0, %1"

219 : "Ù" (
√wvÆ
)

220 : "m" (*
ﬁdvÆ
), "0" (
√wvÆ
)

223 #ñi‡
	`deföed
(
__sgi
)

224 
√wvÆ
 = 
	`ã°_™d_£t
 (
ﬁdvÆ
,Çewval);

226 #ñi‡
	`deföed
(
__x86_64__
)

228 
asm
 volatile ("lock; xchgq %0, %1"

229 : "Ù" (
√wvÆ
)

230 : "m" (*
ﬁdvÆ
), "0" (
√wvÆ
)

233 #ñi‡
	`deföed
(
__µc
Ë|| deföed(
__powîpc__
Ë|| deföed(
PPC
)

235 
ªt
;

236 
asm
 volatile (

243 : "=&r"(
ªt
)

244 : "r"(
ﬁdvÆ
), "r"(
√wvÆ
)

246  
ªt
;

248 #ñi‡
	`deföed
(
__¨m__
)

250 
ªsu…
;

251 
asm
 volatile (

255 : "=&r"(
ªsu…
)

256 : "r"(
ﬁdvÆ
), "r"(
√wvÆ
)

258  (
ªsu…
);

259 #ñi‡
	`deföed
(
__APPLE__
)

260 
size_t
 
ﬁdVÆue
 = *
ﬁdvÆ
;

261 
boﬁ
 
sw≠≥d
 = 
	`OSAtomicCom∑ªAndSw≠L⁄gB¨rõr
 (
ﬁdVÆue
, 
√wvÆ
, (vﬁ©ûê*Ë
ﬁdvÆ
);

262 i‡(
sw≠≥d
) {

263  
√wvÆ
;

265  
ﬁdVÆue
;

270  
√wvÆ
;

271 
	}
}

	@Heap-Layers/locks/spinlock.h

27 #i‚de‡
HL_SPINLOCK_H


28 
	#HL_SPINLOCK_H


	)

30 #i‡(
__˝lu•lus
 < 201103)

31 
	~"•ölock-ﬁd.h
"

34 
	~<©omic
>

36 #i‡
deföed
(
unix
)

37 
	~<sched.h
>

40 #i‡
deföed
(
__SVR4
)

41 
	~<thªad.h
>

44 
	~"thªads/˝uöfo.h
"

46 #i‡
deföed
(
_MSC_VER
)

48 #i‡!
deföed
(
NO_INLINE
)

49 #¥agm®
ölöe_dïth
(255)

50 
	#NO_INLINE
 
	`__de˛•ec
(
noölöe
)

	)

51 
	#INLINE
 
__f‹˚ölöe


	)

52 
	#ölöe
 
__f‹˚ölöe


	)

60 #i‡
deföed
(
_WIN32
Ë&& !deföed(
_WIN64
)

62 #i‚de‡
_WIN32_WINNT


63 
	#_WIN32_WINNT
 0x0500

	)

68 #i‡
deföed
(
_WIN32
)

76 
	#_MM_PAUSE
 
	`YõldPro˚ss‹
()

77 
	~<wödows.h
>

	)

79 #ñi‡
deföed
(
__GNUC__
Ë&& (deföed(
__i386__
Ë|| deföed(
__x86_64__
))

81 
	#_MM_PAUSE
 { 
	`asm
 (".byã 0xf3; .byã 0x90" : : :); }

	)

85 
	#_MM_PAUSE


	)

89 
«me•a˚
 
	gHL
 {

91 ˛as†
	cSpöLockTy≥
 {

92 
	g¥iv©e
:

93 
°d
::
©omic
<
boﬁ
> 
_muãx
;

94 
	gpublic
:

96 
SpöLockTy≥
()

97 : 
_muãx
 (
Ál£
)

100 ~
SpöLockTy≥
()

103 
ölöe
 
lock
() {

104 i‡(
_muãx
.
exch™ge
(
åue
)) {

105 
c⁄ãndedLock
();

109 
ölöe
 
u∆ock
() {

110 
	g_muãx
 = 
Ál£
;

113 
	g¥iv©e
:

115 
NO_INLINE


116 
c⁄ãndedLock
() {

117 c⁄° 
MAX_SPIN
 = 1000;

118 
	gåue
) {

119 i‡(!
	g_muãx
.
exch™ge
(
åue
)) {

122 
	gcou¡
 = 0;

123 
	g_muãx
 && (
	gcou¡
 < 
	gMAX_SPIN
)) {

124 
	g_MM_PAUSE
;

125 
	gcou¡
++;

127 i‡(
	gcou¡
 =
MAX_SPIN
) {

128 
yõldPro˚ss‹
();

134 
ölöe
 
boﬁ
 
⁄Mu…ùro˚ss‹
 () {

135 
CPUInfo
 
	g˝uInfo
;

136  (
	g˝uInfo
.
gëNumPro˚ss‹s
() > 1);

139 
ölöe
 
yõldPro˚ss‹
 () {

140 #i‡
deföed
(
_WIN32
)

141 
SÀï
(0);

142 #ñi‡
deföed
(
__SVR4
)

143 
thr_yõld
();

145 
sched_yõld
();

149 íum { 
	gMAX_SPIN_LIMIT
 = 1024 };

	@Heap-Layers/locks/winlock.h

27 #i‚de‡
HL_WINLOCK_H


28 
	#HL_WINLOCK_H


	)

30 #i‡
deföed
(
_WIN32
)

32 
	~<wödows.h
>

33 
	~<wö¡.h
>

43 
«me•a˚
 
	gHL
 {

45 ˛as†
	cWöLockTy≥
 {

46 
	gpublic
:

48 
WöLockTy≥
 ()

49 : 
muãx
 (0)

52 ~
WöLockTy≥
 ()

54 
muãx
 = 0;

57 
ölöe
 
lock
 () {

58 
	g•öCou¡
 = 0;

59 
I¡îlockedExch™ge
 ((*Ë&
muãx
, 1) != 0) {

60 
muãx
 != 0) {

61 
YõldPro˚ss‹
();

66 
ölöe
 
u∆ock
 () {

67 
	gmuãx
 = 0;

71 
	g¥iv©e
:

72 
muãx
;

73 
boﬁ
 
⁄Mu…ùro˚ss‹
 () {

74 
SYSTEM_INFO
 
	göfoRëu∫
[1];

75 
GëSy°emInfo
 (
öfoRëu∫
);

76 i‡(
	göfoRëu∫
->
	gdwNumbîOfPro˚ss‹s
 == 1) {

77  
FALSE
;

79  
	gTRUE
;

	@Heap-Layers/threads/all.h

1 
	~"˝uöfo.h
"

2 
	~"‰ed.h
"

	@Heap-Layers/threads/cpuinfo.cpp

3 
	~"˝uöfo.h
"

4 
	~"‰ed.h
"

6 
	~<io°ªam
>

8 c⁄° 
	gNUMTHREADS
 = 256;

12 
	gcou¡î
[
NUMTHREADS
];

14 
usög
 
«me•a˚
 
	gHL
;

15 
usög
 
«me•a˚
 
	g°d
;

17 * 
	$‚
 (*) {

18 
cou¡î
[
CPUInfo
::
	`gëThªadId
(Ë% 
NUMTHREADS
]++;

19  
NULL
;

20 
	}
}

23 
	$maö
()

26 
i
 = 0; i < 
NUMTHREADS
; i++) {

27 
cou¡î
[
i
] = 0;

30 
Fªd
 
t
[
NUMTHREADS
];

31 
i
 = 0; i < 
NUMTHREADS
; i++) {

32 
t
[
i
].
	`¸óã
 (
‚
, 
NULL
);

34 
i
 = 0; i < 
NUMTHREADS
; i++) {

35 
t
[
i
].
	`joö
();

39 
maxCou¡
 = 0;

40 
i
 = 0; i < 
NUMTHREADS
; i++) {

41 i‡(
cou¡î
[
i
] > 
maxCou¡
) {

42 
maxCou¡
 = 
cou¡î
[
i
];

46 
cout
 << "MaximumÉ¡rõ†(should bê√¨ 1): " << 
maxCou¡
 << 
ídl
;

48 
	}
}

	@Heap-Layers/threads/cpuinfo.h

29 #i‚de‡
HL_CPUINFO_H


30 
	#HL_CPUINFO_H


	)

32 #i‡
deföed
(
_WIN32
)

33 
	~<wödows.h
>

34 
	~<¥o˚ss.h
>

36 
	~<uni°d.h
>

40 #i‡!
deföed
(
_WIN32
)

41 
	~<±hªad.h
>

44 #i‡
deföed
(
__SVR4
)

45 
	~<sys/lwp.h
>

46 "C" 
lwp_£lf
();

47 
	~<thªad.h
>

48 "C" 
_thr_£lf
();

51 #i‡
deföed
(
__löux
)

52 
	~<sys/sysˇŒ.h
>

53 
	~<sys/ty≥s.h
>

54 
	~<sys/°©.h
>

55 
	~<f˙é.h
>

56 
	~<°rög.h
>

57 
	~<uni°d.h
>

60 #i‡
deföed
(
__APPLE__
)

61 
	~<sys/ty≥s.h
>

62 
	~<sys/sys˘l.h
>

65 #i‡
deföed
(
__sgi
)

66 
	~<sys/ty≥s.h
>

67 
	~<sys/sysmp.h
>

68 
	~<sys/sysöfo.h
>

71 #i‡
deföed
(
hpux
)

72 
	~<sys/mp˘l.h
>

75 #i‡
deföed
(
_WIN32
)

76 
	$__de˛•ec
(
thªad
Ë
loˇlThªadId
;

79 #i‡
	`deföed
(
__SVR4
Ë&& deföed(
MAP_ALIGN
)

80 vﬁ©ûê
™yThªadSèckCª©ed
;

83 
«me•a˚
 
HL
 {

92 ˛as†
	cCPUInfo
 {

93 
public
:

96 íum { 
PageSize
 = 4096 };

98 
ölöe
 
	`gëNumPro˚ss‹s
() {

99 
_numPro˚ss‹s
 = 
	`compuãNumPro˚ss‹s
();

100  
_numPro˚ss‹s
;

103 
ölöe
 
	`gëThªadId
();

104 
ölöe
 
	`compuãNumPro˚ss‹s
();

106 
	}
};

109 
	gCPUInfo
::
	$compuãNumPro˚ss‹s
 ()

111 
≈
 = 0;

112 i‡(!
≈
) {

113 #i‡
	`deföed
(
__löux
Ë|| deföed(
__APPLE__
)

114 
≈
 = (Ë
	`sysc⁄f
(
_SC_NPROCESSORS_ONLN
);

115 #ñi‡
	`deföed
(
_WIN32
)

116 
SYSTEM_INFO
 
öfoRëu∫
[1];

117 
	`GëSy°emInfo
 (
öfoRëu∫
);

118 
≈
 = (Ë(
öfoRëu∫
->
dwNumbîOfPro˚ss‹s
);

119 #ñi‡
	`deföed
(
__sgi
)

120 
≈
 = (Ë
	`sysmp
(
MP_NAPROCS
);

121 #ñi‡
	`deföed
(
hpux
)

122 
≈
 = 
	`mp˘l
(
MPC_GETNUMSPUS
, 
NULL
, NULL);

123 #ñi‡
	`deföed
(
_SC_NPROCESSORS_ONLN
)

124 
≈
 = (Ë(
	`sysc⁄f
(
_SC_NPROCESSORS_ONLN
));

126 
≈
 = 2;

132  
≈
;

134  
≈
;

136 
	}
}

138 #i‡
	$deföed
(
USE_THREAD_KEYWORD
)

139 
__thªad
 
loˇlThªadId
;

142 
CPUInfo
::
	$gëThªadId
() {

143 #i‡
	`deföed
(
__SVR4
)

144  (Ë
	`±hªad_£lf
();

145 #ñi‡
	`deföed
(
_WIN32
)

147  
	`GëCuºítThªadId
() >> 2;

148 #ñi‡
	`deföed
(
__APPLE__
)

151 
tid
 = (Ë(((
size_t
Ë
	`±hªad_£lf
()) >> 12);

152  
tid
;

153 #ñi‡
	`deföed
(
__BEOS__
)

154  
	`föd_thªad
(0);

155 #ñi‡
	`deföed
(
__löux
)

156  (Ë((
size_t
Ë
	`±hªad_£lf
()) >> 12;

158 #ñi‡
	`deföed
(
PTHREAD_KEYS_MAX
)

160  (Ë((
size_t
Ë
	`±hªad_£lf
()) >> 12;

161 #ñi‡
	`deföed
(
POSIX
)

162  (Ë
	`±hªad_£lf
();

163 #ñi‡
USE_SPROC


167 
pid
 = (Ë
PRDA
->
sys_¥da
.
¥da_sys
.
t_pid
;

168  
pid
;

173 
	}
}

	@Heap-Layers/threads/fred.h

3 #i‚de‡
HL_FRED_H


4 
	#HL_FRED_H


	)

8 #i‡
deföed
(
_WIN32
)

10 
	~<wödows.h
>

11 
	~<¥o˚ss.h
>

13 #ñi‡
deföed
(
__SVR4
)

15 
	~<thªad.h
>

16 
	~<±hªad.h
>

17 
	~<uni°d.h
>

21 
	~<±hªad.h
>

22 
	~<uni°d.h
>

26 "C" * (*
	tThªadFun˘i⁄Ty≥
) (*);

28 
«me•a˚
 
	gHL
 {

30 ˛as†
	cFªd
 {

31 
	gpublic
:

33 
Fªd
() {

34 #i‡!
deföed
(
_WIN32
)

35 
±hªad_©å_öô
 (&
©å
);

39 ~
Fªd
() {

40 #i‡!
deföed
(
_WIN32
)

41 
±hªad_©å_de°roy
 (&
©å
);

45 
¸óã
 (
ThªadFun˘i⁄Ty≥
 
fun˘i⁄
, * 
¨g
) {

46 #i‡
deföed
(
_WIN32
)

47 
	gt
 = 
Cª©eThªad
 (0, 0, (
LPTHREAD_START_ROUTINE
Ë*
fun˘i⁄
, (
LPVOID
Ë
¨g
, 0, 0);

49 
±hªad_¸óã
 (&
t
, &
©å
, 
fun˘i⁄
, 
¨g
);

53 
joö
() {

54 #i‡
deföed
(
_WIN32
)

55 
WaôF‹SögÀObje˘
 (
t
, 
INFINITE
);

57 
±hªad_joö
 (
t
, 
NULL
);

61 
yõld
() {

62 #i‡
deföed
(
_WIN32
)

63 
SÀï
 (0);

64 #ñi‡
deföed
(
__SVR4
)

65 
thr_yõld
();

67 
sched_yõld
();

72 
£tC⁄cuºícy
 (
n
) {

73 #i‡
deföed
(
_WIN32
)

74 #ñi‡
deföed
(
__SVR4
)

75 
thr_£tc⁄cuºícy
 (
n
);

77 
±hªad_£tc⁄cuºícy
 (
n
);

82 
	g¥iv©e
:

84 
Fªd
 (const Fred&);

85 
	gFªd
& 
	g›î©‹
=(c⁄° 
Fªd
&);

87 #i‡
deföed
(
_WIN32
)

88 
HANDLE
 
	tFªdTy≥
;

90 
±hªad_t
 
	tFªdTy≥
;

91 
±hªad_©å_t
 
	g©å
;

94 
FªdTy≥
 
	gt
;

	@Heap-Layers/utility/align.h

3 #i‚de‡
HL_ALIGN_H


4 
	#HL_ALIGN_H


	)

6 
	~<°dlib.h
>

8 
	~"ßs£π.h
"

10 #i‡
deföed
(
__˛™g__
)

11 #¥agm®
˛™g
 
dügno°ic
 
push


12 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wunused-variable"

15 
«me•a˚
 
	gHL
 {

20 
	gãm∂©e
 <
size_t
 
	gAlignmít
>

21 
ölöe
 
size_t
 
Æign
 (size_à
v
) {

22 
	gßs£π
<((
	gAlignmít
 & (Alignmít-1)Ë=0)> 
isPowîOfTwo
;

23 
	gisPowîOfTwo
 = 
isPowîOfTwo
;

24  ((
	gv
 + (
	gAlignmít
-1)) & ~(Alignment-1));

29 #i‡
deföed
(
__˛™g__
)

30 #¥agm®
˛™g
 
dügno°ic
 
p›


	@Heap-Layers/utility/all.h

1 
	~"Æign.h
"

2 
	~"bös.h
"

3 
	~"bös16k.h
"

4 
	~"bös4k.h
"

5 
	~"bös64k.h
"

6 
	~"bös8k.h
"

7 
	~"checkpowîo·wo.h
"

8 
	~"dŒi°.h
"

9 
	~"dy«ºay.h
"

10 
	~"exa˘ly⁄e.h
"

11 
	~"‰ì¶li°.h
"

12 
	~"hash.h
"

13 
	~"ûog2.h
"

14 
	~"gcd.h
"

15 
	~"gu¨d.h
"

16 
	~"i°rue.h
"

17 
	~"lcm.h
"

18 
	~"modulo.h
"

19 
	~"myhashm≠.h
"

20 
	~"ßs£π.h
"

21 
	~"¶li°.h
"

22 
	~"timî.h
"

	@Heap-Layers/utility/bins.h

1 #i‚de‡
HL_BINS_H


2 
	#HL_BINS_H


	)

4 
«me•a˚
 
	gHL
 {

6 
	gãm∂©e
 <
˛ass
 
	gHódî
, 
	gSize
>

7 
˛ass
 
	gbös
;

	@Heap-Layers/utility/bins16k.h

3 #i‡!
deföed
(
_BINS16K_H_
)

4 
	#_BINS16K_H_


	)

6 
	~<c°dlib
>

7 
	~<as£π.h
>

9 
	~"bös.h
"

10 
	~"ßs£π.h
"

12 
«me•a˚
 
	gHL
 {

14 
	gãm∂©e
 <
˛ass
 
	gHódî
>

15 
˛ass
 
	gbös
<
	gHódî
, 16384> {

16 
	gpublic
:

18 
bös
 ()

22 íum { 
NUM_BINS
 = 24 };

23 íum { 
	gNUM_SIZECLASSES
 = 2044 };

25 íum { 
	gBIG_OBJECT
 = 16384 - (
Hódî
) };

27 c⁄° 
size_t
 
	g_bös
[
NUM_BINS
];

28 c⁄° 
	g_size˛as£s
[
NUM_SIZECLASSES
];

30 
ölöe
 
gëSizeCœss
 (
size_t
 
sz
) {

31 
as£π
 (
sz
 <
BIG_OBJECT
);

32 c⁄° 
	göd
 = (
sz
 - 1) >> 3;

33  
	g_size˛as£s
[
öd
];

36 
ölöe
 
size_t
 
gëCœssSize
 (c⁄° 
i
) {

37 
as£π
 (
i
 >= 0);

38 
as£π
 (
i
 < 
NUM_BINS
);

39  
	g_bös
[
i
];

42 
	g¥iv©e
:

44 
ßs£π
<(
BIG_OBJECT
 > 0)> 
vîifyHódîSize
;

50 
	gãm∂©e
 <
˛ass
 
	gHódî
>

51 c⁄° 
size_t
 
	gHL
::
bös
<
Hódî
, 16384>::
_bös
[
NUM_BINS
] = { 8, 16, 24, 32, 40, 56, 80, 112, 160, 224, 320, 456, 648, 920, 1312, 1864, 2656, 3784, 5392, 5448, 7760, 8176, 11648, 16384 - (Header) };

53 
	gãm∂©e
 <
˛ass
 
	gHódî
>

54 c⁄° 
	gHL
::
bös
<
Hódî
, 16384>::
_size˛as£s
[
NUM_SIZECLASSES
] = { 0, 1, 2, 3, 4, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23 };

	@Heap-Layers/utility/bins4k.h

3 #i‡!
deföed
(
_BINS4K_H_
)

4 
	#_BINS4K_H_


	)

6 
	~<ˇs£π
>

8 
	~"bös.h
"

9 
	~"ßs£π.h
"

11 
«me•a˚
 
	gHL
 {

13 
	gãm∂©e
 <
˛ass
 
	gHódî
>

14 
˛ass
 
	gbös
<
	gHódî
, 4096> {

16 
	gpublic
:

17 
bös
 () {}

19 íum { 
NUM_BINS
 = 33 };

20 íum { 
	gBIG_OBJECT
 = 4096 - (
Hódî
) };

22 c⁄° 
size_t
 
	g_bös
[
NUM_BINS
];

24 
ölöe
 
gëSizeCœss
 (
size_t
 
sz
) {

25 
as£π
 (
sz
 <
BIG_OBJECT
);

26 i‡(
	gsz
 < 8) {

28 } i‡(
	gsz
 <= 128) {

29  ((
sz
 + 7) >> 3) - 1;

31  
¶owLookupSizeCœss
 (
sz
);

35 
ölöe
 
size_t
 
gëCœssSize
 (c⁄° 
i
) {

36 
as£π
 (
i
 >= 0);

37 
as£π
 (
i
 < 
NUM_BINS
);

38  
	g_bös
[
i
];

41 
	g¥iv©e
:

43 
¶owLookupSizeCœss
 (c⁄° 
size_t
 
sz
) {

46 
size˛ass
 = 0;

47 
	g_bös
[
size˛ass
] < 
	gsz
)

49 
	gsize˛ass
++;

50 
as£π
 (
size˛ass
 < 
NUM_BINS
);

52  
	gsize˛ass
;

55 
	gßs£π
<(
	gBIG_OBJECT
 > 0)> 
	gvîifyHódîSize
;

60 
	gãm∂©e
 <
˛ass
 
	gHódî
>

61 c⁄° 
size_t
 
	gHL
::
bös
<
Hódî
, 4096>::
_bös
[
NUM_BINS
] = {8UL, 16UL, 24UL, 32UL, 40UL, 48UL, 56UL, 64UL, 72UL, 80UL, 88UL, 96UL, 104UL, 112UL, 120UL, 128UL, 152UL, 176UL, 208UL, 248UL, 296UL, 352UL, 416UL, 496UL, 592UL, 704UL, 856UL, 1024UL, 1224UL, 1712UL, 2048UL, 3416UL, 4096UL - (Header)};

	@Heap-Layers/utility/bins64k.h

27 #i‡!
deföed
(
HL_BINS64K_H
)

28 
	#HL_BINS64K_H


	)

30 
	~<c°dlib
>

31 
	~<as£π.h
>

33 
	~"bös.h
"

34 
	~"ûog2.h
"

35 
	~"ßs£π.h
"

37 
«me•a˚
 
	gHL
 {

39 
	gãm∂©e
 <
˛ass
 
	gHódî
>

40 
˛ass
 
	gbös
<
	gHódî
, 65536> {

41 
	gpublic
:

43 
bös
 ()

45 #i‚de‡
NDEBUG


46 
i
 = (); 
	gi
 < 
	gBIG_OBJECT
; i++) {

47 
	gsc
 = 
gëSizeCœss
(
i
);

48 
as£π
 (
gëCœssSize
(
sc
Ë>
i
);

49 
as£π
 (
gëCœssSize
(
sc
-1Ë< 
i
);

50 
as£π
 (
gëSizeCœss
(
gëCœssSize
(
sc
)) == sc);

55 íum { 
	gBIG_OBJECT
 = 8192 };

56 íum { 
	gNUM_BINS
 = 11 };

58 
ölöe
 
log2˚û
 (
size_t
 
sz
) {

59  
	gHL
::
ûog2
 (
sz
);

62 
ölöe
 
gëSizeCœss
 (
size_t
 
sz
) {

63 
	gsz
 = (
sz
 < ()) ? () : sz;

64  
log2˚û
 (
sz
) - 3;

67 
ölöe
 
size_t
 
gëCœssSize
 (c⁄° 
i
) {

68 
as£π
 (
i
 >= 0);

69  ((Ë<< 
	gi
);

72 
	g¥iv©e
:

74 
ßs£π
<(
BIG_OBJECT
 > 0)> 
vîifyHódîSize
;

	@Heap-Layers/utility/bins8k.h

3 #i‡!
deföed
(
HL_BINS8K_H
)

4 
	#HL_BINS8K_H


	)

6 
	~<ˇs£π
>

8 
	~"bös.h
"

9 
	~"ßs£π.h
"

11 
«me•a˚
 
	gHL
 {

13 
	gãm∂©e
 <
˛ass
 
	gHódî
>

14 
˛ass
 
	gbös
<
	gHódî
, 8192> {

16 
	gpublic
:

17 
bös
 () {}

19 íum { 
NUM_BINS
 = 32 };

20 íum { 
	gNUM_SIZECLASSES
 = 1018 };

22 íum { 
	gBIG_OBJECT
 = 4096 - (
Hódî
) };

24 c⁄° 
size_t
 
	g_bös
[
NUM_BINS
];

25 c⁄° 
	g_size˛as£s
[
NUM_SIZECLASSES
];

27 
ölöe
 
gëSizeCœss
 (
size_t
 
sz
) {

28 
as£π
 (
sz
 <
BIG_OBJECT
);

29 c⁄° 
	göd
 = (
sz
 - 1) >> 3;

30 
as£π
 (
_bös
[
_size˛as£s
[
öd
]] >
sz
);

31  
	g_size˛as£s
[
öd
];

34 
ölöe
 
size_t
 
gëCœssSize
 (c⁄° 
i
) {

35 
as£π
 (
i
 >= 0);

36 
as£π
 (
i
 < 
NUM_BINS
);

37  
	g_bös
[
i
];

40 
	g¥iv©e
:

42 
ßs£π
<(
BIG_OBJECT
 > 0)> 
vîifyHódîSize
;

48 
	gãm∂©e
 <
˛ass
 
	gHódî
>

49 c⁄° 
size_t
 
	gHL
::
bös
<
Hódî
, 8192>::
_bös
[
NUM_BINS
] = {8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96, 112, 128, 152, 176, 208, 248, 296, 352, 416, 496, 592, 704, 840, 1008, 1208, 1448, 1736, 2272, 2720, 3400, 
BIG_OBJECT
};

51 
	gãm∂©e
 <
˛ass
 
	gHódî
>

52 c⁄° 
	gHL
::
bös
<
Hódî
, 8192>::
_size˛as£s
[
NUM_SIZECLASSES
] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33 };

	@Heap-Layers/utility/checkpoweroftwo.h

12 #i‚de‡
HL_CHECKPOWEROFTWO_H


13 
	#HL_CHECKPOWEROFTWO_H


	)

15 
	~"ßs£π.h
"

23 
«me•a˚
 
	gHL
 {

25 
	gãm∂©e
 <
	gNumbî
>

26 ˛as†
	cIsPowîOfTwo
 {

27 
	gpublic
:

28 íum { 
VALUE
 = (!(
Numbî
 & (Number - 1)) && Number) };

36 
	gãm∂©e
 <
	gV
>

37 ˛as†
	cCheckPowîOfTwo
 {

38 íum { 
	gVîify
 = 
HL
::
ßs£π
<
IsPowîOfTwo
<
V
>::
VALUE
>::VALUE };

	@Heap-Layers/utility/dllist.h

27 #i‚de‡
HL_DLLIST_H


28 
	#HL_DLLIST_H


	)

30 
	~<as£π.h
>

39 
«me•a˚
 
	gHL
 {

41 ˛as†
	cDLLi°
 {

42 
	gpublic
:

44 
ölöe
 
DLLi°
 () {

45 
˛ór
();

48 
˛ass
 
	gE¡ry
;

51 
ölöe
 
˛ór
 () {

52 
	ghód
.
£tPªv
 (&
hód
);

53 
	ghód
.
£tNext
 (&
hód
);

57 
ölöe
 
boﬁ
 
isEm±y
 () const {

58  (
	ghód
.
gëNext
(Ë=&
hód
);

62 
ölöe
 
E¡ry
 * 
gë
 () {

63 c⁄° 
E¡ry
 * 
	ge
 = 
hód
.
√xt
;

64 i‡(
	ge
 =&
hód
) {

65  
NULL
;

67 
	ghód
.
	g√xt
 = 
e
->
√xt
;

68 
	ghód
.
	g√xt
->
	g¥ev
 = &
hód
;

69  (
	gE¡ry
 *Ë
	ge
;

73 
ölöe
 
ªmove
 (
E¡ry
 * 
e
) {

74 
	ge
->
ªmove
();

78 
ölöe
 
ö£π
 (
E¡ry
 * 
e
) {

79 
	ge
->
ö£π
 (&
hód
, hód.
√xt
);

83 ˛as†
	cE¡ry
 {

84 
	gpublic
:

86 
ölöe
 
£tPªv
 (
E¡ry
 * 
p
Ë{ 
as£π
 (∞!
NULL
); 
	g¥ev
 =Ö; }

87 
ölöe
 
£tNext
 (
E¡ry
 * 
p
Ë{ 
as£π
 (∞!
NULL
); 
	g√xt
 =Ö; }

88 
ölöe
 
E¡ry
 * 
gëPªv
 (Ëc⁄° {  
	g¥ev
; }

89 
ölöe
 
E¡ry
 * 
gëNext
 (Ëc⁄° {  
	g√xt
; }

90 
ölöe
 
ªmove
 () const {

91 
	g¥ev
->
£tNext
(
√xt
);

92 
	g√xt
->
£tPªv
(
¥ev
);

94 
ölöe
 
ö£π
 (
E¡ry
 * 
p
, E¡ry * 
n
) {

95 
	g¥ev
 = 
p
;

96 
	g√xt
 = 
n
;

97 
	gp
->
£tNext
 (
this
);

98 
	gn
->
£tPªv
 (
this
);

100 
E¡ry
 * 
	g¥ev
;

101 
E¡ry
 * 
	g√xt
;

105 
	g¥iv©e
:

108 
E¡ry
 
hód
;

	@Heap-Layers/utility/dynarray.h

27 #i‚de‡
HL_DYNARRAY_H


28 
	#HL_DYNARRAY_H


	)

30 
	~<as£π.h
>

31 
	~<c°dlib
>

42 
«me•a˚
 
	gHL
 {

44 
	gãm∂©e
 <
˛ass
 
	gObjTy≥
>

45 ˛as†
	cDy«micAºay
 {

46 
	gpublic
:

47 
Dy«micAºay
()

48 : 
öã∫ÆAºay
 (
NULL
),

49 
öã∫ÆAºayLígth
 (0)

52 ~
Dy«micAºay
()

54 
˛ór
();

58 
ölöe
 
˛ór
() {

59 i‡(
	göã∫ÆAºay
 !
NULL
) {

60 
dñëe
 
öã∫ÆAºay
;

61 
	göã∫ÆAºay
 = 
NULL
;

62 
	göã∫ÆAºayLígth
 = 0;

68 
ölöe
 c⁄° 
	gObjTy≥
& 
	g›î©‹
[] (
	gödex
) const {

69 
as£π
 (
ödex
 < 
öã∫ÆAºayLígth
);

70 
as£π
 (
ödex
 >= 0);

71  
	göã∫ÆAºay
[
ödex
];

75 
ölöe
 
	gObjTy≥
& 
	g›î©‹
[] (
	gödex
) {

76 
as£π
 (
ödex
 >= 0);

77 i‡(
	gödex
 >
öã∫ÆAºayLígth
) {

82 c⁄° 
√wSize
 = 
ödex
 * 2 + 1;

83 
ObjTy≥
 * 
	g¨r
 = 
√w
 ObjTy≥[
√wSize
];

84 #i‡
MALLOC_TRACE


85 
¥ötf
 ("m %x %d\n", 
¨r
, 
√wSize
 * (
ObjTy≥
));

87 i‡(
	göã∫ÆAºay
 !
NULL
) {

88 
mem˝y
 (
¨r
, 
öã∫ÆAºay
, 
öã∫ÆAºayLígth
 * (
ObjTy≥
));

89 
dñëe
 
	göã∫ÆAºay
;

90 #i‡
MALLOC_TRACE


91 
¥ötf
 ("‡%x\n", 
öã∫ÆAºay
);

94 
	göã∫ÆAºay
 = 
¨r
;

95 
	göã∫ÆAºayLígth
 = 
√wSize
;

98  
	göã∫ÆAºay
[
ödex
];

106 
ölöe
 
åim
 (
√…s
) {

111 i‡(
	göã∫ÆAºay
 !
NULL
) {

112 i‡(
√…s
 * 4 < 
öã∫ÆAºayLígth
) {

113 c⁄° 
√wSize
 = 
√…s
 * 2;

114 
ObjTy≥
 * 
	g¨r
 = 
√w
 ObjTy≥[
√wSize
];

115 #i‡
MALLOC_TRACE


116 
¥ötf
 ("m %x %d\n", 
¨r
, 
√wSize
 * (
ObjTy≥
));

118 
mem˝y
 (
¨r
, 
öã∫ÆAºay
, (
ObjTy≥
Ë* 
√…s
);

119 
dñëe
 
	göã∫ÆAºay
;

120 #i‡
MALLOC_TRACE


121 
¥ötf
 ("‡%x\n", 
öã∫ÆAºay
);

123 
	göã∫ÆAºay
 = 
¨r
;

124 
	göã∫ÆAºayLígth
 = 
√wSize
;

126 
as£π
 (
√…s
 <
öã∫ÆAºayLígth
);

131 
	g¥iv©e
:

134 
ObjTy≥
 * 
öã∫ÆAºay
;

137 
	göã∫ÆAºayLígth
;

	@Heap-Layers/utility/exactlyone.h

1 #i‚de‡
HL_EXACTLYONE_H


2 
	#HL_EXACTLYONE_H


	)

35 
«me•a˚
 
	gHL
 {

37 
	gãm∂©e
 <
˛ass
 
	gCLASS
>

38 ˛as†
	cExa˘lyO√
 {

39 
	gpublic
:

41 
ölöe
 
CLASS
& 
›î©‹
() () {

43 
buf
[((
CLASS
) + () - 1) / ()];

44 
CLASS
 * 
	gtheO√TrueIn°™˚På
 = 
√w
 (
buf
) CLASS;

45  *
	gtheO√TrueIn°™˚På
;

	@Heap-Layers/utility/freesllist.h

3 #i‚de‡
_FREESLLIST_H_


4 
	#_FREESLLIST_H_


	)

6 
	~<as£π.h
>

17 ˛as†
	cFªeSLLi°
 {

18 
	mpublic
:

20 
ölöe
 
	$˛ór
 () {

21 
hód
.
√xt
 = 
NULL
;

24 
˛ass
 
E¡ry
;

27 
ölöe
 
E¡ry
 * 
	$gë
 () {

28 c⁄° 
E¡ry
 * 
e
 = 
hód
.
√xt
;

29 i‡(
e
 =
NULL
) {

30  
NULL
;

32 
hód
.
√xt
 = 
e
->next;

33  
c⁄°_ˇ°
<
E¡ry
 *>(
e
);

34 
	}
}

36 
ölöe
 
E¡ry
 * 
	$ªmove
 () {

37 c⁄° 
E¡ry
 * 
e
 = 
hód
.
√xt
;

38 i‡(
e
 =
NULL
) {

39  
NULL
;

41 
hód
.
√xt
 = 
e
->next;

42  
c⁄°_ˇ°
<
E¡ry
 *>(
e
);

43 
	}
}

45 
ölöe
 
	$ö£π
 (* 
e
) {

46 
E¡ry
 * 
íåy
 = 
ªöãΩªt_ˇ°
<E¡ry *>(
e
);

47 
íåy
->
√xt
 = 
hód
.next;

48 
hód
.
√xt
 = 
íåy
;

49 
	}
}

51 ˛as†
	cE¡ry
 {

52 
	gpublic
:

53 
E¡ry
 ()

54 : 
√xt
 (
NULL
)

56 
E¡ry
 * 
√xt
;

57 
	g¥iv©e
:

58 
E¡ry
 (const Entry&);

59 
	gE¡ry
& 
	g›î©‹
=(c⁄° 
E¡ry
&);

62 
	g¥iv©e
:

63 
E¡ry
 
hód
;

	@Heap-Layers/utility/gcd.h

3 #i‚de‡
HL_GCD_H


4 
	#HL_GCD_H


	)

6 
«me•a˚
 
	gHL
 {

8 
	gãm∂©e
 <
	ga
, 
	gb
>

9 
˛ass
 
	ggcd
;

11 
	gãm∂©e
 <
	ga
>

12 
˛ass
 
	ggcd
<
	ga
, 0>

14 
	gpublic
:

15 íum { 
VALUE
 = 
a
 };

16 c⁄° 
	gvÆue
 = 
a
;

19 
	gãm∂©e
 <
	ga
, 
	gb
>

20 ˛as†
	cgcd


22 
	gpublic
:

23 íum { 
VALUE
 = 
gcd
<
b
, 
	ga
%
	gb
>::VALUE };

24 c⁄° 
	gvÆue
 = 
gcd
<
b
, 
	ga
%
	gb
>::
vÆue
;

	@Heap-Layers/utility/guard.h

27 #i‚de‡
HL_GUARD_H


28 
	#HL_GUARD_H


	)

30 
«me•a˚
 
	gHL
 {

32 
	gãm∂©e
 <
˛ass
 
	gLockTy≥
>

33 ˛as†
	cGu¨d
 {

34 
	gpublic
:

35 
ölöe
 
Gu¨d
 (
LockTy≥
& 
l
)

36 : 
_lock
 (
l
)

38 
_lock
.
lock
();

41 
	gölöe
 ~
Gu¨d
() {

42 
	g_lock
.
u∆ock
();

44 
	g¥iv©e
:

45 
LockTy≥
& 
_lock
;

	@Heap-Layers/utility/hash.h

3 #i‚de‡
HL_HASH_H


4 
	#HL_HASH_H


	)

6 
	~<c°dlib
>

7 
	~<°dlib.h
>

9 
«me•a˚
 
	gHL
 {

11 
	gãm∂©e
 <
˛ass
 
	gKey
>

12 ˛as†
	cHash
 {

13 
	gpublic
:

14 
size_t
 
hash
 (
Key
 
k
);

17 
	gãm∂©e
 <>

18 
˛ass
 
	gHash
<
	gsize_t
> {

19 
	gpublic
:

20 
ölöe
 
size_t
 
hash
 (* 
v
) {

21  (
size_t
Ë
v
;

25 
	gãm∂©e
 <>

26 
˛ass
 
	gHash
<*> {

27 
	gpublic
:

28 
ölöe
 
size_t
 
hash
 (* 
v
) {

29  (
size_t
Ë((size_tË
v
);

33 
	gãm∂©e
 <>

34 
˛ass
 
	gHash
<> {

35 
	gpublic
:

36 
ölöe
 
size_t
 
hash
 (
v
) {

37  (
size_t
Ë
v
;

	@Heap-Layers/utility/ilog2.cpp

1 
	~"ûog2.h
"

3 
	~<ˇs£π
>

4 
	~<io°ªam
>

5 
usög
 
«me•a˚
 
	g°d
;

8 
	$maö
()

10 
i
 = 1; i < 1048577; i++) {

11 
l2
 = 
HL
::
	`ûog2
(
i
);

12 
cout
 << 
i
 << "\t" << 
l2
 << "\t" << (1 <<Ü2Ë<< 
ídl
;

14 
	`as£π
 ((1 << 
l2
Ë>
i
);

15 i‡(
l2
 > 0) {

16 
	`as£π
 (
HL
::
	`ûog2
(1 << 
l2
-1) + 1 ==Ü2);

20 
	}
}

	@Heap-Layers/utility/ilog2.h

3 #i‚de‡
HL_ILOG2_H


4 
	#HL_ILOG2_H


	)

6 #i‡
deföed
(
_WIN32
)

7 
	~<wödows.h
>

10 
«me•a˚
 
	gHL
 {

13 #i‡
deföed
(
_WIN32
)

14 
ölöe
 
ûog2
 (
size_t
 
sz
)

16 
DWORD
 
	gödex
;

17 
_BôSˇnRevî£
 (&
ödex
, 
sz
);

18 i‡(!(
	gsz
 & (sz-1))) {

19  
	gödex
;

21  
	gödex
+1;

24 #ñi‡
deföed
(
__GNUC__
Ë&& deföed(
__i386__
)

25 
ölöe
 
ûog2
 (
size_t
 
sz
)

27 
	gsz
 = (
sz
 << 1) - 1;

28 
asm
 ("b§»%0, %0" : "Ù" (
sz
) : "0" (sz));

29  (Ë
	gsz
;

31 #ñi‡
deföed
(
__GNUC__
)

33 
ölöe
 
ûog2
 (c⁄° 
size_t
 
sz
)

35  (Ë(((
	gsize_t
Ë* 8Ë- 
__buûtö_˛zl
((
sz
 << 1) - 1) - 1);

38 
ölöe
 
ûog2
 (
size_t
 
v
) {

39 
	glog
 = 0;

40 
	gvÆue
 = 1;

41 
	gvÆue
 < 
	gv
) {

42 
	gvÆue
 <<= 1;

43 
	glog
++;

45  
	glog
;

	@Heap-Layers/utility/istrue.h

3 #i‚de‡
HL_ISTRUE_H


4 
	#HL_ISTRUE_H


	)

30 
«me•a˚
 
	gHL
 {

32 
	gãm∂©e
 <
boﬁ
 
	gisTrue
>

33 
˛ass
 
	gIsTrue
;

35 
	gãm∂©e
<>

36 
˛ass
 
	gIsTrue
<
	gåue
> {

37 
	gpublic
:

38 íum { 
vÆue
 = 
åue
 };

41 
	gãm∂©e
<>

42 
˛ass
 
	gIsTrue
<
	gÁl£
> {

43 
	gpublic
:

44 íum { 
vÆue
 = 
Ál£
 };

	@Heap-Layers/utility/lcm.h

3 #i‚de‡
HL_LCM_H


4 
	#HL_LCM_H


	)

6 
	~"gcd.h
"

8 
«me•a˚
 
	gHL
 {

10 
	gãm∂©e
 <
	ga
, 
	gb
>

11 
˛ass
 
	glcm
;

13 
	gãm∂©e
 <
	ga
, 
	gb
>

14 ˛as†
	clcm


16 
	gpublic
:

17 íum { 
VALUE
 = (
a
 * 
b
Ë/ (
gcd
<a, 
	gb
>::VALUE) };

18 c⁄° 
	gvÆue
 = (
a
 * 
b
Ë/ (
gcd
<a, 
	gb
>::
vÆue
);

	@Heap-Layers/utility/modulo.h

3 #i‚de‡
HL_MODULO_H


4 
	#HL_MODULO_H


	)

9 
	~<°dlib.h
>

10 
	~"checkpowîo·wo.h
"

12 
«me•a˚
 
	gHL
 {

14 
	gãm∂©e
 <
size_t
 
	gModulus
>

15 
˛ass
 
	gModulo
;

17 
	gãm∂©e
 <
size_t
 
	gModulus
>

18 ˛as†
	cModulo
 {

19 
	gpublic
:

20 
ãm∂©e
 <
˛ass
 
TYPE
>

21 
TYPE
 
mod
 (TYPE 
m
) {

22 i‡(
IsPowîOfTwo
<
Modulus
>::
VALUE
) {

23  
m
 & (
Modulus
 - 1);

25  
	gm
 % 
	gModulus
;

	@Heap-Layers/utility/myhashmap.h

3 #i‚de‡
HL_MYHASHMAP_H


4 
	#HL_MYHASHMAP_H


	)

31 
	~<as£π.h
>

32 
	~"hash.h
"

34 
«me•a˚
 
	gHL
 {

36 
	gãm∂©e
 <
ty≥«me
 
	gKey
,

37 
ty≥«me
 
	gVÆue
,

38 
˛ass
 
	gAŒoˇt‹
>

39 ˛as†
	cMyHashM≠
 {

41 
	gpublic
:

43 
MyHashM≠
 (
size
 = 
INITIAL_NUM_BINS
)

44 : 
_numBös
 (
size
)

46 
as£π
 (
_numBös
 > 0);

47 * 
	gbuf
 = 
_Æloˇt‹
.
mÆloc
 ((
Li°NodePå
Ë* 
_numBös
);

48 
	g_bös
 = 
√w
 (
buf
Ë
Li°NodePå
[
_numBös
];

49 
	gi
 = 0 ; i < 
	g_numBös
; i++) {

50 
	g_bös
[
i
] = 
NULL
;

54 
£t
 (
Key
 
k
, 
VÆue
 
v
) {

55 
	gböIndex
 = (Ë(
Hash
<
Key
>::
hash
(
k
Ë% 
_numBös
);

56 
Li°Node
 * 
	gl
 = 
_bös
[
böIndex
];

57 
	gl
 !
NULL
) {

58 i‡(
l
->
key
 =
k
) {

59 
l
->
vÆue
 = 
v
;

62 
	gl
 = 
l
->
√xt
;

65 
ö£π
 (
k
, 
v
);

68 
VÆue
 
gë
 (
Key
 
k
) {

69 
	gböIndex
 = (Ë(
Hash
<
Key
>::
hash
(
k
Ë% 
_numBös
);

70 
Li°Node
 * 
	gl
 = 
_bös
[
böIndex
];

71 
	gl
 !
NULL
) {

72 i‡(
l
->
key
 =
k
) {

73  
l
->
vÆue
;

75 
	gl
 = 
l
->
√xt
;

81 
îa£
 (
Key
 
k
) {

82 
	gböIndex
 = (Ë(
Hash
<
Key
>::
hash
(
k
Ë% 
_numBös
);

83 
Li°Node
 * 
	gcuº
 = 
_bös
[
böIndex
];

84 
Li°Node
 * 
	g¥ev
 = 
NULL
;

85 
	gcuº
 !
NULL
) {

86 i‡(
cuº
->
key
 =
k
) {

88 i‡(
cuº
 !
_bös
[
böIndex
]) {

89 
as£π
 (
¥ev
->
√xt
 =
cuº
);

90 
	g¥ev
->
	g√xt
 = 
¥ev
->
√xt
->next;

91 
	g_Æloˇt‹
.
‰ì
 (
cuº
);

93 
Li°Node
 * 
	gn
 = 
_bös
[
böIndex
]->
√xt
;

94 
	g_Æloˇt‹
.
‰ì
 (
_bös
[
böIndex
]);

95 
	g_bös
[
böIndex
] = 
n
;

99 
	g¥ev
 = 
cuº
;

100 
	gcuº
 = 
cuº
->
√xt
;

105 
	g¥iv©e
:

107 
ö£π
 (
Key
 
k
, 
VÆue
 
v
) {

108 
	gböIndex
 = (Ë(
Hash
<
Key
>::
hash
(
k
Ë% 
_numBös
);

109 * 
	g±r
 = 
_Æloˇt‹
.
mÆloc
 ((
Li°Node
));

110 i‡(
	g±r
) {

111 
Li°Node
 * 
	gl
 = 
√w
 (
±r
) ListNode;

112 
	gl
->
	gkey
 = 
k
;

113 
	gl
->
	gvÆue
 = 
v
;

114 
	gl
->
	g√xt
 = 
_bös
[
böIndex
];

115 
	g_bös
[
böIndex
] = 
l
;

119 íum { 
	gINITIAL_NUM_BINS
 = 511 };

121 ˛as†
	cLi°Node
 {

122 
	gpublic
:

123 
Li°Node
 ()

124 : 
√xt
 (
NULL
)

126 
Key
 
key
;

127 
VÆue
 
	gvÆue
;

128 
Li°Node
 * 
	g√xt
;

131 
	g_numBös
;

133 
Li°Node
 * 
	tLi°NodePå
;

134 
Li°NodePå
 * 
	g_bös
;

135 
AŒoˇt‹
 
	g_Æloˇt‹
;

	@Heap-Layers/utility/sassert.h

1 #i‚de‡
HL_SASSERT_H


2 
	#HL_SASSERT_H


	)

15 
«me•a˚
 
	gHL
 {

17 
	gãm∂©e
 <
boﬁ
 
	gas£πi⁄
>

18 
˛ass
 
	gßs£π
;

20 
	gãm∂©e
<> 
˛ass
 
	gßs£π
<
	gåue
> {

21 
	gpublic
:

22 íum { 
VALUE
 = 
åue
 };

	@Heap-Layers/utility/singleton.h

3 #i‚de‡
HL_SINGLETON_H


4 
	#HL_SINGLETON_H


	)

6 
	~<√w
>

8 
«me•a˚
 
	gHL
 {

10 
	gãm∂©e
 <
˛ass
 
	gC
>

11 ˛as†
	csögÀt⁄
 {

12 
	gpublic
:

14 
ölöe
 
C
& 
gëIn°™˚
() {

15 
buf
[(
C
)];

16 
C
 * 
	gtheSögÀt⁄
 = 
√w
 (
buf
) C;

17  *
	gtheSögÀt⁄
;

	@Heap-Layers/utility/sllist.h

27 #i‚de‡
_SLLIST_H_


28 
	#_SLLIST_H_


	)

30 
	~<as£π.h
>

38 
«me•a˚
 
	gHL
 {

40 ˛as†
	cSLLi°
 {

41 
	gpublic
:

43 
ölöe
 
SLLi°
 () {

44 
˛ór
();

47 
˛ass
 
	gE¡ry
;

50 
ölöe
 
˛ór
 () {

51 
	ghód
.
	g√xt
 = 
NULL
;

55 
ölöe
 
boﬁ
 
isEm±y
 () const {

56  (
	ghód
.
	g√xt
 =
NULL
);

60 
ölöe
 
E¡ry
 * 
gë
 () {

61 c⁄° 
E¡ry
 * 
	ge
 = 
hód
.
√xt
;

62 i‡(
	ge
 =
NULL
) {

63  
NULL
;

65 
	ghód
.
	g√xt
 = 
e
->
√xt
;

66  (
	gE¡ry
 *Ë
	ge
;

69 
	g¥iv©e
:

75 
ölöe
 
ªmove
 (
E¡ry
 *) {

76 
ab‹t
();

79 
	gpublic
:

82 
ölöe
 
ö£π
 (
E¡ry
 * 
e
) {

83 
e
->
√xt
 = 
hód
.next;

84 
	ghód
.
	g√xt
 = 
e
;

88 ˛as†
	cE¡ry
 {

89 
	gpublic
:

90 
ölöe
 
E¡ry
 ()

91 : 
√xt
 (
NULL
)

95 
public
:

96 
E¡ry
 * 
√xt
;

99 
	g¥iv©e
:

102 
E¡ry
 
hód
;

	@Heap-Layers/utility/testalign.cpp

1 
	~<io°ªam
>

3 
usög
 
«me•a˚
 
	g°d
;

5 
	~"Æign.h
"

8 
	$maö
(
¨gc
, * 
¨gv
[])

10 
i
 = 0; i < 100; i++) {

11 
cout
 << 
i
 << "\t" << 
HL
::
Æign
<4>(iË<< 
ídl
;

14 
	}
}

	@Heap-Layers/utility/timer-old.h

27 
	~<ˇs£π
>

28 
	~<c°dio
>

31 #i‚de‡
HL_TIMEROLD_H


32 
	#HL_TIMEROLD_H


	)

50 #i‡
deföed
(
__APPLE__
Ë|| deföed(
__FªeBSD__
)

51 
	~<sys/time.h
>

54 #i‡
deföed
(
__löux__
Ë&& deföed(
__GNUG__
Ë&& deföed(
__i386__
)

56 
	~<c°dio
>

57 
	~<limôs.h
>

58 
	~<time.h
>

59 
	~<uni°d.h
>

60 
	~<f˙é.h
>

61 
	~<°rög.h
>

63 
	$gëTime
 (& 
éo
, & 
thi
) {

64 
asm
 volatile ("rdtsc"

65 : "˜"(
éo
),

66 "=d" (
thi
));

67 
	}
}

70 
	$gëFªquícy
 () {

71 
‰eq
 = 0.0;

72 
boﬁ
 
öôülized
 = 
Ál£
;

73 
LTime0
, 
LTime1
, 
HTime0
, 
HTime1
;

74 i‡(!
öôülized
) {

79 
	`gëTime
 (
LTime0
, 
HTime0
);

81 
	`¶ìp
 (1);

83 
	`gëTime
 (
LTime1
, 
HTime1
);

85 
‰eq
 = ()(
LTime1
 - 
LTime0
Ë+ ()(
UINT_MAX
)*()(
HTime1
 - 
HTime0
);

86 i‡(
LTime1
 < 
LTime0
) {

87 
‰eq
 -()
UINT_MAX
;

89 
öôülized
 = 
åue
;

94  
‰eq
;

95 
	}
}

98 
«me•a˚
 
	gHL
 {

100 ˛as†
	cTimî
 {

101 
	gpublic
:

102 
Timî
 ()

103 : 
timeEœp£d
 (0.0)

105 
_‰equícy
 = 
gëFªquícy
();

109 
°¨t
 () {

110 
gëTime
 (
cuºítLo
, 
cuºítHi
);

112 
°›
 () {

113 
	glo
, 
	ghi
;

114 
gëTime
 (
lo
, 
hi
);

115 
	gnow
 = (Ë
hi
 * 4294967296.0 + 
lo
;

116 
	g¥ev
 = (Ë
cuºítHi
 * 4294967296.0 + 
cuºítLo
;

117 
	gtimeEœp£d
 = (
now
 - 
¥ev
Ë/ 
_‰equícy
;

120 
›î©‹
 () {

121  
	gtimeEœp£d
;

124 
	g¥iv©e
:

125 
timeEœp£d
;

126 
	gcuºítLo
, 
	gcuºítHi
;

127 
	g_‰equícy
;

135 #ifde‡
__SVR4


136 
	~<sys/time.h
>

137 
	~<uni°d.h
>

138 
	~<f˙é.h
>

139 
	~<sys/¥ocfs.h
>

140 
	~<c°dio
>

143 
	~<time.h
>

145 #i‡
deföed
(
unix
Ë|| deföed(
__löux
)

146 
	~<sys/time.h
>

147 
	~<uni°d.h
>

151 #ifde‡
__sgi


152 
	~<sys/ty≥s.h
>

153 
	~<sys/times.h
>

154 
	~<limôs.h
>

158 #i‡
deföed
(
_WIN32
)

159 
	~<wödows.h
>

163 #i‡
deföed
(
__BEOS__
)

164 
	~<OS.h
>

168 
«me•a˚
 
	gHL
 {

170 ˛as†
	cTimî
 {

172 
	gpublic
:

175 
Timî
 ()

176 #i‡!
deföed
(
_WIN32
)

177 : 
_°¨âime
 (0),

178 
_ñ≠£dtime
 (0)

184 
°¨t
 (Ë{ 
	g_°¨âime
 = 
_time
(); }

187 
°›
 (Ë{ 
	g_ñ≠£dtime
 +
_time
(Ë- 
_°¨âime
; }

190 
ª£t
 (Ë{ 
	g_°¨âime
 = 
_ñ≠£dtime
; }

194 
£t
 (
£cs
Ë{ 
	g_°¨âime
 = 0; 
	g_ñ≠£dtime
 = 
_£˘Ÿime
 (secs);}

198 
›î©‹
 (Ë{  
_timëo£c
 (
_ñ≠£dtime
); }

200 
cuºítTime
 (Ë{ 
TimeTy≥
 
	gt
;Å = 
_time
();  
_timëo£c
 (
t
); }

203 
	g¥iv©e
:

208 #ifde‡
__sgi


209 
	#TIMER_FOUND


	)

211 
_°¨âime
, 
	g_ñ≠£dtime
;

213 
_time
 () {

214 
tms
 
	gt
;

215 
	gticks
 = 
times
 (&
t
);

216  
	gticks
;

219 
_timëo£c
 (
t
) {

220  ((Ë(
	gt
Ë/ 
	gCLK_TCK
);

223 
_£˘Ÿime
 (
£c
) {

224  (Ë
£c
 * 
	gCLK_TCK
;

228 #ifde‡
__SVR4


229 
	#TIMER_FOUND


	)

230 
hπime_t
 
	tTimeTy≥
;

231 
TimeTy≥
 
	g_°¨âime
, 
	g_ñ≠£dtime
;

233 
TimeTy≥
 
_time
 () {

234  
gëhπime
();

237 
TimeTy≥
 
_£˘Ÿime
 (
£c
Ë{  (
	ghπime_t
Ë(
	g£c
 * 1.0e9); }

239 
_timëo£c
 (
TimeTy≥
& 
t
) {

240  ((Ë(
	gt
) / 1.0e9);

244 #i‡
deföed
(
MAC
Ë|| deföed(
macötosh
)

245 
	#TIMER_FOUND


	)

246 
	g_°¨âime
, 
	g_ñ≠£dtime
;

248 
_time
 () {

249  
gë_Mac_mi¸o£c⁄ds
();

252 
_timëo£c
 (
hπime_t
& 
t
) {

253  
	gt
;

257 #ifde‡
_WIN32


258 
	#TIMER_FOUND


	)

260 #i‚de‡
__GNUC__


261 ˛as†
	cTimeTy≥
 {

262 
	gpublic
:

263 
TimeTy≥
 ()

265 
œrgeI¡
.
QuadP¨t
 = 0;

267 
›î©‹
 & (Ë{  (&Ë
	gœrgeI¡
.
	gQuadP¨t
; }

268 
›î©‹
 
	gLARGE_INTEGER
& (Ë{  
	gœrgeI¡
; }

269 
timeToSec
 () {

270  (Ë
	gœrgeI¡
.
	gQuadP¨t
 / 
gëFªq
();

272 
	g¥iv©e
:

273 
gëFªq
 () {

274 
QuîyPîf‹m™˚Fªquícy
 (&
‰eq
);

275  (Ë
	g‰eq
.
	gQuadP¨t
;

278 
LARGE_INTEGER
 
	gœrgeI¡
;

279 
LARGE_INTEGER
 
	g‰eq
;

282 
TimeTy≥
 
	g_°¨âime
, 
	g_ñ≠£dtime
;

284 
TimeTy≥
 
_time
 () {

285 
TimeTy≥
 
	gt
;

286 
	gr
 = 
QuîyPîf‹m™˚Cou¡î
 (&((
LARGE_INTEGER
&Ë
t
));

287 
as£π
 (
r
);

288  
	gt
;

291 
_timëo£c
 (
TimeTy≥
& 
t
) {

292  
	gt
.
timeToSec
();

295 
DWORD
 
	tTimeTy≥
;

296 
DWORD
 
	g_°¨âime
, 
	g_ñ≠£dtime
;

297 
DWORD
 
_time
 () {

298  
GëTickCou¡
();

301 
_timëo£c
 (
DWORD
& 
t
) {

302  (Ë
	gt
 / 100000.0;

304 
_£˘Ÿime
 (
£c
) {

305  ()(
	g£c
);

311 #ifde‡
__BEOS__


312 
	#TIMER_FOUND


	)

313 
bigtime_t
 
	g_°¨âime
, 
	g_ñ≠£dtime
;

314 
bigtime_t
 
_time
() {

315  
sy°em_time
();

317 
_timëo£c
 (
bigtime_t
& 
t
) {

318  (Ë
	gt
 / 1000000.0;

321 
bigtime_t
 
_£˘Ÿime
 (
£c
) {

322  (
	gbigtime_t
)(
	g£c
 * 1000000.0);

326 #i‚de‡
TIMER_FOUND


328 
	tTimeTy≥
;

329 
TimeTy≥
 
	g_°¨âime
, 
	g_ñ≠£dtime
;

331 
TimeTy≥
 
_time
 () {

332 
timevÆ
 
	gt
;

333 
gëtimeofday
 (&
t
, 
NULL
);

334  
	gt
.
	gtv_£c
 * 1000000 +Å.
	gtv_u£c
;

337 
_timëo£c
 (
TimeTy≥
 
t
) {

338  ((Ë(
	gt
) / 1000000.0);

341 
TimeTy≥
 
_£˘Ÿime
 (
£c
) {

342  (
	gTimeTy≥
Ë(
	g£c
 * 1000000.0);

347 #unde‡
TIMER_FOUND


352 #ifde‡
__SVR4


353 ˛as†
	cVútuÆTimî
 : 
public
 
Timî
 {

354 
public
:

355 
hπime_t
 
_time
 () {

356  
gëhrvtime
();

	@Heap-Layers/utility/timer.h

27 #i‚de‡
HL_TIMER_H


28 
	#HL_TIMER_H


	)

48 #i‡(
__˝lu•lus
 < 201103)

49 
	~"timî-ﬁd.h
"

52 
	~<chr⁄o
>

54 
«me•a˚
 
	gHL
 {

56 ˛as†
	cTimî
 {

57 
	gpublic
:

59 
Timî
() {

60 
_°¨t
 = 
_íd
;

61 
	g_ñ≠£d
 = 0.0;

64 
°¨t
() {

65 
	g_°¨t
 = 
°d
::
chr⁄o
::
high_ªsﬁuti⁄_˛ock
::
now
();

66 
	g_íd
 = 
_°¨t
;

69 
°›
() {

70 
	g_íd
 = 
°d
::
chr⁄o
::
high_ªsﬁuti⁄_˛ock
::
now
();

71 
	g°d
::
chr⁄o
::
duøti⁄
<> 
ñ≠£d_£c⁄ds
 = 
_íd
 - 
_°¨t
;

72 
	g_ñ≠£d
 = 
ñ≠£d_£c⁄ds
.
cou¡
();

75 
›î©‹
 () {

76  
	g_ñ≠£d
;

79 
	g¥iv©e
:

80 
°d
::
chr⁄o
::
time_poöt
<°d::chr⁄o::
high_ªsﬁuti⁄_˛ock
> 
_°¨t
, 
	g_íd
;

81 
	g_ñ≠£d
;

	@Heap-Layers/wrappers/all.h

1 
	~"™siwøµî.h
"

2 
	~"macöãΩo£.h
"

3 
	~"mm≠wøµî.h
"

4 
	~"°œŒoˇt‹.h
"

	@Heap-Layers/wrappers/ansiwrapper.h

3 #i‚de‡
HL_ANSIWRAPPER_H


4 
	#HL_ANSIWRAPPER_H


	)

6 
	~<as£π.h
>

7 
	~<°rög.h
>

9 
	~"utûôy/gcd.h
"

10 
	~"utûôy/i°rue.h
"

11 
	~"utûôy/ßs£π.h
"

12 
	~"mÆlocöfo.h
"

23 
«me•a˚
 
	gHL
 {

25 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

26 ˛as†
	cANSIWøµî
 : 
public
 
Su≥rHóp
 {

27 
¥iv©e
:

35 íum { 
UNIQUE_VALUE
 = 0x81234567 };

37 
	gpublic
:

39 
ANSIWøµî
() {

40 
ßs£π
<(
gcd
<
Su≥rHóp
::
Alignmít
, 
	gHL
::
MÆlocInfo
::Alignmít>::
vÆue
 =
HL
::MÆlocInfo::Alignmít)> 
checkAlignmít
;

41 
	gcheckAlignmít
 = 
checkAlignmít
;

44 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

45 i‡(
	gsz
 == 0) {

46  (*Ë
UNIQUE_VALUE
;

51 i‡(
	gsz
 > 
	gHL
::
MÆlocInfo
::
MaxSize
) {

52  
NULL
;

54 i‡(
	gsz
 < 
	gHL
::
MÆlocInfo
::
MöSize
) {

55 
sz
 = 
HL
::
MÆlocInfo
::
MöSize
;

59 
	gßs£π
<(
	gHL
::
MÆlocInfo
::
Alignmít
 & (
HL
::MÆlocInfo::Alignmíà- 1)Ë=0> 
powTwo
;

60 
	gpowTwo
 = 
powTwo
;

63 
	gsz
 = (
sz
 + 
HL
::
MÆlocInfo
::
Alignmít
 - 1) & ~(HL::MallocInfo::Alignment - 1);

65 * 
	g±r
 = 
Su≥rHóp
::
mÆloc
 (
sz
);

66 
as£π
 ((
size_t
Ë
±r
 % 
HL
::
MÆlocInfo
::
Alignmít
 == 0);

67  
	g±r
;

70 
ölöe
 
‰ì
 (* 
±r
) {

71 i‡(
	g±r
 !(*Ë
UNIQUE_VALUE
) {

72 i‡(
±r
 != 0) {

73 
Su≥rHóp
::
‰ì
 (
±r
);

78 
ölöe
 * 
ˇŒoc
 (c⁄° 
size_t
 
s1
, c⁄° size_à
s2
) {

79 * 
	g±r
 = (*Ë
mÆloc
 (
s1
 * 
s2
);

80 i‡(
	g±r
) {

81 
mem£t
 (
±r
, 0, 
s1
 * 
s2
);

83  (*Ë
	g±r
;

86 
ölöe
 * 
ªÆloc
 (* 
±r
, c⁄° 
size_t
 
sz
) {

87 i‡(
	g±r
 == 0) {

88  
mÆloc
 (
sz
);

90 i‡(
	gsz
 == 0) {

91 
‰ì
 (
±r
);

95 
size_t
 
	gobjSize
 = 
gëSize
 (
±r
);

96 i‡(
	gobjSize
 =
sz
) {

97  
±r
;

101 * 
	gbuf
 = 
mÆloc
 (
sz
);

106 
size_t
 
	gmöSize
 = (
objSize
 < 
sz
) ? objSize : sz;

107 i‡(
	gbuf
) {

108 
mem˝y
 (
buf
, 
±r
, 
möSize
);

112 
‰ì
 (
±r
);

113  
	gbuf
;

116 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

117 i‡(
	g±r
) {

118  
	gSu≥rHóp
::
gëSize
 (
±r
);

	@Heap-Layers/wrappers/gnuwrapper-hooks.cpp

11 #i‚de‡
__GNUC__


15 
	~<î∫o.h
>

16 
	~<°rög.h
>

17 
	~<°dlib.h
>

18 
	~<°dio.h
>

19 
	~<mÆloc.h
>

20 
	~<√w
>

21 
	~<±hªad.h
>

23 
	~"hó∂ayîs.h
"

49 
boﬁ
 
	göôülized
 = 
Ál£
;

53 * 
xxmÆloc
 (
size_t
);

54 
xx‰ì
 (*);

55 
size_t
 
xxmÆloc_ußbÀ_size
 (*);

56 
xxmÆloc_lock
 ();

57 
xxmÆloc_u∆ock
 ();

59 
my_öô_hook
 ();

62 * 
my_mÆloc_hook
 (
size_t
, const *);

63 
my_‰ì_hook
 (*, const *);

64 * 
my_ªÆloc_hook
 (*, 
size_t
, const *);

65 * 
my_memÆign_hook
 (
size_t
, size_t, const *);

68 * (*
ﬁd_mÆloc_hook
Ë(
size_t
, const *);

69 (*
ﬁd_‰ì_hook
) (*, const *);

70 * (*
ﬁd_ªÆloc_hook
)(*
±r
, 
size_t
 
size
, c⁄° *
ˇŒî
);

71 * (*
ﬁd_memÆign_hook
)(
size_t
 
Æignmít
, size_à
size
, c⁄° *
ˇŒî
);

76 #i‚de‡
__MALLOC_HOOK_VOLATILE


77 
	#__MALLOC_HOOK_VOLATILE


	)

80 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
Ë(Ë
my_öô_hook
;

82 
my_öô_hook
 () {

83 i‡(!
öôülized
) {

85 
ﬁd_mÆloc_hook
 = 
__mÆloc_hook
;

86 
ﬁd_‰ì_hook
 = 
__‰ì_hook
;

87 
ﬁd_ªÆloc_hook
 = 
__ªÆloc_hook
;

88 
ﬁd_memÆign_hook
 = 
__memÆign_hook
;

91 
__mÆloc_hook
 = 
my_mÆloc_hook
;

92 
__‰ì_hook
 = 
my_‰ì_hook
;

93 
__ªÆloc_hook
 = 
my_ªÆloc_hook
;

94 
__memÆign_hook
 = 
my_memÆign_hook
;

97 
±hªad_©f‹k
(
xxmÆloc_lock
, 
xxmÆloc_u∆ock
, xxmalloc_unlock);

99 
öôülized
 = 
åue
;

105 * 
my_mÆloc_hook
 (
size_t
 
size
, const *) {

106  
xxmÆloc
(
size
);

109 
my_‰ì_hook
 (* 
±r
, const *) {

110 
xx‰ì
(
±r
);

113 * 
my_ªÆloc_hook
 (* 
±r
, 
size_t
 
sz
, const *) {

115 i‡(
±r
 =
NULL
) {

116  
xxmÆloc
(
sz
);

119 i‡(
sz
 == 0) {

120 
xx‰ì
 (
±r
);

121 #i‡
deföed
(
__APPLE__
)

124  
xxmÆloc
(1);

127  
NULL
;

131 
size_t
 
objSize
 = 
xxmÆloc_ußbÀ_size
(
±r
);

138 i‡((
objSize
 / 2 < 
sz
) && (sz <= objSize)) {

140  
±r
;

143 i‡((
objSize
 < 
sz
) && (sz < objSize * 2)) {

144 
sz
 = 
objSize
 * 2;

148 * 
buf
 = 
xxmÆloc
(
sz
);

150 i‡(
buf
 !
NULL
) {

154 
size_t
 
möSize
 = (
objSize
 < 
sz
) ? objSize : sz;

155 
mem˝y
 (
buf
, 
±r
, 
möSize
);

156 
xx‰ì
 (
±r
);

160  
buf
;

163 * 
my_memÆign_hook
 (
size_t
 
size
, size_à
Æignmít
, const *) {

165 i‡((
Æignmít
 == 0) ||

166 (
Æignmít
 & (alignment - 1)))

168  
NULL
;

173 * 
±r
 = 
xxmÆloc
 (
size
);

174 i‡(((
size_t
Ë
±r
 & (
Æignmít
 - 1)) == (size_t)Ötr) {

176  
±r
;

180 
xx‰ì
 (
±r
);

185 * 
buf
 = 
xxmÆloc
 (2 * 
Æignmít
 + 
size
);

186 * 
Æig√dPå
 = (*Ë(((
size_t
Ë
buf
 + 
Æignmít
 - 1) & ~(alignment - 1));

188  
Æig√dPå
;

196 
posix_memÆign
 (**
mem±r
, 
size_t
 
Æignmít
, size_à
size
Ë
throw
()

198 i‡(!
öôülized
) {

199 
my_öô_hook
();

202 i‡((
Æignmít
 == 0) ||

203 (
Æignmít
 & (alignment - 1)))

205  
EINVAL
;

207 * 
±r
 = 
my_memÆign_hook
 (
size
, 
Æignmít
, 
NULL
);

208 i‡(!
±r
) {

209  
ENOMEM
;

211 *
mem±r
 = 
±r
;

218 
size_t
 
mÆloc_ußbÀ_size
 (* 
±r
Ë
throw
() {

219  
xxmÆloc_ußbÀ_size
 (
±r
);

222 
mÆl›t
 (
∑øm
, 
vÆue
Ë
throw
() {

224 
∑øm
 =Öaram;

225 
vÆue
 = value;

229 
mÆloc_åim
 (
size_t
 
∑d
Ë
throw
() {

231 
∑d
 =Öad;

235 
mÆloc_°©s
 (Ë
throw
() {

239 * 
mÆloc_gë_°©e
 (Ë
throw
() {

240  
NULL
;

243 
mÆloc_£t_°©e
 (* 
±r
Ë
throw
() {

244 
±r
 =Ötr;

248 
mÆlöfo
 mÆlöfo(Ë
throw
() {

250 
mÆlöfo
 
m
;

251 
m
.
¨ía
 = 0;

252 
m
.
‹dblks
 = 0;

253 
m
.
smblks
 = 0;

254 
m
.
hblks
 = 0;

255 
m
.
hblkhd
 = 0;

256 
m
.
usmblks
 = 0;

257 
m
.
fsmblks
 = 0;

258 
m
.
u‹dblks
 = 0;

259 
m
.
f‹dblks
 = 0;

260 
m
.
kìpco°
 = 0;

261  
m
;

264 * 
mÆloc
 (
size_t
 
sz
Ë
throw
 () {

265  
xxmÆloc
 (
sz
);

268 
‰ì
 (* 
±r
Ë
throw
() {

269 
xx‰ì
 (
±r
);

272 * 
ªÆloc
 (* 
±r
, 
size_t
 
sz
Ë
throw
 () {

273  
my_ªÆloc_hook
 (
±r
, 
sz
, 
NULL
);

276 * 
memÆign
 (
size_t
 
Æignmít
, size_à
sz
Ë
throw
() {

277  
my_memÆign_hook
 (
sz
, 
Æignmít
, 
NULL
);

280 
c‰ì
 (* 
±r
Ë
throw
 () {

281 
xx‰ì
 (
±r
);

284 
size_t
 
mÆloc_size
 (* 
p
) {

285  
xxmÆloc_ußbÀ_size
 (
p
);

288 
size_t
 
mÆloc_good_size
 (size_à
sz
) {

289 * 
±r
 = 
xxmÆloc
(
sz
);

290 
size_t
 
objSize
 = 
xxmÆloc_ußbÀ_size
(
±r
);

291 
xx‰ì
(
±r
);

292  
objSize
;

295 * 
vÆloc
 (
size_t
 
sz
Ë
throw
() {

296  
my_memÆign_hook
 (
sz
, 
HL
::
CPUInfo
::
PageSize
, 
NULL
);

299 * 
pvÆloc
 (
size_t
 
sz
Ë
throw
() {

300  
vÆloc
 ((
sz
 + 
HL
::
CPUInfo
::
PageSize
 - 1) & ~(HL::CPUInfo::PageSize - 1));

303 * 
Æig√d_Æloc
 (
size_t
 
Æignmít
, size_à
size
)

309 
size
 = sizê+ 
Æignmít
 - (size %álignment);

310  
memÆign
(
Æignmít
, 
size
);

316 * 
›î©‹
 
	$√w
 (
size_t
 
sz
Ë
	$throw
 (
°d
::
bad_Æloc
)

318 * 
±r
 = 
	`xxmÆloc
 (
sz
);

319 i‡(
±r
 =
NULL
) {

320 
throw
 
°d
::
	`bad_Æloc
();

322  
±r
;

324 
	}
}

326 
›î©‹
 
	$dñëe
 (* 
±r
)

327 
	$throw
 ()

329 
	`xx‰ì
 (
±r
);

330 
	}
}

332 * 
›î©‹
 
	$√w
 (
size_t
 
sz
, c⁄° 
°d
::
nŸhrow_t
&Ë
	$throw
() {

333  
	`xxmÆloc
(
sz
);

334 
	}
}

336 * 
›î©‹
 
√w
[] (
size_t
 
size
)

337 
	$throw
 (
°d
::
bad_Æloc
)

339 * 
±r
 = 
	`xxmÆloc
(
size
);

340 i‡(
±r
 =
NULL
) {

341 
throw
 
°d
::
	`bad_Æloc
();

343  
±r
;

345 
	}
}

347 * 
›î©‹
 
√w
[] (
size_t
 
sz
, c⁄° 
°d
::
nŸhrow_t
&)

348 
	$throw
()

350  
	`xxmÆloc
(
sz
);

351 
	}
}

353 
›î©‹
 
dñëe
[] (* 
±r
)

354 
	$throw
 ()

356 
	`xx‰ì
 (
±r
);

357 
	}
}

	@Heap-Layers/wrappers/gnuwrapper.cpp

11 #i‚de‡
__GNUC__


15 
	~<î∫o.h
>

16 
	~<°rög.h
>

17 
	~<°dlib.h
>

18 
	~<°dio.h
>

19 
	~<mÆloc.h
>

20 
	~<√w
>

21 
	~<±hªad.h
>

22 
	~<sys/cdefs.h
>

24 
	~"hó∂ayîs.h
"

51 
	#WEAK
(
x
Ë
	`__©åibuã__
 ((
wók
, 
	`Æüs
(#x)))

	)

52 #i‚de‡
__THROW


53 
	#__THROW


	)

56 
	#CUSTOM_PREFIX
(
x
Ë
hﬂrd_
##
	)
x

58 
	#WEAK_REDEF1
(
ty≥
,
‚ame
,
¨g1
Ëty≥ 
	`‚ame
◊rg1Ë
__THROW
 
	`WEAK
(
hﬂrd_
##‚ame)

	)

59 
	#WEAK_REDEF2
(
ty≥
,
‚ame
,
¨g1
,
¨g2
Ëty≥ 
	`‚ame
◊rg1,¨g2Ë
__THROW
 
	`WEAK
(
hﬂrd_
##‚ame)

	)

60 
	#WEAK_REDEF3
(
ty≥
,
‚ame
,
¨g1
,
¨g2
,
¨g3
Ëty≥ 
	`‚ame
◊rg1,¨g2,¨g3Ë
__THROW
 
	`WEAK
(
hﬂrd_
##‚ame)

	)

63 
WEAK_REDEF1
(*, 
mÆloc
, 
size_t
);

64 
WEAK_REDEF1
(, 
‰ì
, *);

65 
WEAK_REDEF1
(, 
c‰ì
, *);

66 
WEAK_REDEF2
(*, 
ˇŒoc
, 
size_t
, size_t);

67 
WEAK_REDEF2
(*, 
ªÆloc
, *, 
size_t
);

68 
WEAK_REDEF2
(*, 
memÆign
, 
size_t
, size_t);

69 
WEAK_REDEF3
(, 
posix_memÆign
, **, 
size_t
, size_t);

70 
WEAK_REDEF2
(*, 
Æig√d_Æloc
, 
size_t
, size_t);

71 
WEAK_REDEF1
(
size_t
, 
mÆloc_ußbÀ_size
, *);

74 
	~"wøµî.˝p
"

	@Heap-Layers/wrappers/macinterpose.h

3 #i‚de‡
HL_MACINTERPOSE_H


4 
	#HL_MACINTERPOSE_H


	)

10 
	söãΩo£_s
 {

11 *
	m√w_func
;

12 *
	m‹ig_func
;

13 } 
	töãΩo£_t
;

15 
	#MAC_INTERPOSE
(
√wf
,
ﬁdf
Ë
	`__©åibuã__
((
u£d
)) \

16 c⁄° 
öãΩo£_t
 
macöãΩo£
##
√wf
##
ﬁdf
 \

17 
	`__©åibuã__
 ((
	`£˘i⁄
("__DATA, __interpose"))) = \

18 { (*Ë
√wf
, (*Ë
ﬁdf
 }

	)

	@Heap-Layers/wrappers/macwrapper.cpp

10 #i‚de‡
__APPLE__


14 
	~<°dlib.h
>

15 
	~<°dio.h
>

16 
	~<°rög.h
>

17 
	~<mÆloc/mÆloc.h
>

18 
	~<î∫o.h
>

20 
	~<uni°d.h
>

52 
	~<as£π.h
>

56 * 
xxmÆloc
 (
size_t
);

57 
xx‰ì
 (*);

60 
size_t
 
xxmÆloc_ußbÀ_size
 (*);

63 
xxmÆloc_lock
 ();

66 
xxmÆloc_u∆ock
 ();

70 
	~"macöãΩo£.h
"

77 
	#MACWRAPPER_PREFIX
(
n
Ë
macwøµî_
##
	)
n

81 * 
MACWRAPPER_PREFIX
(
mÆloc
Ë(
size_t
 
sz
) {

82 #i‡
deföed
(
__APPLE__
)

85 i‡(
sz
 < 16) {

86 
sz
 = 16;

88 i‡(
sz
 % 16 != 0) {

89 
sz
 += 16 - (sz % 16);

92 * 
±r
 = 
xxmÆloc
(
sz
);

93  
±r
;

96 
size_t
 
MACWRAPPER_PREFIX
(
mÆloc_ußbÀ_size
Ë(* 
±r
) {

97 i‡(
±r
 =
NULL
) {

100 
size_t
 
objSize
 = 
xxmÆloc_ußbÀ_size
 (
±r
);

101  
objSize
;

104 
MACWRAPPER_PREFIX
(
‰ì
Ë(* 
±r
) {

105 
xx‰ì
 (
±r
);

108 
size_t
 
MACWRAPPER_PREFIX
(
mÆloc_good_size
Ë(size_à
sz
) {

109 * 
±r
 = 
MACWRAPPER_PREFIX
(
mÆloc
)(
sz
);

110 
size_t
 
objSize
 = 
MACWRAPPER_PREFIX
(
mÆloc_ußbÀ_size
)(
±r
);

111 
MACWRAPPER_PREFIX
(
‰ì
)(
±r
);

112  
objSize
;

115 * 
_exãnded_ªÆloc
 (* 
±r
, 
size_t
 
sz
, 
boﬁ
 
isRóŒocf
)

118 i‡(
±r
 =
NULL
) {

119  
MACWRAPPER_PREFIX
(
mÆloc
)(
sz
);

124 i‡(
sz
 == 0) {

125 
MACWRAPPER_PREFIX
(
‰ì
)(
±r
);

126  
MACWRAPPER_PREFIX
(
mÆloc
)(1);

129 
size_t
 
objSize
 = 
MACWRAPPER_PREFIX
(
mÆloc_ußbÀ_size
)(
±r
);

135 i‡((
objSize
 / 2 < 
sz
) && (sz <= objSize)) {

137  
±r
;

141 i‡((
objSize
 < 
sz
) && (sz < objSize * 2)) {

142 
sz
 = 
objSize
 * 2;

146 * 
buf
 = 
MACWRAPPER_PREFIX
(
mÆloc
)((
size_t
Ë(
sz
));

148 i‡(
buf
 !
NULL
) {

152 
size_t
 
möSize
 = (
objSize
 < 
sz
) ? objSize : sz;

153 
mem˝y
 (
buf
, 
±r
, 
möSize
);

154 
MACWRAPPER_PREFIX
(
‰ì
Ë(
±r
);

156 i‡(
isRóŒocf
) {

159 
MACWRAPPER_PREFIX
(
‰ì
Ë(
±r
);

164  
buf
;

167 * 
MACWRAPPER_PREFIX
(
ªÆloc
Ë(* 
±r
, 
size_t
 
sz
) {

168  
_exãnded_ªÆloc
 (
±r
, 
sz
, 
Ál£
);

171 * 
MACWRAPPER_PREFIX
(
ªÆlocf
Ë(* 
±r
, 
size_t
 
sz
) {

172  
_exãnded_ªÆloc
 (
±r
, 
sz
, 
åue
);

175 * 
MACWRAPPER_PREFIX
(
ˇŒoc
Ë(
size_t
 
ñsize
, size_à
√Àms
) {

176 
size_t
 
n
 = 
√Àms
 * 
ñsize
;

177 i‡(
n
 == 0) {

178 
n
 = 1;

180 * 
±r
 = 
MACWRAPPER_PREFIX
(
mÆloc
Ë(
n
);

181 i‡(
±r
) {

182 
mem£t
 (
±r
, 0, 
n
);

184  
±r
;

187 * 
MACWRAPPER_PREFIX
(
°rdup
Ë(c⁄° * 
s
)

189 * 
√wSåög
 = 
NULL
;

190 i‡(
s
 !
NULL
) {

191 
Àn
 = 
°æí
(
s
) + 1;

192 i‡((
√wSåög
 = (*Ë
MACWRAPPER_PREFIX
(
mÆloc
)(
Àn
))) {

193 
mem˝y
 (
√wSåög
, 
s
, 
Àn
);

196  
√wSåög
;

199 * 
MACWRAPPER_PREFIX
(
memÆign
Ë(
size_t
 
Æignmít
, size_à
size
)

202 i‡((
Æignmít
 == 0) ||

203 (
Æignmít
 & (alignment - 1)))

205  
NULL
;

209 * 
±r
 = 
MACWRAPPER_PREFIX
(
mÆloc
)(
size
);

210 i‡(((
size_t
Ë
±r
 & (
Æignmít
 - 1)) == (size_t)Ötr) {

212  
±r
;

215 
MACWRAPPER_PREFIX
(
‰ì
)(
±r
);

219 * 
buf
 = 
MACWRAPPER_PREFIX
(
mÆloc
)(2 * 
Æignmít
 + 
size
);

220 * 
Æig√dPå
 = (*Ë(((
size_t
Ë
buf
 + 
Æignmít
 - 1) & ~(alignment - 1));

221  
Æig√dPå
;

224 
MACWRAPPER_PREFIX
(
posix_memÆign
)(**
mem±r
, 
size_t
 
Æignmít
, size_à
size
)

227 i‡((
Æignmít
 == 0) ||

228 (
Æignmít
 & (alignment - 1)))

230  
EINVAL
;

232 * 
±r
 = 
MACWRAPPER_PREFIX
(
memÆign
Ë(
Æignmít
, 
size
);

233 i‡(!
±r
) {

234  
ENOMEM
;

236 *
mem±r
 = 
±r
;

241 * 
MACWRAPPER_PREFIX
(
vÆloc
Ë(
size_t
 
sz
)

244 * 
±r
 = 
MACWRAPPER_PREFIX
(
memÆign
Ë(
PAGE_SIZE
, 
sz
);

245  
±r
;

256 * 
_Znwm
 ();

257 * 
_Z«m
 ();

260 
_ZdlPv
 (*);

261 
_ZdaPv
 (*);

265 * 
_ZnwmRKSt9nŸhrow_t
 ();

266 * 
_Z«mRKSt9nŸhrow_t
 ();

268 
_ZdaPvRKSt9nŸhrow_t
 (*);

270 
_mÆloc_f‹k_¥ï¨e
 ();

271 
_mÆloc_f‹k_∑ª¡
 ();

272 
_mÆloc_f‹k_chûd
 ();

275 
mÆloc_z⁄e_t
 
theDeÁu…Z⁄e
;

279 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_b©ch_mÆloc
)(
mÆloc_z⁄e_t
 *,

280 
size_t
 
sz
,

281 ** 
ªsu…s
,

282 
num_ªque°ed
)

284 
i
 = 0; i < 
num_ªque°ed
; i++) {

285 
ªsu…s
[
i
] = 
MACWRAPPER_PREFIX
(
mÆloc
)(
sz
);

286 i‡(
ªsu…s
[
i
] =
NULL
) {

287  
i
;

290  
num_ªque°ed
;

293 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_b©ch_‰ì
)(
mÆloc_z⁄e_t
 *,

294 ** 
to_be_‰ìd
,

295 
num
)

297 
i
 = 0; i < 
num
; i++) {

298 
MACWRAPPER_PREFIX
(
‰ì
)(
to_be_‰ìd
[
i
]);

302 
boﬁ
 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_check
)(
mÆloc_z⁄e_t
 *) {

304  
åue
;

307 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_¥öt
)(
mÆloc_z⁄e_t
 *, 
boﬁ
) {

311 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_log
)(
mÆloc_z⁄e_t
 *, *) {

315 c⁄° * 
MACWRAPPER_PREFIX
(
mÆloc_gë_z⁄e_«me
)(
mÆloc_z⁄e_t
 *) {

316  
theDeÁu…Z⁄e
.
z⁄e_«me
;

319 
MACWRAPPER_PREFIX
(
mÆloc_£t_z⁄e_«me
)(
mÆloc_z⁄e_t
 *, const *) {

323 
mÆloc_z⁄e_t
 * 
MACWRAPPER_PREFIX
(
mÆloc_¸óã_z⁄e
)(
vm_size_t
,

326  &
theDeÁu…Z⁄e
;

329 
MACWRAPPER_PREFIX
(
mÆloc_de°roy_z⁄e
Ë(
mÆloc_z⁄e_t
 *) {

333 
mÆloc_z⁄e_t
 * 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_‰om_±r
) (const *) {

334  
NULL
;

337 * 
MACWRAPPER_PREFIX
(
mÆloc_deÁu…_z⁄e
) () {

338  (*Ë&
theDeÁu…Z⁄e
;

341 
mÆloc_z⁄e_t
 *

342 
MACWRAPPER_PREFIX
(
mÆloc_deÁu…_purgóbÀ_z⁄e
)() {

343  &
theDeÁu…Z⁄e
;

346 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_‰ì_deföôe_size
Ë(
mÆloc_z⁄e_t
 *, * 
±r
, 
size_t
) {

347 
MACWRAPPER_PREFIX
(
‰ì
)(
±r
);

350 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_ªgi°î
Ë(
mÆloc_z⁄e_t
 *) {

353 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_uƒegi°î
Ë(
mÆloc_z⁄e_t
 *) {

356 
MACWRAPPER_PREFIX
(
mÆloc_jump°¨t
)() {

360 * 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_mÆloc
Ë(
mÆloc_z⁄e_t
 *, 
size_t
 
size
) {

361  
MACWRAPPER_PREFIX
(
mÆloc
Ë(
size
);

364 * 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_ˇŒoc
Ë(
mÆloc_z⁄e_t
 *, 
size_t
 
n
, size_à
size
) {

365  
MACWRAPPER_PREFIX
(
ˇŒoc
Ë(
n
, 
size
);

368 * 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_vÆloc
Ë(
mÆloc_z⁄e_t
 *, 
size_t
 
size
) {

369  
MACWRAPPER_PREFIX
(
vÆloc
Ë(
size
);

372 * 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_ªÆloc
Ë(
mÆloc_z⁄e_t
 *, * 
±r
, 
size_t
 
size
) {

373  
MACWRAPPER_PREFIX
(
ªÆloc
Ë(
±r
, 
size
);

376 * 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_memÆign
Ë(
mÆloc_z⁄e_t
 *, 
size_t
 
Æignmít
, size_à
size
) {

377  
MACWRAPPER_PREFIX
(
memÆign
Ë(
Æignmít
, 
size
);

380 
MACWRAPPER_PREFIX
(
mÆloc_z⁄e_‰ì
Ë(
mÆloc_z⁄e_t
 *, * 
±r
) {

381 
MACWRAPPER_PREFIX
(
‰ì
)(
±r
);

384 
size_t
 
MACWRAPPER_PREFIX
(
öã∫Æ_mÆloc_z⁄e_size
Ë(
mÆloc_z⁄e_t
 *, c⁄° * 
±r
) {

385  
MACWRAPPER_PREFIX
(
mÆloc_ußbÀ_size
)((*Ë
±r
);

388 
MACWRAPPER_PREFIX
(
_mÆloc_f‹k_¥ï¨e
)() {

390 
xxmÆloc_lock
();

393 
MACWRAPPER_PREFIX
(
_mÆloc_f‹k_∑ª¡
)() {

395 
xxmÆloc_u∆ock
();

398 
MACWRAPPER_PREFIX
(
_mÆloc_f‹k_chûd
)() {

400 
xxmÆloc_u∆ock
();

405 "C" 
v‰ì
 (*);

406 "C" 
mÆloc_jump°¨t
 ();

410 
MAC_INTERPOSE
(
macwøµî_mÆloc
, 
mÆloc
);

411 
MAC_INTERPOSE
(
macwøµî_vÆloc
, 
vÆloc
);

412 
MAC_INTERPOSE
(
macwøµî_‰ì
, 
‰ì
);

414 
MAC_INTERPOSE
(
macwøµî_ªÆloc
, 
ªÆloc
);

415 
MAC_INTERPOSE
(
macwøµî_ªÆlocf
, 
ªÆlocf
);

416 
MAC_INTERPOSE
(
macwøµî_ˇŒoc
, 
ˇŒoc
);

417 
MAC_INTERPOSE
(
macwøµî_mÆloc_good_size
, 
mÆloc_good_size
);

418 
MAC_INTERPOSE
(
macwøµî_°rdup
, 
°rdup
);

419 
MAC_INTERPOSE
(
macwøµî_posix_memÆign
, 
posix_memÆign
);

420 
MAC_INTERPOSE
(
macwøµî_mÆloc_deÁu…_z⁄e
, 
mÆloc_deÁu…_z⁄e
);

421 
MAC_INTERPOSE
(
macwøµî_mÆloc_deÁu…_purgóbÀ_z⁄e
, 
mÆloc_deÁu…_purgóbÀ_z⁄e
);

426 
MAC_INTERPOSE
(
macwøµî_mÆloc_z⁄e_b©ch_mÆloc
, 
mÆloc_z⁄e_b©ch_mÆloc
);

427 
MAC_INTERPOSE
(
macwøµî_mÆloc_z⁄e_b©ch_‰ì
, 
mÆloc_z⁄e_b©ch_‰ì
);

428 
MAC_INTERPOSE
(
macwøµî_mÆloc_z⁄e_mÆloc
, 
mÆloc_z⁄e_mÆloc
);

429 
MAC_INTERPOSE
(
macwøµî_mÆloc_z⁄e_ˇŒoc
, 
mÆloc_z⁄e_ˇŒoc
);

430 
MAC_INTERPOSE
(
macwøµî_mÆloc_z⁄e_vÆloc
, 
mÆloc_z⁄e_vÆloc
);

431 
MAC_INTERPOSE
(
macwøµî_mÆloc_z⁄e_ªÆloc
, 
mÆloc_z⁄e_ªÆloc
);

432 
MAC_INTERPOSE
(
macwøµî_mÆloc_z⁄e_memÆign
, 
mÆloc_z⁄e_memÆign
);

433 
MAC_INTERPOSE
(
macwøµî_mÆloc_z⁄e_‰ì
, 
mÆloc_z⁄e_‰ì
);

438 
MAC_INTERPOSE
(
macwøµî_mÆloc_gë_z⁄e_«me
, 
mÆloc_gë_z⁄e_«me
);

439 
MAC_INTERPOSE
(
macwøµî_mÆloc_¸óã_z⁄e
, 
mÆloc_¸óã_z⁄e
);

440 
MAC_INTERPOSE
(
macwøµî_mÆloc_de°roy_z⁄e
, 
mÆloc_de°roy_z⁄e
);

441 
MAC_INTERPOSE
(
macwøµî_mÆloc_z⁄e_check
, 
mÆloc_z⁄e_check
);

442 
MAC_INTERPOSE
(
macwøµî_mÆloc_z⁄e_¥öt
, 
mÆloc_z⁄e_¥öt
);

443 
MAC_INTERPOSE
(
macwøµî_mÆloc_z⁄e_log
, 
mÆloc_z⁄e_log
);

444 
MAC_INTERPOSE
(
macwøµî_mÆloc_£t_z⁄e_«me
, 
mÆloc_£t_z⁄e_«me
);

445 
MAC_INTERPOSE
(
macwøµî_mÆloc_z⁄e_‰om_±r
, 
mÆloc_z⁄e_‰om_±r
);

446 
MAC_INTERPOSE
(
macwøµî_mÆloc_z⁄e_ªgi°î
, 
mÆloc_z⁄e_ªgi°î
);

447 
MAC_INTERPOSE
(
macwøµî_mÆloc_z⁄e_uƒegi°î
, 
mÆloc_z⁄e_uƒegi°î
);

448 
MAC_INTERPOSE
(
macwøµî_mÆloc_jump°¨t
, 
mÆloc_jump°¨t
);

451 
MAC_INTERPOSE
(
macwøµî__mÆloc_f‹k_¥ï¨e
, 
_mÆloc_f‹k_¥ï¨e
);

452 
MAC_INTERPOSE
(
macwøµî__mÆloc_f‹k_∑ª¡
, 
_mÆloc_f‹k_∑ª¡
);

453 
MAC_INTERPOSE
(
macwøµî__mÆloc_f‹k_chûd
, 
_mÆloc_f‹k_chûd
);

454 
MAC_INTERPOSE
(
macwøµî_‰ì
, 
v‰ì
);

455 
MAC_INTERPOSE
(
macwøµî_mÆloc_ußbÀ_size
, 
mÆloc_size
);

456 
MAC_INTERPOSE
(
macwøµî_mÆloc
, 
_Znwm
);

457 
MAC_INTERPOSE
(
macwøµî_mÆloc
, 
_Z«m
);

459 
MAC_INTERPOSE
(
macwøµî_mÆloc
, 
_ZnwmRKSt9nŸhrow_t
);

460 
MAC_INTERPOSE
(
macwøµî_mÆloc
, 
_Z«mRKSt9nŸhrow_t
);

462 
MAC_INTERPOSE
(
macwøµî_‰ì
, 
_ZdlPv
);

463 
MAC_INTERPOSE
(
macwøµî_‰ì
, 
_ZdaPv
);

464 
MAC_INTERPOSE
(
macwøµî_‰ì
, 
_ZdaPvRKSt9nŸhrow_t
);

480 c⁄° * 
	gtheO√TrueZ⁄eName
 = "DefaultMallocZone";

482 ˛as†
	cöôülizeDeÁu…Z⁄e
 {

483 
	mpublic
:

484 
	$öôülizeDeÁu…Z⁄e
() {

485 
theDeÁu…Z⁄e
.
size
 = 
	`MACWRAPPER_PREFIX
(
öã∫Æ_mÆloc_z⁄e_size
);

486 
theDeÁu…Z⁄e
.
mÆloc
 = 
	`MACWRAPPER_PREFIX
(
mÆloc_z⁄e_mÆloc
);

487 
theDeÁu…Z⁄e
.
ˇŒoc
 = 
	`MACWRAPPER_PREFIX
(
mÆloc_z⁄e_ˇŒoc
);

488 
theDeÁu…Z⁄e
.
vÆloc
 = 
	`MACWRAPPER_PREFIX
(
mÆloc_z⁄e_vÆloc
);

489 
theDeÁu…Z⁄e
.
‰ì
 = 
	`MACWRAPPER_PREFIX
(
mÆloc_z⁄e_‰ì
);

490 
theDeÁu…Z⁄e
.
ªÆloc
 = 
	`MACWRAPPER_PREFIX
(
mÆloc_z⁄e_ªÆloc
);

491 
theDeÁu…Z⁄e
.
de°roy
 = 
	`MACWRAPPER_PREFIX
(
mÆloc_de°roy_z⁄e
);

492 
theDeÁu…Z⁄e
.
z⁄e_«me
 = 
theO√TrueZ⁄eName
;

493 
theDeÁu…Z⁄e
.
b©ch_mÆloc
 = 
	`MACWRAPPER_PREFIX
(
mÆloc_z⁄e_b©ch_mÆloc
);

494 
theDeÁu…Z⁄e
.
b©ch_‰ì
 = 
	`MACWRAPPER_PREFIX
(
mÆloc_z⁄e_b©ch_‰ì
);

495 
theDeÁu…Z⁄e
.
öåo•e˘
 = 
NULL
;

496 
theDeÁu…Z⁄e
.
vîsi⁄
 = 1;

497 
theDeÁu…Z⁄e
.
memÆign
 = 
	`MACWRAPPER_PREFIX
(
mÆloc_z⁄e_memÆign
);

498 
theDeÁu…Z⁄e
.
‰ì_deföôe_size
 = 
	`MACWRAPPER_PREFIX
(
mÆloc_z⁄e_‰ì_deföôe_size
);

499 
theDeÁu…Z⁄e
.
¥essuª_ªlõf
 = 
NULL
;

506 
mÆloc_z⁄e_t
 *
deÁu…_z⁄e
 = 
	`mÆloc_deÁu…_z⁄e
();

507 
	`mÆloc_z⁄e_uƒegi°î
(
deÁu…_z⁄e
);

508 
	`mÆloc_z⁄e_ªgi°î
 (&
theDeÁu…Z⁄e
);

510 
	}
};

514 
öôülizeDeÁu…Z⁄e
 
	göôMe
;

	@Heap-Layers/wrappers/mallocinfo.h

27 #i‚de‡
HL_MALLOCINFO_H


28 
	#HL_MALLOCINFO_H


	)

30 
	~<limôs.h
>

32 
«me•a˚
 
	gHL
 {

34 ˛as†
	cMÆlocInfo
 {

35 
	gpublic
:

37 íum { 
MaxSize
 = 
UINT_MAX
 / 2 };

39 #i‡
deföed
(
__LP64__
Ë|| deföed(
_LP64
Ë|| deföed(
__APPLE__
Ë|| deföed(
_WIN64
Ë|| deföed(
__x86_64__
)

40 íum { 
	gMöSize
 = 16 };

41 íum { 
	gAlignmít
 = 16 };

43 íum { 
	gMöSize
 = () };

44 íum { 
	gAlignmít
 = () };

	@Heap-Layers/wrappers/mmapwrapper.h

27 #i‚de‡
HL_MMAPWRAPPER_H


28 
	#HL_MMAPWRAPPER_H


	)

30 #i‡
deföed
(
_WIN32
)

31 
	~<wödows.h
>

34 
	~<sys/ty≥s.h
>

35 
	~<sys/°©.h
>

36 
	~<f˙é.h
>

37 
	~<uni°d.h
>

38 
	~<sys/mm™.h
>

39 
	~<m≠
>

43 #ifde‡
MAP_PMFS


44 
	~<as£π.h
>

45 
	gfú°_time
=1;

46 
	ggfd
 = 0;

47 
	gpmfs_size
=3221225472;

51 #ifde‡
_USE_NVMAP


52 
	~<time.h
>

54 
	#__NR_nv_mm≠_pgoff
 314

	)

55 
	#_USERANDOM_PROCID


	)

56 
	snvm≠_¨g_°ru˘
 {

58 
	mfd
;

59 
	moff£t
;

60 
	mvma_id
;

61 
	m¥oc_id
;

63 
	mpÊags
;

64 
	mnoPîsi°
;

65 
	mªf_cou¡
;

67 
	#BASEPROCID
 347

	)

68 
nvm≠_¨g_°ru˘
 
	tnv¨g_s
;

69 
	gfú°_time
=1;

73 #i‡
deföed
(
__SVR4
)

75 "C" 
madvi£
 (
ˇddr_t
, 
size_t
, );

78 #i‡!
deföed
(
HL_MMAP_PROTECTION_MASK
)

79 #i‡
HL_EXECUTABLE_HEAP


80 
	#HL_MMAP_PROTECTION_MASK
 (
PROT_READ
 | 
PROT_WRITE
 | 
PROT_EXEC
)

	)

82 
	#HL_MMAP_PROTECTION_MASK
 (
PROT_READ
 | 
PROT_WRITE
)

	)

86 #i‡!
deföed
(
MAP_ANONYMOUS
Ë&& deföed(
MAP_ANON
)

87 
	#MAP_ANONYMOUS
 
MAP_ANON


	)

90 
«me•a˚
 
	gHL
 {

92 ˛as†
	cMm≠Wøµî
 {

93 
	gpublic
:

95 #i‡
deföed
(
_WIN32
)

98 íum { 
Size
 = 4 * 1024 };

99 íum { 
	gAlignmít
 = 64 * 1024 };

101 #ñi‡
deföed
(
__SVR4
)

103 íum { 
	gSize
 = 8 * 1024 };

104 íum { 
	gAlignmít
 = 64 * 1024 };

108 íum { 
	gSize
 = 4 * 1024 };

109 íum { 
	gAlignmít
 = 4 * 1024 };

115 
ªÀa£
 (* 
±r
, 
size_t
 
sz
) {

116 i‡((
	gsize_t
Ë
	g±r
 % 
	gAlignmít
 == 0) {

118 #i‡
deföed
(
_WIN32
)

119 
VútuÆAŒoc
 (
±r
, 
sz
, 
MEM_RESET
, 
PAGE_NOACCESS
);

120 #ñi‡
deföed
(
__APPLE__
)

121 
madvi£
 (
±r
, 
sz
, 
MADV_DONTNEED
);

122 
madvi£
 (
±r
, 
sz
, 
MADV_FREE
);

125 
madvi£
 ((
ˇddr_t
Ë
±r
, 
sz
, 
MADV_DONTNEED
);

130 #i‡
deföed
(
_WIN32
)

132 
¥Ÿe˘
 (* 
±r
, 
size_t
 
sz
) {

133 
DWORD
 
	gﬁdPrŸe˘i⁄
;

134 
VútuÆPrŸe˘
 (
±r
, 
sz
, 
PAGE_NOACCESS
, &
ﬁdPrŸe˘i⁄
);

137 
u≈rŸe˘
 (* 
±r
, 
size_t
 
sz
) {

138 
DWORD
 
	gﬁdPrŸe˘i⁄
;

139 
VútuÆPrŸe˘
 (
±r
, 
sz
, 
PAGE_READWRITE
, &
ﬁdPrŸe˘i⁄
);

142 * 
m≠
 (
size_t
 
sz
) {

143 * 
	g±r
;

144 #i‡
HL_EXECUTABLE_HEAP


145 c⁄° 
	g≥rmÊags
 = 
PAGE_EXECUTE_READWRITE
;

147 c⁄° 
	g≥rmÊags
 = 
PAGE_READWRITE
;

149 
	g±r
 = 
VútuÆAŒoc
 (
NULL
, 
sz
, 
MEM_RESERVE
 | 
MEM_COMMIT
 | 
MEM_TOP_DOWN
, 
≥rmÊags
);

150  
	g±r
;

153 
unm≠
 (* 
±r
, 
size_t
) {

154 
VútuÆFªe
 (
±r
, 0, 
MEM_RELEASE
);

159 
¥Ÿe˘
 (* 
±r
, 
size_t
 
sz
) {

160 
m¥Ÿe˘
 ((*Ë
±r
, 
sz
, 
PROT_NONE
);

163 
u≈rŸe˘
 (* 
±r
, 
size_t
 
sz
) {

164 
m¥Ÿe˘
 ((*Ë
±r
, 
sz
, 
PROT_READ
 | 
PROT_WRITE
 | 
PROT_EXEC
);

168 
utû_tmpfûe
(c⁄° *
dú
, 
size_t
 
size
)

170 
	gî∫o
;

171 
	gãmp
[] = "/vmem.XXXXXX";

172 
	gfuŒ«me
[
°æí
(
dú
Ë+  (
ãmp
)];

173 (Ë
°r˝y
(
fuŒ«me
, 
dú
);

174 (Ë
°rˇt
(
fuŒ«me
, 
ãmp
);

176 
	gfd
;

177 i‡((
	gfd
 = 
mk°emp
(
fuŒ«me
)) < 0) {

178 
¥ötf
("!mkstemp");

179 
as£π
(0);

180 
	gîr
;

182 (Ë
u∆ök
(
fuŒ«me
);

185 if(
·runˇã
(
fd
, 
size
)==0) {

186  
fd
;

188 
¥ötf
("!ftruncate fname %s, "

189 "fd %d, sizê%zu\n", 
fuŒ«me
,
fd
, 
size
);

192 i‡((
	gî∫o
 = 
posix_ÁŒoˇã
(
fd
, 0, 
size
)) != 0) {

193 
¥ötf
("!posix_fallocate");

194 
as£π
(0);

195 
	gîr
;

197  
	gfd
;

198 
	gîr
:

199 i‡(
fd
 != -1)

200 (Ë
˛o£
(
fd
);

206 * 
m≠
 (
size_t
 
sz
) {

208 i‡(
	gsz
 == 0) {

209  
NULL
;

213 
	gsz
 = 
Size
 * ((
sz
 + Size - 1) / Size);

215 * 
	g±r
;

216 
	gm≠Fœg
 = 0;

217 * 
	g°¨tAddªss
 = 0;

219 #i‡
deföed
(
MAP_ALIGN
Ë&& deföed(
MAP_ANON
)

220 
	gfd
 = -1;

221 
	g°¨tAddªss
 = (*Ë
Alignmít
;

222 
	gm≠Fœg
 |
MAP_PRIVATE
 | 
MAP_ALIGN
 | 
MAP_ANON
;

223 #ñi‡!
deföed
(
MAP_ANONYMOUS
)

224 
	gfd
 = ::
›í
 ("/dev/zîo", 
O_RDWR
);

225 
	gm≠Fœg
 |
MAP_PRIVATE
;

227 
	gfd
 = -1;

228 
	gm≠Fœg
 |
MAP_ANONYMOUS
 | 
MAP_PRIVATE
;

231 #i‡
deföed
(
MAP_PMFS
)

232 if(
	gfú°_time
){

234 
	ggfd
 = 
utû_tmpfûe
("/mnt/pmfs", 1024*1024*1024);

235 if(
	ggfd
 < 0){

236 
exô
(-1);

238 
	gfú°_time
=0;

240 
	gfd
 = 
gfd
;

241 
	gm≠Fœg

MAP_PRIVATE
;

242 
	g±r
 = 
mm≠
 (
°¨tAddªss
, 
sz
, 
HL_MMAP_PROTECTION_MASK
, 
m≠Fœg
, 
fd
, 0);

243 
Ârötf
(
°dîr
,"usög PMFS hﬂrd %u Fûêde†%d\n", 
sz
, 
fd
);

245 #ñi‡!
deföed
(
_USE_NVMAP
)

247 
Ârötf
(
°dîr
,"ˇŒög mm≠ %u\n", 
sz
);

248 
	g±r
 = 
mm≠
 (
°¨tAddªss
, 
sz
, 
HL_MMAP_PROTECTION_MASK
, 
m≠Fœg
, 
fd
, 0);

250 
nv¨g_s
 
	gnv¨g
;

251 
	gnv¨g
.
	gpÊags
 = 1;

252 
	gnv¨g
.
	gnoPîsi°
 = 1;

253 
	gnv¨g
.
	gvma_id
 = 9998;

254 
	gnv¨g
.
	g¥oc_id
 = 
BASEPROCID
;

255 
Ârötf
(
°dîr
,"usög NVMMAP %u\n", 
sz
);

258 if(!
	gfú°_time
){

259 
Ârötf
(
°dîr
,"not firstÅime \n");

260 
sysˇŒ
(
__NR_nv_mm≠_pgoff
,
°¨tAddªss
, 4096, 
HL_MMAP_PROTECTION_MASK
, 
MAP_PRIVATE
 | 
MAP_ANONYMOUS
, &
nv¨g
);

261 
	gfú°_time
=1;

262 
Ârötf
(
°dout
,"not firstÅime \n");

264 
	g±r
 = 
mm≠
 (
°¨tAddªss
, 
sz
, 
HL_MMAP_PROTECTION_MASK
, 
m≠Fœg
, 
fd
, 0);

266 i‡(
	g±r
 =
MAP_FAILED
) {

267  
NULL
;

269  
	g±r
;

272 
unm≠
 (* 
±r
, 
size_t
 
sz
) {

274 
	gsz
 = 
Size
 * ((
sz
 + Size - 1) / Size);

275 
munm≠
 ((
ˇddr_t
Ë
±r
, 
sz
);

	@Heap-Layers/wrappers/stlallocator.h

27 #i‚de‡
HL_STLALLOCATOR_H


28 
	#HL_STLALLOCATOR_H


	)

30 
	~<c°dio
>

31 
	~<√w
>

32 
	~<c°dlib
>

33 
	~<limôs
>

35 
	~<mem‹y
>

40 #i‡
deföed
(
max
)

41 #unde‡
max


44 
usög
 
«me•a˚
 
	g°d
;

60 
«me•a˚
 
	gHL
 {

62 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gSu≥r
>

63 ˛as†
	cSTLAŒoˇt‹
 : 
public
 
Su≥r
 {

64 
public
:

66 
T
 
	tvÆue_ty≥
;

67 
T
 * 
	tpoöãr
;

68 c⁄° 
	tT
 * 
	tc⁄°_poöãr
;

69 
	gT
& 
	tª„ªn˚
;

70 c⁄° 
	tT
& 
	tc⁄°_ª„ªn˚
;

71 
	g°d
::
	tsize_t
 
	tsize_ty≥
;

72 
	g°d
::
	t±rdiff_t
 
	tdif„ªn˚_ty≥
;

74 
	gãm∂©e
 <
˛ass
 
	gU
>

75 
	sªböd
 {

76 
	gSTLAŒoˇt‹
<
	tU
,
	tSu≥r
> 
	tŸhî
;

79 
poöãr
 
addªss
 (
ª„ªn˚
 
x
) const {

80  &
	gx
;

83 
c⁄°_poöãr
 
addªss
 (
c⁄°_ª„ªn˚
 
x
) const {

84  &
	gx
;

87 
STLAŒoˇt‹
(Ë
throw
() {

90 
STLAŒoˇt‹
 (c⁄° STLAŒoˇt‹& 
s
Ë
throw
()

91 : 
Su≥r
 (
s
)

94 
vútuÆ
 ~
STLAŒoˇt‹
(Ë
throw
() {

98 
size_ty≥
 
max_size
() const

100  
°d
::
numîic_limôs
<°d::
size_t
>::
max
(Ë/ (
T
);

103 #i‡
deföed
(
_WIN32
)

104 * 
_Ch¨Æloc
 (
size_ty≥
 
n
) {

105  (*Ë
Æloˇã
 (
n
);

109 #i‡
deföed
(
__SUNPRO_CC
)

110 
ölöe
 * 
Æloˇã
 (
size_ty≥
 
n
,

112 i‡(
n
) {

113  
ªöãΩªt_ˇ°
<*>(
Su≥r
::
mÆloc
 ((
T
Ë* 
n
));

119 
ölöe
 
poöãr
 
Æloˇã
 (
size_ty≥
 
n
,

121 i‡(
n
) {

122  
ªöãΩªt_ˇ°
<
poöãr
>(
Su≥r
::
mÆloc
 ((
T
Ë* 
n
));

129 
ölöe
 
dóŒoˇã
 (* 
p
, 
size_ty≥
) {

130 
	gSu≥r
::
‰ì
 (
p
);

133 
ölöe
 
dóŒoˇã
 (
poöãr
 
p
, 
size_ty≥
) {

134 
	gSu≥r
::
‰ì
 (
p
);

137 #i‡
__˝lu•lus
 >= 201103L

139 
	gãm∂©e
<
˛ass
 
	gU
, 
	g˛ass
... 
	gArgs
>

140 
c⁄°ru˘
 (
U
* 
p
, 
Args
&&... 
¨gs
) {

141 
√w
((*Ë
p
Ë
U
(
°d
::
f‹w¨d
<
Args
>(
¨gs
)...);

144 
	gãm∂©e
<
˛ass
 
	gU
>

145 
de°roy
 (
U
* 
p
) {

146 
	gp
->~
U
();

151 
c⁄°ru˘
 (
poöãr
 
p
, c⁄° 
T
& 
vÆ
) {

152 
√w
 ((*Ë
p
Ë
T
 (
vÆ
);

155 
de°roy
 (
poöãr
 
p
) {

156 ((
	gT
*)
	gp
)->~
T
();

161 
	gãm∂©e
 <
˛ass
 
	gU
> 
STLAŒoˇt‹
 (c⁄° STLAŒoˇt‹<
U
, 
Su≥r
> &Ë
throw
()

167 
	gãm∂©e
 <
ty≥«me
 
	gT
, 
˛ass
 
	gS
>

168 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
STLAŒoˇt‹
<
T
,
	gS
>& 
	ga
, c⁄° 
	gSTLAŒoˇt‹
<
	gT
,S>& 
	gb
) {

169  (&
	ga
 !&
b
);

172 
	gãm∂©e
 <
ty≥«me
 
	gT
, 
˛ass
 
	gS
>

173 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
STLAŒoˇt‹
<
T
,
	gS
>& 
	ga
, c⁄° 
	gSTLAŒoˇt‹
<
	gT
,S>& 
	gb
) {

174  (&
	ga
 =&
b
);

	@Heap-Layers/wrappers/winwrapper.cpp

38 
	~<î∫o.h
>

40 
	~"x86jump.h
"

44 * 
xxmÆloc
 (
size_t
);

45 
xx‰ì
 (*);

48 
size_t
 
xxmÆloc_ußbÀ_size
 (*);

51 
xxmÆloc_lock
 ();

54 
xxmÆloc_u∆ock
 ();

59 #ifde‡
_DEBUG


63 
	~<wödows.h
>

64 
	~<°dio.h
>

66 
	#WIN32_LEAN_AND_MEAN


	)

68 #i‡(
_WIN32_WINNT
 < 0x0500)

69 
	#_WIN32_WINNT
 0x0500

	)

72 #¥agm®
ölöe_dïth
(255)

74 #¥agm®
w¨nög
(
dißbÀ
: 4273)

75 #¥agm®
w¨nög
(
dißbÀ
: 4098)

76 #¥agm®
w¨nög
(
dißbÀ
: 4355)

77 #¥agm®
w¨nög
(
dißbÀ
: 4074)

80 
	#WINWRAPPER_PREFIX
(
x
Ë
wöwøµî_
##
	)
x

82 ˛as†
	cP©ch
 {

83 
public
:

84 c⁄° *
imp‹t
;

85 
FARPROC
 
ª∂a˚mít
;

86 
FARPROC
 
‹igöÆ
;

87 
boﬁ
 
∑tched
;

88 
codebyãs
[(
X86Jump
)];

91 
boﬁ
 
P©chMe
();

92 
U≈©chMe
();

93 "C" 
execuãRegi°îedFun˘i⁄s
();

95 "C" 
	$InôülizeWöWøµî
() {

96 
	`P©chMe
();

97 
	}
}

99 "C" 
	$FöÆizeWöWøµî
() {

100 
	`HópAŒoc
 (
	`GëPro˚ssHóp
(), 0, 1);

102 
	`U≈©chMe
();

103 
	}
}

108 
__de˛•ec
(
dŒexp‹t
Ë
Re„ªn˚WöWøµîStub
;

110 * 
WINWRAPPER_PREFIX
(
ex∑nd
Ë(* 
±r
) {

111  
NULL
;

114 * 
WINWRAPPER_PREFIX
(
ªÆloc
Ë(* 
±r
, 
size_t
 
sz
)

117 i‡(
±r
 =
NULL
) {

118  
xxmÆloc
(
sz
);

123 i‡(
sz
 == 0) {

124 
xx‰ì
 (
±r
);

125  
xxmÆloc
(1);

128 
size_t
 
‹igöÆSize
 = 
xxmÆloc_ußbÀ_size
 (
±r
);

129 
size_t
 
möSize
 = (
‹igöÆSize
 < 
sz
) ? originalSize : sz;

132 i‡((
‹igöÆSize
 / 2 < 
sz
) && (sz <= originalSize)) {

134  
±r
;

137 * 
buf
 = 
xxmÆloc
 (
sz
);

139 i‡(
buf
 !
NULL
) {

143 
mem˝y
 (
buf
, 
±r
, 
möSize
);

144 
xx‰ì
 (
±r
);

148  
buf
;

151 * 
WINWRAPPER_PREFIX
(
ªˇŒoc
)(* 
memblock
, 
size_t
 
num
, size_à
size
) {

152 c⁄°áutÿ
ªque°edSize
 = 
num
 * 
size
;

153 * 
±r
 = 
WINWRAPPER_PREFIX
(
ªÆloc
)(
memblock
, 
ªque°edSize
);

154 i‡(
±r
 !
nuŒ±r
) {

155 c⁄°áutÿ
a˘uÆSize
 = 
xxmÆloc_ußbÀ_size
(
±r
);

156 i‡(
a˘uÆSize
 > 
ªque°edSize
) {

158 
mem£t
 (
°©ic_ˇ°
<*>(
±r
Ë+ 
ªque°edSize
, 0, 
a˘uÆSize
 -ÑequestedSize);

161  
±r
;

164 * 
WINWRAPPER_PREFIX
(
ˇŒoc
)(
size_t
 
num
, size_à
size
) {

165 * 
±r
 = 
xxmÆloc
 (
num
 * 
size
);

166 i‡(
±r
) {

167 
mem£t
 (
±r
, 0, 
xxmÆloc_ußbÀ_size
(ptr));

169  
±r
;

172 * 
WINWRAPPER_PREFIX
(
°rdup
Ë(c⁄° * 
s
)

174 * 
√wSåög
 = 
NULL
;

175 i‡(
s
 !
NULL
) {

176 
Àn
 = 
°æí
(
s
) + 1;

177 i‡((
√wSåög
 = (*Ë
xxmÆloc
(
Àn
))) {

178 
mem˝y
 (
√wSåög
, 
s
, 
Àn
);

181  
√wSåög
;

184 c⁄° 
MAX_EXIT_FUNCTIONS
 = 256;

185 
_⁄exô_t
 
exôFun˘i⁄s
[
MAX_EXIT_FUNCTIONS
];

186 
exôFun˘i⁄sRegi°îed
 = 0;

188 
_⁄exô_t
 
bogus_⁄exô
(_⁄exô_à
‚
) {

189 i‡(
exôFun˘i⁄sRegi°îed
 =
MAX_EXIT_FUNCTIONS
) {

190  
NULL
;

192 
exôFun˘i⁄s
[
exôFun˘i⁄sRegi°îed
] = 
‚
;

193 
exôFun˘i⁄sRegi°îed
++;

194  
‚
;

198 
bogus_©exô
((*
‚
)()) {

199 i‡(
bogus_⁄exô
((
_⁄exô_t
Ë
‚
Ë=
NULL
) {

200  
ENOMEM
;

206 
execuãRegi°îedFun˘i⁄s
() {

207 
i
 = 
exôFun˘i⁄sRegi°îed
; i >= 0; i--) {

209 (*
exôFun˘i⁄s
[
i
])();

217 
P©ch
 
æs_∑tches
[] =

221 #ifde‡
_WIN64


223 {"??2@YAPEAX_K@Z", (
FARPROC
Ë
xxmÆloc
, 
Ál£
, 0},

224 {"??_U@YAPEAX_K@Z", (
FARPROC
Ë
xxmÆloc
, 
Ál£
, 0},

225 {"??3@YAXPEAX@Z", (
FARPROC
Ë
xx‰ì
, 
Ál£
, 0},

226 {"??_V@YAXPEAX@Z", (
FARPROC
Ë
xx‰ì
, 
Ál£
, 0},

230 {"??2@YAPAXI@Z", (
FARPROC
Ë
xxmÆloc
, 
Ál£
, 0},

231 {"??_U@YAPAXI@Z", (
FARPROC
Ë
xxmÆloc
, 
Ál£
, 0},

232 {"??3@YAXPAX@Z", (
FARPROC
Ë
xx‰ì
, 
Ál£
, 0},

233 {"??_V@YAXPAX@Z", (
FARPROC
Ë
xx‰ì
, 
Ál£
, 0},

239 {"??2@YAPAXIABUnŸhrow_t@°d@@@Z", (
FARPROC
Ë
xxmÆloc
, 
Ál£
, 0},

240 {"??_U@YAPAXIABUnŸhrow_t@°d@@@Z", (
FARPROC
Ë
xxmÆloc
, 
Ál£
, 0},

242 {"_msize", (
FARPROC
Ë
xxmÆloc_ußbÀ_size
, 
Ál£
, 0},

243 {"ˇŒoc", (
FARPROC
Ë
WINWRAPPER_PREFIX
(
ˇŒoc
), 
Ál£
, 0},

244 {"_ˇŒoc_ba£",(
FARPROC
Ë
WINWRAPPER_PREFIX
(
ˇŒoc
),
Ál£
, 0},

245 {"_ˇŒoc_¸t",(
FARPROC
Ë
WINWRAPPER_PREFIX
(
ˇŒoc
), 
Ál£
, 0},

246 {"mÆloc", (
FARPROC
Ë
xxmÆloc
, 
Ál£
, 0},

247 {"_mÆloc_ba£",(
FARPROC
Ë
xxmÆloc
, 
Ál£
, 0},

248 {"_mÆloc_¸t",(
FARPROC
Ë
xxmÆloc
, 
Ál£
, 0},

249 {"ªÆloc", (
FARPROC
Ë
WINWRAPPER_PREFIX
(
ªÆloc
), 
Ál£
, 0},

250 {"_ªÆloc_ba£",(
FARPROC
Ë
WINWRAPPER_PREFIX
(
ªÆloc
),
Ál£
, 0},

251 {"_ªÆloc_¸t",(
FARPROC
Ë
WINWRAPPER_PREFIX
(
ªÆloc
),
Ál£
, 0},

252 {"‰ì", (
FARPROC
Ë
xx‰ì
, 
Ál£
, 0},

253 {"_‰ì_ba£",(
FARPROC
Ë
xx‰ì
, 
Ál£
, 0},

254 {"_‰ì_¸t",(
FARPROC
Ë
xx‰ì
, 
Ál£
, 0},

255 {"_ªˇŒoc", (
FARPROC
Ë
WINWRAPPER_PREFIX
(
ªˇŒoc
),
Ál£
, 0},

256 {"_ªˇŒoc_ba£", (
FARPROC
Ë
WINWRAPPER_PREFIX
(
ªˇŒoc
),
Ál£
, 0},

257 {"_ªˇŒoc_¸t", (
FARPROC
Ë
WINWRAPPER_PREFIX
(
ªˇŒoc
),
Ál£
, 0},

259 {"_⁄exô", (
FARPROC
Ë
bogus_⁄exô
, 
Ál£
, 0},

260 {"©exô", (
FARPROC
Ë
bogus_©exô
, 
Ál£
, 0},

262 {"_ex∑nd", (
FARPROC
Ë
WINWRAPPER_PREFIX
(
ex∑nd
), 
Ál£
, 0},

263 {"°rdup", (
FARPROC
Ë
WINWRAPPER_PREFIX
(
°rdup
), 
Ál£
, 0}

268 
	$P©chIt
 (
P©ch
 *
∑tch
)

272 
MEMORY_BASIC_INFORMATION
 
mbi_thunk
;

273 
	`VútuÆQuîy
((*)
∑tch
->
‹igöÆ
, &
mbi_thunk
,

274 (
MEMORY_BASIC_INFORMATION
));

275 
	`VútuÆPrŸe˘
(
mbi_thunk
.
Ba£Addªss
, mbi_thunk.
Regi⁄Size
,

276 
PAGE_EXECUTE_READWRITE
, &
mbi_thunk
.
PrŸe˘
);

282 
	`mem˝y
 (
∑tch
->
codebyãs
,Ö©ch->
‹igöÆ
, (
X86Jump
));

283 *
∑tchloc
 = (*)
∑tch
->
‹igöÆ
;

284 
	`√w
 (
∑tchloc
Ë
	`X86Jump
 (
∑tch
->
ª∂a˚mít
);

288 
	`VútuÆPrŸe˘
(
mbi_thunk
.
Ba£Addªss
, mbi_thunk.
Regi⁄Size
,

289 
mbi_thunk
.
PrŸe˘
, &mbi_thunk.Protect);

290 
	}
}

292 
	$U≈©chIt
 (
P©ch
 *
∑tch
)

294 i‡(
∑tch
->
∑tched
) {

298 
MEMORY_BASIC_INFORMATION
 
mbi_thunk
;

299 
	`VútuÆQuîy
((*)
∑tch
->
‹igöÆ
, &
mbi_thunk
,

300 (
MEMORY_BASIC_INFORMATION
));

301 
	`VútuÆPrŸe˘
(
mbi_thunk
.
Ba£Addªss
, mbi_thunk.
Regi⁄Size
,

302 
PAGE_EXECUTE_READWRITE
, &
mbi_thunk
.
PrŸe˘
);

306 
	`mem˝y
 (
∑tch
->
‹igöÆ
,Ö©ch->
codebyãs
, (
X86Jump
));

310 
	`VútuÆPrŸe˘
(
mbi_thunk
.
Ba£Addªss
, mbi_thunk.
Regi⁄Size
,

311 
mbi_thunk
.
PrŸe˘
, &mbi_thunk.Protect);

313 
	}
}

315 
boﬁ
 
	$P©chMe
()

317 
boﬁ
 
∑tchedIn
 = 
Ál£
;

320 c⁄° * 
RlsCRTLibøryName
[] = {"MSVCR71.DLL", "MSVCR80.DLL", "MSVCR90.DLL", "MSVCR100.DLL", "MSVCP100.DLL", "MSVCR110.DLL", "MSVCP110.DLL", "MSVCR120.DLL", "MSVCP120.DLL", "MSVCR140.DLL", "MSVCP140.DLL", "APPCRT140.DLL", "MSVCRT.DLL" };

322 c⁄° 
RlsCRTLibøryNameLígth
 = (
RlsCRTLibøryName
) / (const *);

325 
i
 = 0; i < 
RlsCRTLibøryNameLígth
; i++) {

327 
HMODULE
 
RlsCRTLibøry
 = 
	`GëModuÀH™dÀA
(
RlsCRTLibøryName
[
i
]);

329 
HMODULE
 
DefCRTLibøry
 =

330 
RlsCRTLibøry
;

333 i‡(
RlsCRTLibøry
) {

334 
j
 = 0; j < (
æs_∑tches
) / (*rls_patches); j++) {

335 i‡(
æs_∑tches
[
j
].
‹igöÆ
 = 
	`GëProcAddªss
(
RlsCRTLibøry
,Ñls_∑tches[j].
imp‹t
)) {

336 
	`P©chIt
(&
æs_∑tches
[
j
]);

337 
æs_∑tches
[
j
].
∑tched
 = 
åue
;

338 
∑tchedIn
 = 
åue
;

343  
∑tchedIn
;

344 
	}
}

346 
	$U≈©chMe
()

348 
i
 = 0; i < (
æs_∑tches
) / (*rls_patches); i++) {

350 
	`U≈©chIt
(&
æs_∑tches
[
i
]);

352 
	}
}

	@Heap-Layers/wrappers/wrapper.cpp

33 
	~<°rög.h
>

34 
	~<°dlib.h
>

35 
	~<°döt.h
>

36 
	~<√w
>

41 * 
xxmÆloc
 (
size_t
);

42 
xx‰ì
 (*);

45 
size_t
 
xxmÆloc_ußbÀ_size
 (*);

48 
xxmÆloc_lock
 ();

51 
xxmÆloc_u∆ock
 ();

55 #i‡
deföed
(
__APPLE__
)

56 
	~<mÆloc/mÆloc.h
>

57 #ñi‡
deföed
(
__FªeBSD__
)

58 
	~<°dlib.h
>

60 
	~<mÆloc.h
>

63 #ifde‡
_WIN32


64 
	#WIN32_LEAN_AND_MEAN


	)

65 
	~<wödows.h
>

67 #¥agm®
w¨nög
(
dißbÀ
:4786)

69 #¥agm®
ölöe_dïth
(255)

70 #¥agm®
w¨nög
(
dißbÀ
: 4074)

72 #¥agm®
commít
(
lökî
, "/disallowlib:libc.lib")

73 #¥agm®
commít
(
lökî
, "/disallowlib:libcd.lib")

74 #¥agm®
commít
(
lökî
, "/disallowlib:libcmt.lib")

75 #¥agm®
commít
(
lökî
, "/disallowlib:libcmtd.lib")

76 #¥agm®
commít
(
lökî
, "/disallowlib:msvcrtd.lib")

79 
	~<î∫o.h
>

82 #i‚de‡
CUSTOM_PREFIX


83 
	#CUSTOM_PREFIX
(
x
Ë
	)
x

86 
	#CUSTOM_MALLOC
(
x
Ë
	`CUSTOM_PREFIX
(
mÆloc
)(x)

	)

87 
	#CUSTOM_FREE
(
x
Ë
	`CUSTOM_PREFIX
(
‰ì
)(x)

	)

88 
	#CUSTOM_CFREE
(
x
Ë
	`CUSTOM_PREFIX
(
c‰ì
)(x)

	)

89 
	#CUSTOM_REALLOC
(
x
,
y
Ë
	`CUSTOM_PREFIX
(
ªÆloc
)(x,y)

	)

90 
	#CUSTOM_CALLOC
(
x
,
y
Ë
	`CUSTOM_PREFIX
(
ˇŒoc
)(x,y)

	)

91 
	#CUSTOM_MEMALIGN
(
x
,
y
Ë
	`CUSTOM_PREFIX
(
memÆign
)(x,y)

	)

92 
	#CUSTOM_POSIX_MEMALIGN
(
x
,
y
,
z
Ë
	`CUSTOM_PREFIX
(
posix_memÆign
)(x,y,z)

	)

93 
	#CUSTOM_ALIGNED_ALLOC
(
x
,
y
Ë
	`CUSTOM_PREFIX
(
Æig√d_Æloc
)(x,y)

	)

94 
	#CUSTOM_GETSIZE
(
x
Ë
	`CUSTOM_PREFIX
(
mÆloc_ußbÀ_size
)(x)

	)

95 
	#CUSTOM_GOODSIZE
(
x
Ë
	`CUSTOM_PREFIX
(
mÆloc_good_size
)(x)

	)

96 
	#CUSTOM_VALLOC
(
x
Ë
	`CUSTOM_PREFIX
(
vÆloc
)(x)

	)

97 
	#CUSTOM_PVALLOC
(
x
Ë
	`CUSTOM_PREFIX
(
pvÆloc
)(x)

	)

98 
	#CUSTOM_RECALLOC
(
x
,
y
,
z
Ë
	`CUSTOM_PREFIX
(
ªˇŒoc
)(x,y,z)

	)

99 
	#CUSTOM_STRNDUP
(
s
,
sz
Ë
	`CUSTOM_PREFIX
(
°∫dup
)(s,sz)

	)

100 
	#CUSTOM_STRDUP
(
s
Ë
	`CUSTOM_PREFIX
(
°rdup
)(s)

	)

101 
	#CUSTOM_GETCWD
(
b
,
s
Ë
	`CUSTOM_PREFIX
(
gëcwd
)(b,s)

	)

102 
	#CUSTOM_GETENV
(
s
Ë
	`CUSTOM_PREFIX
(
gëív
)(s)

	)

105 
	#CUSTOM_MALLOPT
(
x
,
y
Ë
	`CUSTOM_PREFIX
(
mÆl›t
)(x,y)

	)

106 
	#CUSTOM_MALLOC_TRIM
(
s
Ë
	`CUSTOM_PREFIX
(
mÆloc_åim
)(s)

	)

107 
	#CUSTOM_MALLOC_STATS
(
a
Ë
	`CUSTOM_PREFIX
(
mÆloc_°©s
)◊)

	)

108 
	#CUSTOM_MALLOC_GET_STATE
(
p
Ë
	`CUSTOM_PREFIX
(
mÆloc_gë_°©e
)’)

	)

109 
	#CUSTOM_MALLOC_SET_STATE
(
p
Ë
	`CUSTOM_PREFIX
(
mÆloc_£t_°©e
)’)

	)

110 
	#CUSTOM_MALLINFO
(
a
Ë
	`CUSTOM_PREFIX
(
mÆlöfo
)◊)

	)

112 #i‡
deföed
(
_WIN32
)

113 
	#MYCDECL
 
__cde˛


	)

114 #i‡!
deföed
(
NO_INLINE
)

115 
	#NO_INLINE
 
	`__de˛•ec
(
noölöe
)

	)

117 #¥agm®
ölöe_dïth
(255)

119 #i‡!
deföed
(
NDEBUG
)

120 
	#__f‹˚ölöe
 
ölöe


	)

124 
	#MYCDECL


	)

129 "C" 
MYCDECL
 
	$CUSTOM_FREE
 (* 
±r
)

131 
	`xx‰ì
 (
±r
);

132 
	}
}

134 "C" * 
MYCDECL
 
	$CUSTOM_MALLOC
(
size_t
 
sz
)

136 i‡(
sz
 >> ((
size_t
) * 8 - 1)) {

137  
NULL
;

139 * 
±r
 = 
	`xxmÆloc
(
sz
);

140  
±r
;

141 
	}
}

143 "C" * 
MYCDECL
 
	$CUSTOM_CALLOC
(
size_t
 
√Àm
, size_à
ñsize
)

145 
size_t
 
n
 = 
√Àm
 * 
ñsize
;

146 i‡(
ñsize
 && 
√Àm
 !
n
 /Élsize) {

147  
NULL
;

149 * 
±r
 = 
	`CUSTOM_MALLOC
(
n
);

151 i‡(
±r
 !
NULL
) {

152 
	`mem£t
 (
±r
, 0, 
n
);

154  
±r
;

155 
	}
}

158 #i‡!
deföed
(
_WIN32
)

159 "C" * 
MYCDECL
 
	$CUSTOM_MEMALIGN
 (
size_t
 
Æignmít
, size_à
size
)

160 #i‡!
	`deföed
(
__FªeBSD__
)

161 
	$throw
()

165 "C" 
	$CUSTOM_POSIX_MEMALIGN
 (**
mem±r
, 
size_t
 
Æignmít
, size_à
size
)

166 #i‡!
	`deföed
(
__FªeBSD__
)

167 
	$throw
()

171 i‡((
Æignmít
 == 0) ||

172 (
Æignmít
 & (alignment - 1)))

174  
EINVAL
;

176 * 
±r
 = 
	`CUSTOM_MEMALIGN
 (
Æignmít
, 
size
);

177 i‡(!
±r
) {

178  
ENOMEM
;

180 *
mem±r
 = 
±r
;

183 
	}
}

187 "C" * 
MYCDECL
 
	$CUSTOM_MEMALIGN
 (
size_t
 
Æignmít
, size_à
size
)

188 #i‡!
	`deföed
(
__FªeBSD__
)

189 
	$throw
()

194 i‡((
Æignmít
 == 0) || (alignment & (alignment - 1)))

196  
NULL
;

199 i‡(
Æignmít
 == ()) {

200  
	`CUSTOM_MALLOC
 (
size
);

204 * 
±r
 = 
	`CUSTOM_MALLOC
(
size
);

205 i‡(((
size_t
Ë
±r
 & (
Æignmít
 - 1)) == (size_t)Ötr) {

207  
±r
;

210 
	`CUSTOM_FREE
(
±r
);

211 
±r
 = 
	`CUSTOM_MALLOC
 (
size
 + 2 * 
Æignmít
);

212 * 
Æig√dPå
 = (*Ë(((
size_t
Ë
±r
 + 
Æignmít
 - 1) & ~(alignment - 1));

213  
Æig√dPå
;

215 
	}
}

217 "C" * 
MYCDECL
 
	$CUSTOM_ALIGNED_ALLOC
(
size_t
 
Æignmít
, size_à
size
)

218 #i‡!
	`deföed
(
__FªeBSD__
)

219 
	$throw
()

226 
size
 = sizê+ 
Æignmít
 - (size %álignment);

227  
	`CUSTOM_MEMALIGN
(
Æignmít
, 
size
);

228 
	}
}

230 "C" 
size_t
 
MYCDECL
 
	$CUSTOM_GETSIZE
 (* 
±r
)

232  
	`xxmÆloc_ußbÀ_size
 (
±r
);

233 
	}
}

235 "C" 
MYCDECL
 
	$CUSTOM_CFREE
 (* 
±r
)

237 
	`xx‰ì
 (
±r
);

238 
	}
}

240 "C" 
size_t
 
MYCDECL
 
	$CUSTOM_GOODSIZE
 (
size_t
 
sz
) {

241 * 
±r
 = 
	`CUSTOM_MALLOC
(
sz
);

242 
size_t
 
objSize
 = 
	`CUSTOM_GETSIZE
(
±r
);

243 
	`CUSTOM_FREE
(
±r
);

244  
objSize
;

245 
	}
}

247 "C" * 
MYCDECL
 
	$CUSTOM_REALLOC
 (* 
±r
, 
size_t
 
sz
)

249 i‡(
±r
 =
NULL
) {

250 
±r
 = 
	`CUSTOM_MALLOC
 (
sz
);

251  
±r
;

253 i‡(
sz
 == 0) {

254 
	`CUSTOM_FREE
 (
±r
);

255 #i‡
	`deföed
(
__APPLE__
)

258  
	`CUSTOM_MALLOC
(1);

261  
NULL
;

265 
size_t
 
objSize
 = 
	`CUSTOM_GETSIZE
 (
±r
);

267 * 
buf
 = 
	`CUSTOM_MALLOC
(
sz
);

269 i‡(
buf
 !
NULL
) {

270 i‡(
objSize
 =
	`CUSTOM_GETSIZE
(
buf
)) {

273 
	`CUSTOM_FREE
 (
buf
);

274  
±r
;

278 
size_t
 
möSize
 = (
objSize
 < 
sz
) ? objSize : sz;

279 
	`mem˝y
 (
buf
, 
±r
, 
möSize
);

283 
	`CUSTOM_FREE
 (
±r
);

286  
buf
;

287 
	}
}

289 #i‡
deföed
(
löux
)

291 "C" * 
MYCDECL
 
	$CUSTOM_STRNDUP
(c⁄° * 
s
, 
size_t
 
sz
)

293 * 
√wSåög
 = 
NULL
;

294 i‡(
s
 !
NULL
) {

295 
size_t
 
ˇµedLígth
 = 
	`°∫Àn
 (
s
, 
sz
);

296 i‡((
√wSåög
 = (*Ë
	`CUSTOM_MALLOC
(
ˇµedLígth
 + 1))) {

297 
	`°∫˝y
(
√wSåög
, 
s
, 
ˇµedLígth
);

298 
√wSåög
[
ˇµedLígth
] = '\0';

301  
√wSåög
;

302 
	}
}

305 "C" * 
MYCDECL
 
	$CUSTOM_STRDUP
(c⁄° * 
s
)

307 * 
√wSåög
 = 
NULL
;

308 i‡(
s
 !
NULL
) {

309 i‡((
√wSåög
 = (*Ë
	`CUSTOM_MALLOC
(
	`°æí
(
s
) + 1))) {

310 
	`°r˝y
(
√wSåög
, 
s
);

313  
√wSåög
;

314 
	}
}

316 #i‡!
deföed
(
_WIN32
)

317 
	~<dlf˙.h
>

318 
	~<limôs.h
>

320 #i‡!
deföed
(
RTLD_NEXT
)

321 
	#RTLD_NEXT
 ((*Ë-1)

	)

325 * 
	tgëcwdFun˘i⁄
 (*, 
	tsize_t
);

328 "C" * 
MYCDECL
 
	$CUSTOM_GETCWD
(* 
buf
, 
size_t
 
size
)

330 
gëcwdFun˘i⁄
 * 
ªÆ_gëcwd


331 
ªöãΩªt_ˇ°
<
gëcwdFun˘i⁄
 *>

332 (
ªöãΩªt_ˇ°
<
uöçå_t
>(
	`dlsym
 (
RTLD_NEXT
, "getcwd")));

334 i‡(!
buf
) {

335 i‡(
size
 == 0) {

336 
size
 = 
PATH_MAX
;

338 
buf
 = (*Ë
	`CUSTOM_MALLOC
(
size
);

340  (
ªÆ_gëcwd
)(
buf
, 
size
);

341 
	}
}

346 "C" 
	$CUSTOM_MALLOPT
 (, ) {

349 
	}
}

351 "C" 
	$CUSTOM_MALLOC_TRIM
(
size_t
 ) {

354 
	}
}

356 "C" 
	$CUSTOM_MALLOC_STATS
() {

358 
	}
}

360 "C" * 
	$CUSTOM_MALLOC_GET_STATE
() {

361  
NULL
;

362 
	}
}

364 "C" 
	$CUSTOM_MALLOC_SET_STATE
(* ) {

366 
	}
}

368 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__FªeBSD__
)

369 "C" 
mÆlöfo
 
	$CUSTOM_MALLINFO
() {

371 
mÆlöfo
 
m
;

372 
m
.
¨ía
 = 0;

373 
m
.
‹dblks
 = 0;

374 
m
.
smblks
 = 0;

375 
m
.
hblks
 = 0;

376 
m
.
hblkhd
 = 0;

377 
m
.
usmblks
 = 0;

378 
m
.
fsmblks
 = 0;

379 
m
.
u‹dblks
 = 0;

380 
m
.
f‹dblks
 = 0;

381 
m
.
kìpco°
 = 0;

382  
m
;

383 
	}
}

386 #i‡
deföed
(
__SVR4
)

388 
	#NEW_INCLUDED


	)

392 #i‚de‡
NEW_INCLUDED


393 
	#NEW_INCLUDED


	)

395 * 
›î©‹
 
	$√w
 (
size_t
 
sz
)

396 #i‡
	`deföed
(
__GNUC__
)

400 * 
±r
 = 
	`CUSTOM_MALLOC
 (
sz
);

401 i‡(
±r
 =
NULL
) {

402 
throw
 
°d
::
	`bad_Æloc
();

404  
±r
;

406 
	}
}

408 
›î©‹
 
	$dñëe
 (* 
±r
)

409 #i‡!
	`deföed
(
löux_
)

410 
	$throw
 ()

413 
	`CUSTOM_FREE
 (
±r
);

414 
	}
}

416 #i‡!
deföed
(
__SUNPRO_CC
) || __SUNPRO_CC > 0x420

417 * 
›î©‹
 
	$√w
 (
size_t
 
sz
, c⁄° 
°d
::
nŸhrow_t
&Ë
	$throw
() {

418  
	`CUSTOM_MALLOC
(
sz
);

419 
	}
}

421 * 
›î©‹
 
√w
[] (
size_t
 
size
)

422 #i‡
deföed
(
__GNUC__
)

426 * 
±r
 = 
CUSTOM_MALLOC
(
size
);

427 i‡(
±r
 =
NULL
) {

428 
throw
 
°d
::
bad_Æloc
();

430  
±r
;

434 * 
›î©‹
 
√w
[] (
size_t
 
sz
, c⁄° 
°d
::
nŸhrow_t
&)

435 
	$throw
()

437  
	`CUSTOM_MALLOC
(
sz
);

438 
	}
}

440 
›î©‹
 
dñëe
[] (* 
±r
)

441 #i‡
deföed
(
__GNUC__
)

445 
CUSTOM_FREE
 (
±r
);

455 "C" * 
MYCDECL
 
	$CUSTOM_VALLOC
 (
size_t
 
sz
)

457  
	`CUSTOM_MEMALIGN
 (8192, 
sz
);

458 
	}
}

461 "C" * 
MYCDECL
 
	$CUSTOM_PVALLOC
 (
size_t
 
sz
)

465  
	`CUSTOM_VALLOC
 ((
sz
 + 8191) & ~8191);

466 
	}
}

469 "C" * 
MYCDECL
 
	$CUSTOM_RECALLOC
 (* 
p
, 
size_t
 
num
, size_à
sz
)

471 * 
±r
 = 
	`CUSTOM_REALLOC
 (
p
, 
num
 * 
sz
);

472 i‡((
p
 =
NULL
Ë&& (
±r
 != NULL)) {

474 
	`mem£t
 (
±r
, 0, 
	`CUSTOM_GETSIZE
(ptr));

476  
±r
;

477 
	}
}

479 #i‡
deföed
(
_WIN32
)

490 * 
	$CUSTOM_GETENV
(c⁄° * 
°r
) {

491 
buf
[32767];

492 
Àn
 = 
	`GëEnvú⁄mítV¨übÀ
 (
°r
, 
buf
, 32767);

493 i‡(
Àn
 == 0) {

494  
NULL
;

496 * 
°r
 = 
√w
 [
Àn
 + 1];

497 
	`°∫˝y
 (
°r
, 
buf
, 
Àn
 + 1);

498  
°r
;

500 
	}
}

502 
	$CUSTOM_PUTENV
(* 
°r
) {

503 * 
eqpos
 = 
	`°rchr
 (
°r
, '=');

504 i‡(
eqpos
 !
NULL
) {

505 
fú°
[32767], 
£c⁄d
[32767];

506 
«mñí
 = (
size_t
Ë
eqpos
 - (size_tË
°r
;

507 
	`°∫˝y
 (
fú°
, 
°r
, 
«mñí
);

508 
fú°
[
«mñí
] = '\0';

509 
vÆuñí
 = 
	`°æí
 (
eqpos
 + 1);

510 
	`°∫˝y
 (
£c⁄d
, 
eqpos
 + 1, 
vÆuñí
);

511 
£c⁄d
[
vÆuñí
] = '\0';

512 
buf
[255];

513 
	`•rötf
 (
buf
, "£âög %†tÿ%s\n", 
fú°
, 
£c⁄d
);

514 
	`¥ötf
 (
buf
);

515 
	`SëEnvú⁄mítV¨übÀ
 (
fú°
, 
£c⁄d
);

519 
	}
}

	@Heap-Layers/wrappers/x86jump.h

1 #i‚de‡
X86JUMP_H


2 
	#X86JUMP_H


	)

18 
	~<√w
>

19 
	~<°döt.h
>

21 #ifde‡
_MSC_VER


22 
	#PACK
–
__De˛¨©i⁄__
 ) 
	`__¥agma
–
	`∑ck
(
push
, 1ËË__De˛¨©i⁄__ __¥agma–∑ck(
p›
Ë)

	)

24 
	#PACK
–
__De˛¨©i⁄__
 ) __De˛¨©i⁄__ 
	`__©åibuã__
((
__∑cked__
))

	)

28 
PACK
(

29 
	sX86Jump32
 {

30 vﬁ©ûê
uöt8_t
 
jmp_›code
;

31 vﬁ©ûê
uöt32_t
 
jmp_off£t
;

34 
X86Jump32
 (*
èrgë
)

36 
jmp_›code
 = 0xE9;

37 
jmp_off£t
 = (
uöt32_t
)((
öçå_t
)
èrgë
 - (öçå_t)
this
Ë- (
X86Jump32
);

41 
PACK
(

42 
	sX86Jump64
 {

44 vﬁ©ûê
uöt16_t
 
Árjmp
;

45 vﬁ©ûê
uöt32_t
 
off£t
;

46 vﬁ©ûê
uöt64_t
 
addr
;

49 
X86Jump64
 (*
èrgë
)

51 
Árjmp
 = 0x25ff;

52 
off£t
 = 0x00000000;

53 
addr
 = (
uöt64_t
Ë
èrgë
;

58 
PACK
(

59 
	sX86_64Jump
 {

61 
uöt8_t
 
jmp32
[(
X86Jump32
)];

62 
uöt8_t
 
jmp64
[(
X86Jump64
)];

65 
X86_64Jump
 (*
èrgë
) {

68 i‡((
uöçå_t
)
èrgë
 - (uöçå_t)
this
 <= 0x00000000FFFFFFFFu ||

69 (
uöçå_t
)
this
 - (uöçå_t)
èrgë
 <= 0x00000000FFFFFFFFu)

71 
√w
 (
this
Ë
X86Jump32
(
èrgë
);

73 
√w
 (
this
Ë
X86Jump64
(
èrgë
);

78 #i‡
deföed
(
__LP64__
Ë|| deföed(
_LP64
Ë|| deföed(
__APPLE__
Ë|| deföed(
_WIN64
Ë|| deföed(
__x86_64__
)

79 
X86_64Jump
 
	tX86Jump
;

81 
X86Jump32
 
	tX86Jump
;

	@include/VERSION.h

30 
	#HOARD_MAJOR
 4

	)

31 
	#HOARD_MINOR
 0

	)

32 
	#HOARD_PATCH
 0

	)

34 
	#HOARD_VERSION_STRING
 "4.0.0"

	)

35 
	#HOARD_VERSION_NUMBER
 (
HOARD_MAJOR
 * 10000 + 
HOARD_MINOR
 * 100 + 
HOARD_PATCH
)

	)

	@include/hoard/basehoardmanager.h

28 #i‚de‡
HOARD_BASEHOARDMANAGER_H


29 
	#HOARD_BASEHOARDMANAGER_H


	)

37 
	~"hó∂ayîs.h
"

40 
«me•a˚
 
	gHﬂrd
 {

42 
	gãm∂©e
 <
˛ass
 
	gSu≥rblockTy≥_
>

43 ˛as†
	cBa£HﬂrdM™agî
 {

44 
	gpublic
:

46 
Ba£HﬂrdM™agî
 ()

47 : 
_magic
 (0xedded00d)

50 
ölöe
 
isVÆid
 () const {

51  (
_magic
 == 0xedded00d);

55 
Su≥rblockTy≥_
 
	tSu≥rblockTy≥
;

58 
ölöe
 
vútuÆ
 
‰ì
 (*) {}

61 
ölöe
 
vútuÆ
 
lock
 () {}

64 
ölöe
 
vútuÆ
 
u∆ock
 () {};

67 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

68 
Su≥rblockTy≥
 * 
	gs
 = 
gëSu≥rblock
 (
±r
);

69 
as£π
 (
s
->
isVÆidSu≥rblock
());

70  
	gs
->
gëSize
 (
±r
);

76 
ölöe
 
Su≥rblockTy≥
 * 
gëSu≥rblock
 (* 
±r
) {

77  
	gSu≥rblockTy≥
::
gëSu≥rblock
 (
±r
);

80 
	g¥iv©e
:

82 íum { 
Su≥rblockSize
 = (
Su≥rblockTy≥
) };

84 
	gHL
::
ßs£π
<((
Su≥rblockSize
 & (Su≥rblockSizê- 1)Ë=0)> 
EnsuªSu≥rblockSizeIsPowîOfTwo
;

86 c⁄° 
	g_magic
;

	@include/hoard/debugprint.h

1 #i‡!
deföed
(
NDEBUG
)

2 
	#DEBUG_PRINT
(
f‹m©
) \

4 
buf
[255]; \

5 
	`•rötf
 (
buf
, 
f‹m©
); \

6 
	`Ârötf
 (
°dîr
, 
buf
); \

7 }

	)

9 
	#DEBUG_PRINT1
(
f‹m©
,
¨g
) \

11 
buf
[255]; \

12 
	`•rötf
 (
buf
, 
f‹m©
, 
¨g
); \

13 
	`Ârötf
 (
°dîr
, 
buf
); \

14 }

	)

16 
	#DEBUG_PRINT2
(
f‹m©
,
¨g1
,
¨g2
) \

18 
buf
[255]; \

19 
	`•rötf
 (
buf
, 
f‹m©
, 
¨g1
,
¨g2
); \

20 
	`Ârötf
 (
°dîr
, 
buf
); \

21 }

	)

23 
	#DEBUG_PRINT3
(
f‹m©
,
¨g1
,
¨g2
,
¨g3
) \

25 
buf
[255]; \

26 
	`•rötf
 (
buf
, 
f‹m©
, 
¨g1
,
¨g2
,
¨g3
); \

27 
	`Ârötf
 (
°dîr
, 
buf
); \

28 }

	)

30 
	#DEBUG_PRINT
(
f
)

	)

31 
	#DEBUG_PRINT1
(
f
,
a
)

	)

32 
	#DEBUG_PRINT2
(
f
,
a
,
b
)

	)

33 
	#DEBUG_PRINT3
(
f
,
a
,
b
,
c
)

	)

	@include/hoard/emptyclass.h

28 #i‚de‡
HOARD_EMPTYCLASS_H


29 
	#HOARD_EMPTYCLASS_H


	)

31 
	~"check.h
"

32 
	~"¨øy.h
"

39 
«me•a˚
 
	gHﬂrd
 {

41 
	gãm∂©e
 <
˛ass
 
	gSu≥rblockTy≥_
,

42 
	gEm±öessCœs£s
>

43 ˛as†
	cEm±yCœss
 {

45 íum { 
	gSu≥rblockSize
 = (
Su≥rblockTy≥_
) };

47 
	gpublic
:

49 
Su≥rblockTy≥_
 
	tSu≥rblockTy≥
;

51 
Em±yCœss
()

53 
	gi
 = 0; i <
Em±öessCœs£s
 + 1; i++) {

54 
_avaûabÀ
(
i
) = 0;

58 
dumpSèts
() {

59 
	gi
 = 0; i <
Em±öessCœs£s
 + 1; i++) {

60 
Su≥rblockTy≥
 * 
	gs
 = 
_avaûabÀ
(
i
);

61 i‡(
	gs
) {

63 
	gs
) {

64 
	gs
->
dumpSèts
();

65 
	gs
 = 
s
->
gëNext
();

71 
Su≥rblockTy≥
 * 
gëEm±y
() {

72 
	gCheck
<
	gEm±yCœss
, 
	gMyCheckî
> 
check
 (
this
);

73 
Su≥rblockTy≥
 * 
	gs
 = 
_avaûabÀ
(0);

74 i‡(
	gs
 &&

75 (
	gs
->
gëObje˘sFªe
(Ë=
s
->
gëTŸÆObje˘s
())) {

77 
_avaûabÀ
(0Ë
s
->
gëNext
();

78 i‡(
_avaûabÀ
(0)) {

79 
_avaûabÀ
(0)->
£tPªv
 (0);

81 
	gs
->
£tPªv
 (0);

82 
	gs
->
£tNext
 (0);

83  
	gs
;

88 
Su≥rblockTy≥
 * 
gë
() {

89 
	gCheck
<
	gEm±yCœss
, 
	gMyCheckî
> 
check
 (
this
);

92 
	gn
 = 0;Ç < 
	gEm±öessCœs£s
 + 1;Ç++) {

93 
Su≥rblockTy≥
 * 
	gs
 = 
_avaûabÀ
(
n
);

94 
	gs
) {

95 
as£π
 (
s
->
isVÆidSu≥rblock
());

97 
_avaûabÀ
(
n
Ë
s
->
gëNext
();

98 i‡(
_avaûabÀ
(
n
)) {

99 
_avaûabÀ
(
n
)->
£tPªv
 (0);

101 
	gs
->
£tPªv
 (0);

102 
	gs
->
£tNext
 (0);

104 #i‚de‡
NDEBUG


106 
	gz
 = 0; z < 
	gEm±öessCœs£s
 + 1; z++) {

107 
Su≥rblockTy≥
 * 
	gp
 = 
_avaûabÀ
(
z
);

108 
	gp
) {

109 
as£π
 (
p
 !
s
);

110 
	gp
 = 
p
->
gëNext
();

117 
	g˛
 = 
gëFuŒ√ss
 (
s
);

118 i‡(
	g˛
 > 
	gn
) {

119 
put
 (
s
);

120 
Su≥rblockTy≥
 * 
	gsNew
 = 
_avaûabÀ
(
n
);

121 
as£π
 (
s
 !
sNew
);

122 
	gs
 = 
sNew
;

124  
	gs
;

131 
put
 (
Su≥rblockTy≥
 * 
s
) {

132 
	gCheck
<
	gEm±yCœss
, 
	gMyCheckî
> 
check
 (
this
);

134 #i‚de‡
NDEBUG


136 
	gn
 = 0;Ç <
Em±öessCœs£s
 + 1;Ç++) {

137 
Su≥rblockTy≥
 * 
	gp
 = 
_avaûabÀ
(
n
);

138 
	gp
) {

139 i‡(
	gp
 =
s
) {

140 
ab‹t
();

142 
	gp
 = 
p
->
gëNext
();

148 
	g˛
 = 
gëFuŒ√ss
 (
s
);

151 
	gs
->
£tPªv
 (0);

152 
	gs
->
£tNext
 (
_avaûabÀ
(
˛
));

153 i‡(
_avaûabÀ
(
˛
)) {

154 
_avaûabÀ
(
˛
)->
£tPªv
 (
s
);

156 
_avaûabÀ
(
˛
Ë
s
;

159 
INLINE
 
MALLOC_FUNCTION
 * 
mÆloc
 (
size_t
 
sz
) {

161 
	gi
 = 
Em±öessCœs£s
; i >= 0; i--) {

162 
Su≥rblockTy≥
 * 
	gs
 = 
_avaûabÀ
(
i
);

164 i‡(
	gs
) {

165 
	gﬁdCl
 = 
gëFuŒ√ss
 (
s
);

166 * 
	g±r
 = 
s
->
mÆloc
 (
sz
);

167 
	g√wCl
 = 
gëFuŒ√ss
 (
s
);

168 i‡(
	g±r
) {

169 i‡(
	gﬁdCl
 !
√wCl
) {

170 
å™s„r
 (
s
, 
ﬁdCl
, 
√wCl
);

172 
as£π
 ((
size_t
Ë
±r
 % 
Su≥rblockTy≥
::
Alignmít
 == 0);

173  
	g±r
;

177  
	gNULL
;

180 
INLINE
 
‰ì
 (* 
±r
) {

181 
	gCheck
<
	gEm±yCœss
, 
	gMyCheckî
> 
check
 (
this
);

182 
Su≥rblockTy≥
 * 
	gs
 = 
gëSu≥rblock
 (
±r
);

183 
	gﬁdCl
 = 
gëFuŒ√ss
 (
s
);

184 
	gs
->
‰ì
 (
±r
);

185 
	g√wCl
 = 
gëFuŒ√ss
 (
s
);

187 i‡(
	gﬁdCl
 !
√wCl
) {

189 
å™s„r
 (
s
, 
ﬁdCl
, 
√wCl
);

194 
INLINE
 
Su≥rblockTy≥
 * 
gëSu≥rblock
 (* 
±r
) {

195  
	gSu≥rblockTy≥
::
gëSu≥rblock
 (
±r
);

198 
	g¥iv©e
:

200 
å™s„r
 (
Su≥rblockTy≥
 * 
s
, 
ﬁdCl
, 
√wCl
)

202 
Su≥rblockTy≥
 * 
	g¥ev
 = 
s
->
gëPªv
();

203 
Su≥rblockTy≥
 * 
	g√xt
 = 
s
->
gëNext
();

204 i‡(
	g¥ev
Ë{Öªv->
£tNext
 (
√xt
); }

205 i‡(
	g√xt
Ë{Çext->
£tPªv
 (
¥ev
); }

206 i‡(
	gs
 =
_avaûabÀ
(
ﬁdCl
)) {

207 
as£π
 (
¥ev
 == 0);

208 
_avaûabÀ
(
ﬁdCl
Ë
√xt
;

210 
	gs
->
£tNext
 (
_avaûabÀ
(
√wCl
));

211 
	gs
->
£tPªv
 (0);

212 i‡(
_avaûabÀ
(
√wCl
)Ë{ _avaûabÀ“ewCl)->
£tPªv
 (
s
); }

213 
_avaûabÀ
(
√wCl
Ë
s
;

216 
INLINE
 
gëFuŒ√ss
 (
Su≥rblockTy≥
 * 
s
) {

219 
	gtŸÆ
 = 
s
->
gëTŸÆObje˘s
();

220 
	g‰ì
 = 
s
->
gëObje˘sFªe
();

221 i‡(
	gtŸÆ
 =
‰ì
) {

224  1 + (
	gEm±öessCœs£s
 * (
	gtŸÆ
 - 
	g‰ì
)) /Åotal;

230 
˛ass
 
	gMyCheckî
;

231 
‰õnd
 
˛ass
 
	gMyCheckî
;

234 ˛as†
	cMyCheckî
 {

235 
	gpublic
:

236 #i‚de‡
NDEBUG


237 
¥ec⁄dôi⁄
 (
Em±yCœss
 * 
e
) {

238 
e
->
ßnôyCheckPª
();

240 
po°c⁄dôi⁄
 (
Em±yCœss
 * 
e
) {

241 
	ge
->
ßnôyCheck
();

244 
¥ec⁄dôi⁄
 (
Em±yCœss
 *) {}

245 
po°c⁄dôi⁄
 (
Em±yCœss
 *) {}

249 
ßnôyCheckPª
(Ë{ 
ßnôyCheck
(); }

251 
ßnôyCheck
() {

252 
	gi
 = 0; i <
Em±öessCœs£s
 + 1; i++) {

253 
Su≥rblockTy≥
 * 
	gs
 = 
_avaûabÀ
(
i
);

254 
	gs
) {

255 
as£π
 (
gëFuŒ√ss
(
s
Ë=
i
);

256 
	gs
 = 
s
->
gëNext
();

263 
	gAºay
<
	gEm±öessCœs£s
 + 2, 
	gSu≥rblockTy≥
 *> 
	g_avaûabÀ
;

	@include/hoard/emptyhoardmanager.h

29 #i‚de‡
HOARD_EMPTYHOARDMANAGER_H


30 
	#HOARD_EMPTYHOARDMANAGER_H


	)

32 
	~"ba£hﬂrdm™agî.h
"

34 
	~"hó∂ayîs.h
"

37 
«me•a˚
 
	gHﬂrd
 {

39 
	gãm∂©e
 <
˛ass
 
	gSu≥rblockTy≥_
>

40 
˛ass
 
	gEm±yHﬂrdM™agî
 : 
public
 
Ba£HﬂrdM™agî
<
Su≥rblockTy≥_
> {

41 
public
:

43 
Em±yHﬂrdM™agî
 ()

44 : 
_magic
 (0x1d2d3d40)

47 
isVÆid
 () const {

48  (
_magic
 == 0x1d2d3d40);

51 
Su≥rblockTy≥_
 
	tSu≥rblockTy≥
;

53 
‰ì
 (*Ë{ 
ab‹t
(); }

54 
lock
 () {}

55 
u∆ock
 () {}

57 
Su≥rblockTy≥
 * 
gë
 (
size_t
, 
Em±yHﬂrdM™agî
 *Ë{ 
ab‹t
();  
	gNULL
; }

58 
put
 (
Su≥rblockTy≥
 *, 
size_t
Ë{ 
ab‹t
(); }

60 
	g¥iv©e
:

62 
_magic
;

	@include/hoard/geometricsizeclass.cpp

1 
	~"geomëricsize˛ass.h
"

4 
	$maö
()

6 
Hﬂrd
::
GeomëricSizeCœss
<12, 16> 
gs1
;

7 
Hﬂrd
::
GeomëricSizeCœss
<14, 16> 
gs2
;

8 
Hﬂrd
::
GeomëricSizeCœss
<16, 8> 
gs3
;

9 
Hﬂrd
::
GeomëricSizeCœss
<18, 8> 
gs4
;

10 
Hﬂrd
::
GeomëricSizeCœss
<20, 16> 
gs5
;

12 
	}
}

	@include/hoard/geometricsizeclass.h

28 #i‚de‡
HOARD_GEOMETRIC_SIZECLASS_H


29 
	#HOARD_GEOMETRIC_SIZECLASS_H


	)

31 
	~<cm©h
>

32 
	~<c°dlib
>

33 
	~<ˇs£π
>

35 #i‡
deföed
(
__˛™g__
)

36 #¥agm®
˛™g
 
dügno°ic
 
push


37 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wself-assign"

40 
	~<hó∂ayîs.h
>

42 
«me•a˚
 
	gHﬂrd
 {

45 
	gãm∂©e
 <
size_t
 
	gBa£Numî©‹
,

46 
size_t
 
	gBa£Díomö©‹
,

47 
size_t
 
	gVÆue
>

48 
˛ass
 
	gûog
;

50 
	gãm∂©e
 <
size_t
 
	gBa£Numî©‹
, size_à
	gBa£Díomö©‹
>

51 
˛ass
 
	gûog
<
	gBa£Numî©‹
, 
	gBa£Díomö©‹
, 1> {

52 
	gpublic
:

53 íum { 
VALUE
 = 0 };

57 
	gãm∂©e
 <
size_t
 
	gBa£Numî©‹
,

58 
size_t
 
	gBa£Díomö©‹
,

59 
size_t
 
	gVÆue
>

60 ˛as†
	cûog
 {

61 
	gpublic
:

62 íum { 
VALUE
 = 1 + 
ûog
<
Ba£Numî©‹
,

63 
	gBa£Díomö©‹
,

64 (
VÆue
 * 
	gBa£Díomö©‹
Ë/ 
	gBa£Numî©‹
>::
VALUE
 };

70 
	gãm∂©e
 <
size_t
 
	gMaxOvîhód
 = 20,

71 
size_t
 
	gAlignmít
 = 16>

72 ˛as†
	cGeomëricSizeCœss
 {

73 
public
:

75 
GeomëricSizeCœss
()

77 
as£π
 (
ã°
());

81 
size2˛ass
 (c⁄° 
size_t
 
sz
) {

83 
	gÀ·
 = 0;

84 
	gright
 = 
NUM_SIZECLASSES
 - 1;

85 
	gÀ·
 < 
	gright
) {

86 
	gmid
 = (
À·
 + 
right
)/2;

87 i‡(
c2s
(
mid
Ë< 
	gsz
) {

88 
	gÀ·
 = 
mid
 + 1;

90 
	gright
 = 
mid
;

93 
as£π
 (
c2s
(
À·
Ë>
sz
);

94 
as£π
 ((
À·
 =0Ë|| (
c2s
÷e·-1Ë< 
sz
));

95  
	gÀ·
;

99 
size_t
 
˛ass2size
 (c⁄° 
˛
) {

100  
c2s
 (
˛
);

103 #i‡
deföed
(
__LP64__
Ë|| deföed(
_LP64
Ë|| deföed(
_WIN64
Ë|| deföed(
__x86_64__
)

105 íum { 
	gMaxObje˘Size
 = (1UL << 31) };

108 íum { 
	gMaxObje˘Size
 = (1UL << 25) };

111 
	g¥iv©e
:

114 
boﬁ
 
ã°
() {

116 
size_t
 
sz
 = 
Alignmít
; 
	gsz
 < 1048576; sz += Alignment) {

117 
˛
 = 
size2˛ass
 (
sz
);

118 i‡(
	gsz
 > 
˛ass2size
(
˛
)) {

119 
as£π
 (
sz
 <
˛ass2size
(
˛
));

120  
	gÁl£
;

123 
	g˛
 = 0; c»< 
	gNUM_SIZECLASSES
; cl++) {

124 
size_t
 
	gsz
 = 
˛ass2size
 (
˛
);

125 i‡(
	g˛
 !
size2˛ass
(
sz
)) {

126 
as£π
 (
˛
 =
size2˛ass
(
sz
));

127  
	gÁl£
;

130  
	gåue
;

134 íum { 
	gNUM_SIZECLASSES
 = 
ûog
<100+
MaxOvîhód
,

136 
	gMaxObje˘Size
>::
VALUE
 };

139 
c2s
 (
˛
) {

140 
size_t
 
	gsizes
[
NUM_SIZECLASSES
];

141 
boﬁ
 
	göô
 = 
¸óãTabÀ
 ((
size_t
 *Ë
sizes
);

142 
	göô
 = 
öô
;

143  
	gsizes
[
˛
];

147 
boﬁ
 
¸óãTabÀ
 (
size_t
 * 
sizes
)

149 c⁄° 
	gba£
 =

150 (1.0 + (Ë
MaxOvîhód
 / () 100.0);

151 
size_t
 
	gsz
 = 
Alignmít
;

152 
	gi
 = 0; i < 
	gNUM_SIZECLASSES
; i++) {

153 
	gsizes
[
i
] = 
sz
;

154 
size_t
 
	g√wSz
 = (size_tË(
Êo‹
 ((Ë
ba£
 * (Ë
sz
));

155 
	g√wSz
 = 
√wSz
 - (
HL
::
Modulo
<
Alignmít
>::
mod
 (newSz));

156 (Ë
	g√wSz
 / (Ë
	gsz
 < 
	gba£
) {

157 
	g√wSz
 +
Alignmít
;

159 
	gsz
 = 
√wSz
;

161  
	gåue
;

168 #i‡
deföed
(
__˛™g__
)

169 #¥agm®
˛™g
 
dügno°ic
 
p›


	@include/hoard/globalheap.h

28 #i‚de‡
HOARD_GLOBALHEAP_H


29 
	#HOARD_GLOBALHEAP_H


	)

31 
	~"hﬂrdsu≥rblock.h
"

32 
	~"¥o˚sshóp.h
"

34 
«me•a˚
 
	gHﬂrd
 {

36 
	gãm∂©e
 <
size_t
 
	gSu≥rblockSize
,

37 
	gEm±öessCœs£s
,

38 
˛ass
 
	gMm≠Sour˚
,

39 
˛ass
 
	gLockTy≥
>

40 ˛as†
	cGlobÆHóp
 {

42 ˛as†
	cbogusThªshﬁdFun˘i⁄Cœss
 {

43 
	gpublic
:

44 
ölöe
 
boﬁ
 
fun˘i⁄
 (, , 
size_t
) {

47  
	gÁl£
;

51 
	gpublic
:

53 
GlobÆHóp
 ()

54 : 
_theHóp
 (
gëHóp
())

58 
Pro˚ssHóp
<
	tSu≥rblockSize
, 
	tEm±öessCœs£s
, 
	tLockTy≥
, 
	tbogusThªshﬁdFun˘i⁄Cœss
, 
	tMm≠Sour˚
> 
	tSu≥rHóp
;

59 
	gHﬂrdSu≥rblock
<
	tLockTy≥
, 
	tSu≥rblockSize
, 
	tGlobÆHóp
> 
	tSu≥rblockTy≥
;

61 
put
 (* 
s
, 
size_t
 
sz
) {

62 
as£π
 (
s
);

63 
as£π
 (((
Su≥rblockTy≥
 *Ë
s
)->
isVÆidSu≥rblock
());

64 
	g_theHóp
->
put
 ((
ty≥«me
 
Su≥rHóp
::
Su≥rblockTy≥
 *Ë
s
,

65 
sz
);

68 
Su≥rblockTy≥
 * 
gë
 (
size_t
 
sz
, * 
de°
) {

69 
Su≥rblockTy≥
 * 
	gs
 =

70 
ªöãΩªt_ˇ°
<
Su≥rblockTy≥
 *>

71 (
_theHóp
->
gë
 (
sz
, 
ªöãΩªt_ˇ°
<
Su≥rHóp
 *>(
de°
)));

72 i‡(
	gs
) {

73 
as£π
 (
s
->
isVÆidSu≥rblock
());

75  
	gs
;

78 
	g¥iv©e
:

80 
Su≥rHóp
 * 
_theHóp
;

82 
ölöe
 
Su≥rHóp
 * 
gëHóp
 () {

83 
	gtheHópBuf
[(
Su≥rHóp
) / () + 1];

84 
Su≥rHóp
 * 
	gtheHóp
 = 
√w
 (&
theHópBuf
[0]) SuperHeap;

85  
	gtheHóp
;

89 
GlobÆHóp
 (const GlobalHeap&);

90 
	gGlobÆHóp
& 
	g›î©‹
=(c⁄° 
GlobÆHóp
&);

	@include/hoard/heapmanager.h

28 #i‚de‡
HOARD_HEAPMANAGER_H


29 
	#HOARD_HEAPMANAGER_H


	)

31 
	~<c°dlib
>

33 
	~"hﬂrdc⁄°™ts.h
"

34 
	~"hó∂ayîs.h
"

36 
«me•a˚
 
	gHﬂrd
 {

38 
	gãm∂©e
 <
ty≥«me
 
	gLockTy≥
,

39 
ty≥«me
 
	gHópTy≥
>

40 ˛as†
	cHópM™agî
 : 
public
 
HópTy≥
 {

41 
public
:

43 íum { 
Alignmít
 = 
HópTy≥
::Alignment };

45 
HópM™agî
 ()

47 
	gHL
::
Gu¨d
<
LockTy≥
> 
g
 (
hópLock
);

50 
	gi
;

51 
	gi
 = 0; i < 
	gHópTy≥
::
MaxThªads
; i++) {

52 
	gHópTy≥
::
£tTidM≠
 (
i
, 0);

54 
	gi
 = 0; i < 
	gHópTy≥
::
MaxHóps
; i++) {

55 
	gHópTy≥
::
£tInu£m≠
 (
i
, 0);

60 
choo£Zîo
 () {

61 
	gHL
::
Gu¨d
<
LockTy≥
> 
g
 (
hópLock
);

62 
	gHópTy≥
::
£tTidM≠
 ((Ë
HL
::
CPUInfo
::
gëThªadId
(Ë% 
Hﬂrd
::
MaxThªads
, 0);

65 
födUnu£dHóp
 () {

67 
	gHL
::
Gu¨d
<
LockTy≥
> 
g
 (
hópLock
);

69 
	gtid_‹igöÆ
 = 
HL
::
CPUInfo
::
gëThªadId
();

70 
	gtid
 = (Ë(
tid_‹igöÆ
 % 
HópTy≥
::
MaxThªads
);

72 
	gi
 = 0;

73 (
	gi
 < 
	gHópTy≥
::
MaxHóps
Ë&& (
HópTy≥
::
gëInu£m≠
(
i
)))

74 
i
++;

75 i‡(
	gi
 >
HópTy≥
::
MaxHóps
) {

77 #i‡
deföed
(
_WIN32
)

78 
øndomNumbî
 = 
ønd
();

80 
	gøndomNumbî
 = (Ë
Ã™d48
();

82 
	gi
 = 
øndomNumbî
 % 
HópTy≥
::
MaxHóps
;

85 
	gHópTy≥
::
£tInu£m≠
 (
i
, 1);

86 
	gHópTy≥
::
£tTidM≠
 (
tid
, 
i
);

88  
	gi
;

91 
ªÀa£Hóp
 () {

94 
	gHL
::
Gu¨d
<
LockTy≥
> 
g
 (
hópLock
);

97 íum { 
	gVîifyPowîOfTwo
 = 1 / ((
HópTy≥
::
MaxThªads
 & ~(HeapType::MaxThreads-1))) };

99 
	gtid
 = 
HL
::
CPUInfo
::
gëThªadId
(Ë& (
HópTy≥
::
MaxThªads
 - 1);

100 
	ghópIndex
 = 
HópTy≥
::
gëTidM≠
 (
tid
);

102 
	gHópTy≥
::
£tInu£m≠
 (
hópIndex
, 0);

106 i‡(
	gHópTy≥
::
gëInu£m≠
 (
hópIndex
) < 0) {

107 
HópTy≥
::
£tInu£m≠
 (
hópIndex
, 0);

112 
	g¥iv©e
:

116 
HópM™agî
 (const HeapManager&);

117 
	gHópM™agî
& 
	g›î©‹
(c⁄° 
HópM™agî
&);

120 
LockTy≥
 
	ghópLock
;

	@include/hoard/hoardconstants.h

29 #i‚de‡
HOARD_HOARDCONSTANTS_H


30 
	#HOARD_HOARDCONSTANTS_H


	)

32 
«me•a˚
 
	gHﬂrd
 {

35 íum { 
	gMAX_MEMORY_PER_TLAB
 = 2 * 1024 * 1024 };

38 íum { 
	gMaxThªads
 = 2048 };

41 íum { 
	gNumHóps
 = 128 };

45 íum { 
	gL¨ge°SmÆlObje˘
 = 256 };

	@include/hoard/hoardheap.h

28 #i‚de‡
HOARD_HOARDHEAP_H


29 
	#HOARD_HOARDHEAP_H


	)

31 
	~<as£π.h
>

33 
	~"hó∂ayîs.h
"

35 
usög
 
«me•a˚
 
	gHL
;

39 
	#SUPERBLOCK_SIZE
 65536

	)

42 
	#EMPTINESS_CLASSES
 8

	)

47 
	~"thªshﬁdhóp.h
"

48 
	~"hﬂrdm™agî.h
"

49 
	~"addhódîhóp.h
"

50 
	~"thªadpoﬁhóp.h
"

51 
	~"ªdúe˘‰ì.h
"

52 
	~"ign‹eövÆid‰ì.h
"

53 
	~"c⁄f‹m™thóp.h
"

54 
	~"hﬂrdsu≥rblock.h
"

55 
	~"lockmÆlochóp.h
"

56 
	~"Æig√dsu≥rblockhóp.h
"

57 
	~"Æig√dmm≠.h
"

58 
	~"globÆhóp.h
"

60 
	~"thªshﬁd£ghóp.h
"

61 
	~"geomëricsize˛ass.h
"

68 #i‡
deföed
(
_WIN32
)

69 
	gHL
::
	tWöLockTy≥
 
	tTheLockTy≥
;

70 #ñi‡
deföed
(
__APPLE__
)

74 
	gHL
::
	tMacLockTy≥
 
	tTheLockTy≥
;

75 #ñi‡
deföed
(
__SVR4
)

76 
	gHL
::
	tSpöLockTy≥
 
	tTheLockTy≥
;

78 
	gHL
::
	tSpöLockTy≥
 
	tTheLockTy≥
;

81 #i‡
deföed
(
__˛™g__
)

82 #¥agm®
˛™g
 
dügno°ic
 
push


83 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wunused-variable"

86 
«me•a˚
 
	gHﬂrd
 {

88 
˛ass
 
	gMm≠Sour˚
 : 
public
 
Alig√dMm≠
<
SUPERBLOCK_SIZE
, 
	gTheLockTy≥
> {};

94 
	gGlobÆHóp
<
	tSUPERBLOCK_SIZE
, 
	tEMPTINESS_CLASSES
, 
	tMm≠Sour˚
, 
	tTheLockTy≥
>

95 
	tTheGlobÆHóp
;

103 ˛as†
	chﬂrdThªshﬁdFun˘i⁄Cœss
 {

104 
	gpublic
:

105 
ölöe
 
boﬁ
 
fun˘i⁄
 (
u
, 
a
, 
size_t
 
objSize
) {

112 
boﬁ
 
	gr
 = ((
EMPTINESS_CLASSES
 * 
u
Ë< ((EMPTINESS_CLASSES-1Ë* 
a
)Ë&& ((u <á - (2 * 
SUPERBLOCK_SIZE
Ë/ (Ë
objSize
));

113  
	gr
;

118 
˛ass
 
	gSmÆlHóp
;

120 
	gHﬂrdSu≥rblock
<
	tTheLockTy≥
, 
	tSUPERBLOCK_SIZE
, 
	tSmÆlHóp
> 
	tSmÆlSu≥rblockTy≥
;

125 
˛ass
 
	gSmÆlHóp
 :

126 
public
 
C⁄f‹m™tHóp
<

127 
HﬂrdM™agî
<
Alig√dSu≥rblockHóp
<
TheLockTy≥
, 
	gSUPERBLOCK_SIZE
, 
	gMm≠Sour˚
>,

128 
	gTheGlobÆHóp
,

129 
	gSmÆlSu≥rblockTy≥
,

130 
	gEMPTINESS_CLASSES
,

131 
	gTheLockTy≥
,

132 
	ghﬂrdThªshﬁdFun˘i⁄Cœss
,

133 
	gSmÆlHóp
> >

136 
˛ass
 
	gBigHóp
;

138 
	gHﬂrdSu≥rblock
<
	tTheLockTy≥
, 
	tSUPERBLOCK_SIZE
, 
	tBigHóp
> 
	tBigSu≥rblockTy≥
;

146 
	gC⁄f‹m™tHóp
<
	tHL
::
	tLockedHóp
<
	tTheLockTy≥
,

147 
	tAddHódîHóp
<
	tBigSu≥rblockTy≥
,

148 
	tSUPERBLOCK_SIZE
,

149 
	tMm≠Sour˚
 > > >

150 
	tbigHópTy≥
;

158 
˛ass
 
	gobje˘Sour˚
 : 
public
 
AddHódîHóp
<
BigSu≥rblockTy≥
,

159 
	gSUPERBLOCK_SIZE
,

160 
	gMm≠Sour˚
> {};

162 
	gHL
::
	tThªadHóp
<64, 
	tHL
::
	tLockedHóp
<
	tTheLockTy≥
,

163 
	tThªshﬁdSegHóp
<25,

166 
	tGeomëricSizeCœss
<20>::
	tsize2˛ass
,

167 
	tGeomëricSizeCœss
<20>::
	t˛ass2size
,

168 
	tGeomëricSizeCœss
<20>::
	tMaxObje˘Size
,

169 
	tAd≠tHóp
<
	tDLLi°
, 
	tobje˘Sour˚
>,

170 
	tobje˘Sour˚
> > >

171 
	tbigHópTy≥
;

174 ˛as†
	cBigHóp
 : 
public
 
bigHópTy≥
 {};

176 íum { 
	gBigObje˘Size
 =

177 
HL
::
bös
<
SmÆlSu≥rblockTy≥
::
Hódî
, 
	gSUPERBLOCK_SIZE
>::
BIG_OBJECT
 };

182 
˛ass
 
	gPîThªadHﬂrdHóp
 :

183 
public
 
Redúe˘Fªe
<
LockMÆlocHóp
<
SmÆlHóp
>,

184 
	gSmÆlSu≥rblockTy≥
> {

185 
	g¥iv©e
:

187 
_dummy
[64];

191 
	gãm∂©e
 <
	gN
, 
	gNH
>

192 
˛ass
 
	gHﬂrdHóp
 :

193 
public
 
HL
::
ANSIWøµî
<

194 
Ign‹eInvÆidFªe
<

195 
HL
::
HybridHóp
<
Hﬂrd
::
BigObje˘Size
,

196 
	gThªadPoﬁHóp
<
	gN
, 
	gNH
, 
	gHﬂrd
::
PîThªadHﬂrdHóp
>,

197 
	gHﬂrd
::
BigHóp
> > >

199 
public
:

201 íum { 
BIG_OBJECT
 = 
Hﬂrd
::
BigObje˘Size
 };

203 
HﬂrdHóp
() {

204 íum { 
	gBIG_HEADERS
 = (
Hﬂrd
::
BigSu≥rblockTy≥
::
Hódî
),

205 
	gSMALL_HEADERS
 = (
Hﬂrd
::
SmÆlSu≥rblockTy≥
::
Hódî
)};

206 
	gHL
::
ßs£π
<(
BIG_HEADERS
 =
SMALL_HEADERS
)> 
ísuªSameSizeHódîs
;

207 
	gísuªSameSizeHódîs
 = 
ísuªSameSizeHódîs
;

213 #i‡
deföed
(
__˛™g__
)

214 #¥agm®
˛™g
 
dügno°ic
 
p›


	@include/hoard/hoardmanager.h

28 #i‚de‡
HOARD_HOARDMANAGER_H


29 
	#HOARD_HOARDMANAGER_H


	)

31 
	~<c°dlib
>

32 
	~<√w
>

35 
	~"°©i°ics.h
"

36 
	~"em±y˛ass.h
"

37 
	~"¨øy.h
"

38 
	~"m™age⁄esu≥rblock.h
"

39 
	~"ba£hﬂrdm™agî.h
"

40 
	~"em±yhﬂrdm™agî.h
"

43 
	~"hó∂ayîs.h
"

45 
usög
 
«me•a˚
 
	gHL
;

55 
«me•a˚
 
	gHﬂrd
 {

57 
	gãm∂©e
 <
˛ass
 
	gSour˚Hóp
,

58 
˛ass
 
	gP¨ítHóp
,

59 
˛ass
 
	gSu≥rblockTy≥_
,

60 
	gEm±öessCœs£s
,

61 
˛ass
 
	gLockTy≥
,

62 
˛ass
 
	gthªshﬁdFun˘i⁄Cœss
,

63 
˛ass
 
	gHópTy≥
>

64 
˛ass
 
	gHﬂrdM™agî
 : 
public
 
Ba£HﬂrdM™agî
<
Su≥rblockTy≥_
>,

65 
public
 
	gthªshﬁdFun˘i⁄Cœss


67 
	gpublic
:

69 
HﬂrdM™agî
 ()

70 : 
_magic
 (
MAGIC_NUMBER
)

73 
vútuÆ
 ~
HﬂrdM™agî
 () {}

75 
Su≥rblockTy≥_
 
	tSu≥rblockTy≥
;

77 íum { 
	gAlignmít
 = 
Su≥rblockTy≥
::
Hódî
::
Alignmít
 };

80 
MALLOC_FUNCTION
 
INLINE
 * 
mÆloc
 (
size_t
 
sz
)

82 
	gCheck
<
	gHﬂrdM™agî
, 
	gßnôyCheck
> 
check
 (
this
);

83 c⁄° 
	gböIndex
 = 
böTy≥
::
gëSizeCœss
(
sz
);

84 
size_t
 
	gªÆSize
 = 
böTy≥
::
gëCœssSize
 (
böIndex
);

85 
as£π
 (
ªÆSize
 >
sz
);

88 * 
	g±r
 = 
gëObje˘
 (
böIndex
, 
ªÆSize
);

89 i‡(!
	g±r
) {

90 
	g±r
 = 
¶owP©hMÆloc
 (
ªÆSize
);

92 
as£π
 (
Su≥rHóp
::
gëSize
(
±r
Ë>
sz
);

93 
as£π
 ((
size_t
Ë
±r
 % 
Alignmít
 == 0);

94  
	g±r
;

99 
NO_INLINE
 
put
 (
Su≥rblockTy≥
 * 
s
, 
size_t
 
sz
) {

100 
	gHL
::
Gu¨d
<
LockTy≥
> 
l
 (
_theLock
);

102 
as£π
 (
s
->
gëOw√r
(Ë!
this
);

103 
	gCheck
<
	gHﬂrdM™agî
, 
	gßnôyCheck
> 
check
 (
this
);

105 c⁄° 
	gböIndex
 = 
böTy≥
::
gëSizeCœss
(
sz
);

108 
	gSèti°ics
& 
	g°©s
 = 
_°©s
(
böIndex
);

109 
	ga
 = 
°©s
.
gëAŒoˇãd
(Ë+ 
s
->
gëTŸÆObje˘s
();

110 
	gu
 = 
°©s
.
gëInU£
(Ë+ (
s
->
gëTŸÆObje˘s
(Ë- s->
gëObje˘sFªe
());

112 i‡(
	gthªshﬁdFun˘i⁄Cœss
::
fun˘i⁄
 (
u
, 
a
, 
sz
)) {

115 
	g_ph
.
put
 (
ªöãΩªt_ˇ°
<
ty≥«me
 
P¨ítHóp
::
Su≥rblockTy≥
 *>(
s
), 
sz
);

117 
u∆ocked_put
 (
s
, 
sz
);

123 
NO_INLINE
 
Su≥rblockTy≥
 * 
gë
 (
size_t
 
sz
, 
HópTy≥
 * 
de°
) {

124 
	gHL
::
Gu¨d
<
LockTy≥
> 
l
 (
_theLock
);

125 
	gCheck
<
	gHﬂrdM™agî
, 
	gßnôyCheck
> 
check
 (
this
);

126 c⁄° 
	gböIndex
 = 
böTy≥
::
gëSizeCœss
 (
sz
);

127 
Su≥rblockTy≥
 * 
	gs
 = 
_ŸhîBös
(
böIndex
).
gë
();

128 i‡(
	gs
) {

129 
as£π
 (
s
->
isVÆidSu≥rblock
());

132 
decSètsSu≥rblock
 (
s
, 
böIndex
);

133 
	gs
->
£tOw√r
 (
de°
);

136  
	gs
;

140 
INLINE
 
‰ì
 (* 
±r
) {

141 
	gCheck
<
	gHﬂrdM™agî
, 
	gßnôyCheck
> 
check
 (
this
);

144 
Su≥rblockTy≥
 * 
	gs
 = 
Su≥rHóp
::
gëSu≥rblock
 (
±r
);

146 
as£π
 (
s
->
gëOw√r
(Ë=
this
);

151 
as£π
 (
s
->
n‹mÆize
 (
±r
) ==Ötr);

153 c⁄° 
size_t
 
	gsz
 = 
s
->
gëObje˘Size
 ();

154 c⁄° 
	gböIndex
 = 
böTy≥
::
gëSizeCœss
 (
sz
);

157 
_ŸhîBös
(
böIndex
).
‰ì
 (
±r
);

161 
	gSèti°ics
& 
	g°©s
 = 
_°©s
(
böIndex
);

162 
	gu
 = 
°©s
.
gëInU£
();

163 c⁄° 
	ga
 = 
°©s
.
gëAŒoˇãd
();

164 i‡(
	gu
 > 0)

165 
	gu
--;

166 
	g°©s
.
£tInU£
 (
u
);

170 i‡(
	gthªshﬁdFun˘i⁄Cœss
::
fun˘i⁄
 (
u
, 
a
, 
sz
)) {

172 
¶owP©hFªe
 (
böIndex
, 
u
, 
a
);

177 
INLINE
 
lock
 () {

178 
	g_theLock
.
lock
();

181 
INLINE
 
u∆ock
 () {

182 
	g_theLock
.
u∆ock
();

185 
	g¥iv©e
:

187 
Ba£HﬂrdM™agî
<
	tSu≥rblockTy≥_
> 
	tSu≥rHóp
;

189 íum { 
	gSu≥rblockSize
 = (
Su≥rblockTy≥_
) };

192 
	gHL
::
ßs£π
<((
Su≥rblockSize
 & (Su≥rblockSize-1)Ë=0)> 
vîifyPowîOfTwo
;

194 íum { 
	gMAGIC_NUMBER
 = 0xfeeddadd };

197 c⁄° 
	g_magic
;

199 
ölöe
 
isVÆid
 () const {

200  (
	g_magic
 =
MAGIC_NUMBER
);

203 
	gßs£π
<(
ty≥«me
 
	gSu≥rblockTy≥
::
Hódî
) % () == 0>

204 
vîifyHódîRightSize
;

208 
	gHL
::
	tbös
<
	tty≥«me
 
	tSu≥rblockTy≥
::
	tHódî
, 
	tSu≥rblockSize
> 
	tböTy≥
;

211 íum { 
	gNumBös
 = 
böTy≥
::
NUM_BINS
 };

213 
NO_INLINE
 
¶owP©hFªe
 (
böIndex
, 
u
, 
a
) {

216 
	gCheck
<
	gHﬂrdM™agî
, 
	gßnôyCheck
> 
check
 (
this
);

220 
Su≥rblockTy≥
 * 
	gsb
 = 
_ŸhîBös
(
böIndex
).
gë
 ();

223 
as£π
 (
sb
);

224 i‡(
	gsb
) {

226 c⁄° 
size_t
 
	gsz
 = 
böTy≥
::
gëCœssSize
 (
böIndex
);

227 
	gSèti°ics
& 
	g°©s
 = 
_°©s
(
böIndex
);

228 
	gtŸÆObje˘s
 = 
sb
->
gëTŸÆObje˘s
();

229 
	g°©s
.
£tInU£
 (
u
 - (
tŸÆObje˘s
 - 
sb
->
gëObje˘sFªe
()));

230 
	g°©s
.
£tAŒoˇãd
 (
a
 - 
tŸÆObje˘s
);

235 
	g_ph
.
put
 (
ªöãΩªt_ˇ°
<
ty≥«me
 
P¨ítHóp
::
Su≥rblockTy≥
 *>(
sb
), 
sz
);

236 
as£π
 (
sb
->
isVÆidSu≥rblock
());

242 
NO_INLINE
 
u∆ocked_put
 (
Su≥rblockTy≥
 * 
s
, 
size_t
 
sz
) {

243 i‡(!
	gs
 || !s->
isVÆidSu≥rblock
()) {

247 
	gCheck
<
	gHﬂrdM™agî
, 
	gßnôyCheck
> 
check
 (
this
);

249 c⁄° 
	gböIndex
 = 
böTy≥
::
gëSizeCœss
(
sz
);

252 
	gs
->
£tOw√r
 (
ªöãΩªt_ˇ°
<
HópTy≥
 *>(
this
));

253 
_ŸhîBös
(
böIndex
).
put
 (
s
);

258 
addSètsSu≥rblock
 (
s
, 
böIndex
);

259 
as£π
 (
s
->
isVÆidSu≥rblock
());

263 
addSètsSu≥rblock
 (
Su≥rblockTy≥
 * 
s
, 
böIndex
) {

264 
	gSèti°ics
& 
	g°©s
 = 
_°©s
(
böIndex
);

266 
	ga
 = 
°©s
.
gëAŒoˇãd
();

267 
	gu
 = 
°©s
.
gëInU£
();

268 
	gtŸÆObje˘s
 = 
s
->
gëTŸÆObje˘s
();

269 
	g°©s
.
£tInU£
 (
u
 + (
tŸÆObje˘s
 - 
s
->
gëObje˘sFªe
()));

270 
	g°©s
.
£tAŒoˇãd
 (
a
 + 
tŸÆObje˘s
);

274 
decSètsSu≥rblock
 (
Su≥rblockTy≥
 * 
s
, 
böIndex
) {

275 
	gSèti°ics
& 
	g°©s
 = 
_°©s
(
böIndex
);

277 
	ga
 = 
°©s
.
gëAŒoˇãd
();

278 
	gu
 = 
°©s
.
gëInU£
();

279 
	gtŸÆObje˘s
 = 
s
->
gëTŸÆObje˘s
();

280 
	g°©s
.
£tInU£
 (
u
 - (
tŸÆObje˘s
 - 
s
->
gëObje˘sFªe
()));

281 
	g°©s
.
£tAŒoˇãd
 (
a
 - 
tŸÆObje˘s
);

284 
MALLOC_FUNCTION
 
NO_INLINE
 * 
¶owP©hMÆloc
 (
size_t
 
sz
) {

285 c⁄° 
	gböIndex
 = 
böTy≥
::
gëSizeCœss
 (
sz
);

286 
size_t
 
	gªÆSize
 = 
böTy≥
::
gëCœssSize
 (
böIndex
);

287 
as£π
 (
ªÆSize
 >
sz
);

289 
	gCheck
<
	gHﬂrdM™agî
, 
	gßnôyCheck
> 
check
 (
this
);

290 * 
	g±r
 = 
gëObje˘
 (
böIndex
, 
ªÆSize
);

291 i‡(
	g±r
) {

292  
	g±r
;

294 
	gCheck
<
	gHﬂrdM™agî
, 
	gßnôyCheck
> 
check
 (
this
);

296 i‡(!
gëAnŸhîSu≥rblock
 (
ªÆSize
)) {

305 
MALLOC_FUNCTION
 
INLINE
 * 
gëObje˘
 (
böIndex
, 
size_t
 
sz
) {

306 
	gCheck
<
	gHﬂrdM™agî
, 
	gßnôyCheck
> 
check
 (
this
);

307 * 
	g±r
 = 
_ŸhîBös
(
böIndex
).
mÆloc
 (
sz
);

308 i‡(
	g±r
) {

310 
	gu
 = 
_°©s
(
böIndex
).
gëInU£
();

311 
_°©s
(
böIndex
).
£tInU£
 (
u
+1);

313  
	g±r
;

316 
‰õnd
 
˛ass
 
	gßnôyCheck
;

318 ˛as†
	cßnôyCheck
 {

319 
	gpublic
:

320 
ölöe
 
¥ec⁄dôi⁄
 (
HﬂrdM™agî
 * 
h
) {

321 
checkInv¨ü¡
(
h
);

323 
ölöe
 
po°c⁄dôi⁄
 (
HﬂrdM™agî
 * 
h
) {

324 
checkInv¨ü¡
(
h
);

326 
	g¥iv©e
:

327 
ölöe
 
checkInv¨ü¡
 (
HﬂrdM™agî
 * 
h
) {

328 
as£π
 (
h
->
isVÆid
());

332 
	g¥iv©e
:

334 
NO_INLINE
 * 
gëAnŸhîSu≥rblock
 (
size_t
 
sz
) {

338 
Su≥rblockTy≥
 * 
sb
 = 
NULL
;

342 
	gsb
 = 
ªöãΩªt_ˇ°
<
Su≥rblockTy≥
 *>(
_ph
.
gë
 (
sz
,ÑeöãΩªt_ˇ°<
P¨ítHóp
 *>(
this
)));

344 i‡(
	gsb
) {

345 i‡(!
	gsb
->
isVÆidSu≥rblock
()) {

347 
	gsb
 = 
NULL
;

352 * 
	g±r
 = 
_sour˚Hóp
.
mÆloc
 (
Su≥rblockSize
);

353 i‡(!
	g±r
) {

356 
	gsb
 = 
√w
 (
±r
Ë
Su≥rblockTy≥
 (
sz
);

360 i‡(
	gsb
) {

361 
u∆ocked_put
 (
sb
, 
sz
);

363  
	gsb
;

366 
LockTy≥
 
	g_theLock
;

369 
	gAºay
<
	gNumBös
, 
	gSèti°ics
> 
	g_°©s
;

371 
Su≥rblockTy≥
 * 
	tSu≥rblockTy≥Poöãr
;

373 
	gEm±yCœss
<
	tSu≥rblockTy≥
, 
	tEm±öessCœs£s
> 
	tOrg™izedByEm±öess
;

375 
	gM™ageO√Su≥rblock
<
	tOrg™izedByEm±öess
> 
	tBöM™agî
;

378 
	gAºay
<
	gNumBös
, 
	gBöM™agî
> 
	g_ŸhîBös
;

381 
P¨ítHóp
 
	g_ph
;

384 
Sour˚Hóp
 
	g_sour˚Hóp
;

	@include/hoard/hoardsuperblock.h

28 #i‚de‡
HOARD_HOARDSUPERBLOCK_H


29 
	#HOARD_HOARDSUPERBLOCK_H


	)

31 
	~<ˇs£π
>

32 
	~<c°dlib
>

34 
	~"hó∂ayîs.h
"

37 
	~"hﬂrdsu≥rblockhódî.h
"

39 
«me•a˚
 
	gHﬂrd
 {

41 
	gãm∂©e
 <
˛ass
 
	gLockTy≥
,

42 
	gSu≥rblockSize
,

43 
˛ass
 
	gHópTy≥
>

44 ˛as†
	cHﬂrdSu≥rblock
 {

45 
	gpublic
:

47 
HﬂrdSu≥rblock
 (
size_t
 
sz
)

48 : 
_hódî
 (
sz
, 
Buf„rSize
)

50 
as£π
 (
_hódî
.
isVÆid
());

51 
as£π
 (
this
 =(
HﬂrdSu≥rblock
 *)

52 (((
size_t
Ë
this
Ë& ~((size_tË
Su≥rblockSize
-1)));

57 
ölöe
 
HﬂrdSu≥rblock
 * 
gëSu≥rblock
 (* 
±r
) {

58  (
	gHﬂrdSu≥rblock
 *)

59 (((
	gsize_t
Ë
	g±r
Ë& ~((size_tË
	gSu≥rblockSize
-1));

62 
INLINE
 
size_t
 
gëSize
 (* 
±r
) const {

63 i‡(
	g_hódî
.
isVÆid
(Ë&& 
öR™ge
 (
±r
)) {

64  
	g_hódî
.
gëSize
 (
±r
);

71 
INLINE
 
size_t
 
gëObje˘Size
 () const {

72 i‡(
	g_hódî
.
isVÆid
()) {

73  
	g_hódî
.
gëObje˘Size
();

79 
MALLOC_FUNCTION
 
INLINE
 * 
mÆloc
 (
size_t
) {

80 
as£π
 (
_hódî
.
isVÆid
());

81 * 
	g±r
 = 
_hódî
.
mÆloc
();

82 i‡(
	g±r
) {

83 
as£π
 (
öR™ge
 (
±r
));

84 
as£π
 ((
size_t
Ë
±r
 % 
HópTy≥
::
Alignmít
 == 0);

86  
	g±r
;

89 
INLINE
 
‰ì
 (* 
±r
) {

90 i‡(
	g_hódî
.
isVÆid
(Ë&& 
öR™ge
 (
±r
)) {

92 
	g_hódî
.
‰ì
 (
±r
);

98 
˛ór
 () {

99 i‡(
	g_hódî
.
isVÆid
())

100 
	g_hódî
.
˛ór
();

105 
INLINE
 
boﬁ
 
isVÆidSu≥rblock
 () const {

106 
boﬁ
 
	gb
 = 
_hódî
.
isVÆid
();

107  
	gb
;

110 
INLINE
 
gëTŸÆObje˘s
 () const {

111 
as£π
 (
_hódî
.
isVÆid
());

112  
	g_hódî
.
gëTŸÆObje˘s
();

116 
INLINE
 
gëObje˘sFªe
 () const {

117 
as£π
 (
_hódî
.
isVÆid
());

118 
as£π
 (
_hódî
.
gëObje˘sFªe
() >= 0);

119 
as£π
 (
_hódî
.
gëObje˘sFªe
(Ë<_hódî.
gëTŸÆObje˘s
());

120  
	g_hódî
.
gëObje˘sFªe
();

123 
ölöe
 
lock
 () {

124 
as£π
 (
_hódî
.
isVÆid
());

125 
	g_hódî
.
lock
();

128 
ölöe
 
u∆ock
 () {

129 
as£π
 (
_hódî
.
isVÆid
());

130 
	g_hódî
.
u∆ock
();

133 
ölöe
 
HópTy≥
 * 
gëOw√r
 () const {

134 
as£π
 (
_hódî
.
isVÆid
());

135  
	g_hódî
.
gëOw√r
();

138 
ölöe
 
£tOw√r
 (
HópTy≥
 * 
o
) {

139 
as£π
 (
_hódî
.
isVÆid
());

140 
as£π
 (
o
 !
NULL
);

141 
	g_hódî
.
£tOw√r
 (
o
);

144 
ölöe
 
HﬂrdSu≥rblock
 * 
gëNext
 () const {

145 
as£π
 (
_hódî
.
isVÆid
());

146  
	g_hódî
.
gëNext
();

149 
ölöe
 
HﬂrdSu≥rblock
 * 
gëPªv
 () const {

150 
as£π
 (
_hódî
.
isVÆid
());

151  
	g_hódî
.
gëPªv
();

154 
ölöe
 
£tNext
 (
HﬂrdSu≥rblock
 * 
f
) {

155 
as£π
 (
_hódî
.
isVÆid
());

156 
as£π
 (
f
 !
this
);

157 
	g_hódî
.
£tNext
 (
f
);

160 
ölöe
 
£tPªv
 (
HﬂrdSu≥rblock
 * 
f
) {

161 
as£π
 (
_hódî
.
isVÆid
());

162 
as£π
 (
f
 !
this
);

163 
	g_hódî
.
£tPªv
 (
f
);

166 
INLINE
 
boﬁ
 
öR™ge
 (* 
±r
) const {

168 c⁄° 
size_t
 
	g±rVÆue
 = (size_tË
±r
;

169  ((
	g±rVÆue
 >(
size_t
Ë
_buf
) &&

170 (
±rVÆue
 <(
size_t
Ë&
_buf
[
Buf„rSize
]));

173 
INLINE
 * 
n‹mÆize
 (* 
±r
) const {

174 * 
	g±r2
 = 
_hódî
.
n‹mÆize
 (
±r
);

175 
as£π
 (
öR™ge
 (
±r
));

176 
as£π
 (
öR™ge
 (
±r2
));

177  
	g±r2
;

180 
	gHﬂrd
::
	tHﬂrdSu≥rblockHódî
<
	tLockTy≥
, 
	tSu≥rblockSize
, 
	tHópTy≥
> 
	tHódî
;

182 
	g¥iv©e
:

187 
HﬂrdSu≥rblock
 (const HoardSuperblock&);

188 
	gHﬂrdSu≥rblock
& 
	g›î©‹
=(c⁄° 
HﬂrdSu≥rblock
&);

190 íum { 
	gBuf„rSize
 = 
Su≥rblockSize
 - (
Hódî
) };

193 
Hódî
 
	g_hódî
;

197 
	g_buf
[
Buf„rSize
];

	@include/hoard/hoardsuperblockheader.h

28 #i‚de‡
HOARD_HOARDSUPERBLOCKHEADER_H


29 
	#HOARD_HOARDSUPERBLOCKHEADER_H


	)

31 
	~<°dio.h
>

34 #i‡
deföed
(
_WIN32
)

35 #¥agm®
w¨nög
–
push
 )

36 #¥agm®
w¨nög
–
dißbÀ
: 4355 )

39 
	~"hó∂ayîs.h
"

41 
	~<c°dlib
>

43 #i‡
deföed
(
__˛™g__
)

44 #¥agm®
˛™g
 
dügno°ic
 
push


45 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wunused-variable"

48 
«me•a˚
 
	gHﬂrd
 {

50 
	gãm∂©e
 <
˛ass
 
	gLockTy≥
,

51 
	gSu≥rblockSize
,

52 
ty≥«me
 
	gHópTy≥
>

53 
˛ass
 
	gHﬂrdSu≥rblock
;

55 
	gãm∂©e
 <
˛ass
 
	gLockTy≥
,

56 
	gSu≥rblockSize
,

57 
ty≥«me
 
	gHópTy≥
>

58 ˛as†
	cHﬂrdSu≥rblockHódîHñ≥r
 {

59 
	gpublic
:

61 íum { 
Alignmít
 = 16 };

63 
	gpublic
:

65 
HﬂrdSu≥rblockHódîHñ≥r
 (
size_t
 
sz
, size_à
buf„rSize
, * 
°¨t
)

66 : 
_magicNumbî
 (
MAGIC_NUMBER
 ^ (
size_t
Ë
this
),

67 
_obje˘Size
 (
sz
),

68 
_obje˘SizeIsPowîOfTwo
 (!(
sz
 & (sz - 1)) && sz),

69 
_tŸÆObje˘s
 ((Ë(
buf„rSize
 / 
sz
)),

70 
_ow√r
 (
NULL
),

71 
_¥ev
 (
NULL
),

72 
_√xt
 (
NULL
),

73 
_ª≠abÀObje˘s
 (
_tŸÆObje˘s
),

74 
_obje˘sFªe
 (
_tŸÆObje˘s
),

75 
_°¨t
 (
°¨t
),

76 
_posôi⁄
 (
°¨t
)

78 
as£π
 ((
HL
::
Æign
<
Alignmít
>((
size_t
Ë
°¨t
) == (size_t) start));

79 
as£π
 (
_obje˘Size
 >
Alignmít
);

80 
as£π
 ((
_tŸÆObje˘s
 =1Ë|| (
_obje˘Size
 % 
Alignmít
 == 0));

83 
	gvútuÆ
 ~
HﬂrdSu≥rblockHódîHñ≥r
() {

84 
˛ór
();

87 
ölöe
 * 
mÆloc
() {

88 
as£π
 (
isVÆid
());

89 * 
	g±r
 = 
ª≠AŒoc
();

90 
as£π
 ((
±r
 =
NULL
Ë|| ((
size_t
Ë±∏% 
Alignmít
 == 0));

91 i‡(!
	g±r
) {

92 
	g±r
 = 
‰ìLi°AŒoc
();

93 
as£π
 ((
±r
 =
NULL
Ë|| ((
size_t
Ë±∏% 
Alignmít
 == 0));

95 i‡(
	g±r
 !
NULL
) {

96 
as£π
 (
gëSize
(
±r
Ë>
_obje˘Size
);

97 
as£π
 ((
size_t
Ë
±r
 % 
Alignmít
 == 0);

99  
	g±r
;

102 
ölöe
 
‰ì
 (* 
±r
) {

103 
as£π
 ((
size_t
Ë
±r
 % 
Alignmít
 == 0);

104 
as£π
 (
isVÆid
());

105 
	g_‰ìLi°
.
ö£π
 (
ªöãΩªt_ˇ°
<
FªeSLLi°
::
E¡ry
 *>(
±r
));

106 
	g_obje˘sFªe
++;

107 i‡(
	g_obje˘sFªe
 =
_tŸÆObje˘s
) {

108 
˛ór
();

112 
˛ór
() {

113 
as£π
 (
isVÆid
());

115 
	g_‰ìLi°
.
˛ór
();

117 
	g_obje˘sFªe
 = 
_tŸÆObje˘s
;

118 
	g_ª≠abÀObje˘s
 = 
_tŸÆObje˘s
;

119 
	g_posôi⁄
 = (*Ë(
HL
::
Æign
<
Alignmít
>((
size_t
Ë
_°¨t
));

123 
INLINE
 * 
n‹mÆize
 (* 
±r
) const {

124 
as£π
 (
isVÆid
());

125 
size_t
 
	goff£t
 = (size_tË
±r
 - (size_tË
_°¨t
;

126 * 
	gp
;

133 i‡(
	g_obje˘SizeIsPowîOfTwo
) {

134 
	gp
 = (*Ë((
size_t
Ë
±r
 - (
off£t
 & (
_obje˘Size
 - 1)));

136 
	gp
 = (*Ë((
size_t
Ë
±r
 - (
off£t
 % 
_obje˘Size
));

138  
	gp
;

142 
size_t
 
gëSize
 (* 
±r
) const {

143 
as£π
 (
isVÆid
());

144 
size_t
 
	goff£t
 = (size_tË
±r
 - (size_tË
_°¨t
;

145 
size_t
 
	g√wSize
;

146 i‡(
	g_obje˘SizeIsPowîOfTwo
) {

147 
	g√wSize
 = 
_obje˘Size
 - (
off£t
 & (_objectSize - 1));

149 
	g√wSize
 = 
_obje˘Size
 - (
off£t
 % _objectSize);

151  
	g√wSize
;

154 
size_t
 
gëObje˘Size
() const {

155  
	g_obje˘Size
;

158 
gëTŸÆObje˘s
() const {

159  
	g_tŸÆObje˘s
;

162 
gëObje˘sFªe
() const {

163  
	g_obje˘sFªe
;

166 
HópTy≥
 * 
gëOw√r
() const {

167  
	g_ow√r
;

170 
£tOw√r
 (
HópTy≥
 * 
o
) {

171 
	g_ow√r
 = 
o
;

174 
boﬁ
 
isVÆid
() const {

175  (
	g_magicNumbî
 =(
MAGIC_NUMBER
 ^ (
size_t
Ë
this
));

178 
	gHﬂrdSu≥rblock
<
	gLockTy≥
, 
	gSu≥rblockSize
, 
	gHópTy≥
> * 
gëNext
() const {

179  
	g_√xt
;

182 
	gHﬂrdSu≥rblock
<
	gLockTy≥
, 
	gSu≥rblockSize
, 
	gHópTy≥
> * 
gëPªv
() const {

183  
	g_¥ev
;

186 
£tNext
 (
HﬂrdSu≥rblock
<
LockTy≥
, 
Su≥rblockSize
, 
HópTy≥
> * 
n
) {

187 
	g_√xt
 = 
n
;

190 
£tPªv
 (
HﬂrdSu≥rblock
<
LockTy≥
, 
Su≥rblockSize
, 
HópTy≥
> * 
p
) {

191 
	g_¥ev
 = 
p
;

194 
lock
() {

195 
	g_theLock
.
lock
();

198 
u∆ock
() {

199 
	g_theLock
.
u∆ock
();

202 
	g¥iv©e
:

204 
MALLOC_FUNCTION
 
INLINE
 * 
ª≠AŒoc
() {

205 
as£π
 (
isVÆid
());

206 
as£π
 (
_posôi⁄
);

208 i‡(
	g_ª≠abÀObje˘s
 > 0) {

209 * 
	g±r
 = 
_posôi⁄
;

210 
	g_posôi⁄
 = 
±r
 + 
_obje˘Size
;

211 
	g_ª≠abÀObje˘s
--;

212 
	g_obje˘sFªe
--;

213 
as£π
 ((
size_t
Ë
±r
 % 
Alignmít
 == 0);

214  
	g±r
;

216  
	gNULL
;

220 
MALLOC_FUNCTION
 
INLINE
 * 
‰ìLi°AŒoc
() {

221 
as£π
 (
isVÆid
());

223 * 
	g±r
 = 
ªöãΩªt_ˇ°
<*>(
_‰ìLi°
.
gë
());

224 i‡(
	g±r
) {

225 
as£π
 (
_obje˘sFªe
 >= 1);

226 
	g_obje˘sFªe
--;

228  
	g±r
;

231 íum { 
	gMAGIC_NUMBER
 = 0xcafed00d };

234 c⁄° 
size_t
 
	g_magicNumbî
;

237 c⁄° 
size_t
 
	g_obje˘Size
;

240 c⁄° 
boﬁ
 
	g_obje˘SizeIsPowîOfTwo
;

243 c⁄° 
	g_tŸÆObje˘s
;

246 
LockTy≥
 
	g_theLock
;

249 
HópTy≥
 * 
	g_ow√r
;

252 
	gHﬂrdSu≥rblock
<
	gLockTy≥
, 
	gSu≥rblockSize
, 
	gHópTy≥
> * 
	g_¥ev
;

255 
	gHﬂrdSu≥rblock
<
	gLockTy≥
, 
	gSu≥rblockSize
, 
	gHópTy≥
> * 
	g_√xt
;

258 
	g_ª≠abÀObje˘s
;

261 
	g_obje˘sFªe
;

264 c⁄° * 
	g_°¨t
;

267 * 
	g_posôi⁄
;

270 
FªeSLLi°
 
	g_‰ìLi°
;

275 
	gãm∂©e
 <
˛ass
 
	gLockTy≥
,

276 
	gSu≥rblockSize
,

277 
ty≥«me
 
	gHópTy≥
>

278 
˛ass
 
	gHﬂrdSu≥rblockHódî
 : 
public
 
HﬂrdSu≥rblockHódîHñ≥r
<
LockTy≥
, 
	gSu≥rblockSize
, 
	gHópTy≥
> {

279 
	gpublic
:

281 
HﬂrdSu≥rblockHódî
 (
size_t
 
sz
, size_à
buf„rSize
)

282 : 
HﬂrdSu≥rblockHódîHñ≥r
<
LockTy≥
,
	gSu≥rblockSize
,
	gHópTy≥
> (
	gsz
, 
	gbuf„rSize
, (*Ë(
	gthis
 + 1))

284 
	gßs£π
<(((
	gHﬂrdSu≥rblockHódî
Ë% 
	gP¨ít
::
Alignmít
Ë=0)> 
vîifySize
;

285 
	gvîifySize
 = 
vîifySize
;

288 
	g¥iv©e
:

290 
HﬂrdSu≥rblockHódîHñ≥r
<
	tLockTy≥
,
	tSu≥rblockSize
,
	tHópTy≥
> 
	tP¨ít
;

292 
	g_dummy
[
P¨ít
::
Alignmít
 - ((Parent) % Parent::Alignment)];

297 #i‡
deföed
(
__˛™g__
)

298 #¥agm®
˛™g
 
dügno°ic
 
p›


301 #i‡
deföed
(
_WIN32
)

302 #¥agm®
w¨nög
–
p›
 )

	@include/hoard/hoardtlab.h

36 #i‚de‡
HOARD_HOARDTLAB_H


37 
	#HOARD_HOARDTLAB_H


	)

39 
	~"hﬂrdhóp.h
"

40 
	~"hópm™agî.h
"

41 
	~"éab.h
"

42 
	~"hﬂrdc⁄°™ts.h
"

44 
	~"hó∂ayîs.h
"

48 
«me•a˚
 
	gHﬂrd
 {

59 #i‡
HL_EXECUTABLE_HEAP


60 
	#HOARD_MMAP_PROTECTION_MASK
 (
PROT_READ
 | 
PROT_WRITE
 | 
PROT_EXEC
)

	)

62 
	#HOARD_MMAP_PROTECTION_MASK
 (
PROT_READ
 | 
PROT_WRITE
)

	)

69 
˛ass
 
	gHﬂrdHópTy≥
 :

70 
public
 
HópM™agî
<
TheLockTy≥
, 
	gHﬂrdHóp
<
	gMaxThªads
, 
	gNumHóps
> > {

74 
	gHﬂrdHópTy≥
::
	tSu≥rblockTy≥
::
	tHódî
 
	tTheHódî
;

82 
	gThªadLoˇlAŒoˇti⁄Buf„r
<
	tHL
::
	tbös
<
	tTheHódî
, 
	tSUPERBLOCK_SIZE
>::
	tNUM_BINS
,

83 
	tHL
::
	tbös
<
	tTheHódî
, 
	tSUPERBLOCK_SIZE
>::
	tgëSizeCœss
,

84 
	tHL
::
	tbös
<
	tTheHódî
, 
	tSUPERBLOCK_SIZE
>::
	tgëCœssSize
,

85 
	tL¨ge°SmÆlObje˘
,

86 
	tMAX_MEMORY_PER_TLAB
,

87 
	tHﬂrdHópTy≥
::
	tSu≥rblockTy≥
,

88 
	tSUPERBLOCK_SIZE
,

89 
	tHﬂrdHópTy≥
>

90 
	tTLABBa£
;

94 
	gHﬂrd
::
	tTLABBa£
 
	tTheCu°omHópTy≥
;

	@include/hoard/processheap.h

28 #i‚de‡
HOARD_PROCESSHEAP_H


29 
	#HOARD_PROCESSHEAP_H


	)

31 
	~<c°dlib
>

33 
	~"Æig√dsu≥rblockhóp.h
"

34 
	~"c⁄f‹m™thóp.h
"

35 
	~"em±yhﬂrdm™agî.h
"

36 
	~"hﬂrdm™agî.h
"

37 
	~"hﬂrdsu≥rblock.h
"

39 
«me•a˚
 
	gHﬂrd
 {

41 
	gãm∂©e
 <
size_t
 
	gSu≥rblockSize
,

42 
	gEm±öessCœs£s
,

43 
˛ass
 
	gLockTy≥
,

44 
˛ass
 
	gThªshﬁdCœss
,

45 
˛ass
 
	gMm≠Sour˚
>

46 
˛ass
 
	gPro˚ssHóp
 :

47 
public
 
C⁄f‹m™tHóp
<

48 
HﬂrdM™agî
<
Alig√dSu≥rblockHóp
<
LockTy≥
, 
	gSu≥rblockSize
, 
	gMm≠Sour˚
>,

49 
	gEm±yHﬂrdM™agî
<
	gHﬂrdSu≥rblock
<
	gLockTy≥
, 
	gSu≥rblockSize
, 
	gPro˚ssHóp
<Su≥rblockSize, 
	gEm±öessCœs£s
, LockTy≥, 
	gThªshﬁdCœss
, 
	gMm≠Sour˚
> > >,

50 
	gHﬂrdSu≥rblock
<
	gLockTy≥
, 
	gSu≥rblockSize
, 
	gPro˚ssHóp
<Su≥rblockSize, 
	gEm±öessCœs£s
, LockTy≥, 
	gThªshﬁdCœss
, 
	gMm≠Sour˚
> >,

51 
	gEm±öessCœs£s
,

52 
	gLockTy≥
,

53 
	gThªshﬁdCœss
,

54 
	gPro˚ssHóp
<
	gSu≥rblockSize
, 
	gEm±öessCœs£s
, 
	gLockTy≥
, 
	gThªshﬁdCœss
, 
	gMm≠Sour˚
> > > {

56 
	gpublic
:

58 
Pro˚ssHóp
 () {}

61 
ölöe
 * 
mÆloc
 (
size_t
);

63 
	g¥iv©e
:

66 
Pro˚ssHóp
 (const ProcessHeap&);

67 
	gPro˚ssHóp
& 
	g›î©‹
=(c⁄° 
Pro˚ssHóp
&);

	@include/hoard/redirectfree.h

28 #i‚de‡
HOARD_REDIRECTFREE_H


29 
	#HOARD_REDIRECTFREE_H


	)

31 
	~"hó∂ayîs.h
"

33 
«me•a˚
 
	gHﬂrd
 {

41 
	gãm∂©e
 <
˛ass
 
	gHóp
,

42 
ty≥«me
 
	gSu≥rblockTy≥_
>

43 ˛as†
	cRedúe˘Fªe
 {

44 
	gpublic
:

46 íum { 
Alignmít
 = 
Hóp
::Alignment };

48 
Su≥rblockTy≥_
 
	tSu≥rblockTy≥
;

50 
Redúe˘Fªe
()

54 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

55 * 
	g±r
 = 
_theHóp
.
mÆloc
 (
sz
);

56 
as£π
 (
gëSize
(
±r
Ë>
sz
);

57 
as£π
 ((
size_t
Ë
±r
 % 
Alignmít
 == 0);

58  
	g±r
;

61 
size_t
 
gëSize
 (* 
±r
) {

62  
	gHóp
::
gëSize
 (
±r
);

65 
Su≥rblockTy≥
 * 
gëSu≥rblock
 (* 
±r
) {

66  
	gHóp
::
gëSu≥rblock
 (
±r
);

70 
ölöe
 
‰ì
 (* 
±r
) {

72 
Su≥rblockTy≥
 * 
	gs
 = 
ªöãΩªt_ˇ°
<Su≥rblockTy≥ *>(
Hóp
::
gëSu≥rblock
 (
±r
));

74 
as£π
 (
s
->
isVÆidSu≥rblock
());

78 
	gBa£HﬂrdM™agî
<
	tSu≥rblockTy≥
> * 
	tba£HópTy≥
;

79 
ba£HópTy≥
 
	gow√r
;

81 
	gs
->
lock
();

90 
	gow√r
 = 
ªöãΩªt_ˇ°
<
ba£HópTy≥
>(
s
->
gëOw√r
());

91 
as£π
 (
ow√r
 !
NULL
);

92 
as£π
 (
ow√r
->
isVÆid
());

95 
	gow√r
->
lock
();

96 i‡(
	gow√r
 =
ªöãΩªt_ˇ°
<
ba£HópTy≥
>(
s
->
gëOw√r
())) {

97 
ow√r
->
‰ì
 (
±r
);

98 
	gow√r
->
u∆ock
();

99 
	gs
->
u∆ock
();

102 
	gow√r
->
u∆ock
();

105 
	gHL
::
Fªd
::
yõld
();

109 
	g¥iv©e
:

111 
Hóp
 
_theHóp
;

	@include/hoard/statistics.h

28 #i‚de‡
HOARD_STATISTICS_H


29 
	#HOARD_STATISTICS_H


	)

31 
«me•a˚
 
	gHﬂrd
 {

33 ˛as†
	cSèti°ics
 {

34 
	gpublic
:

35 
Sèti°ics
 ()

36 : 
_öU£
 (0),

37 
_Æloˇãd
 (0)

40 
ölöe
 
gëInU£
 (Ëc⁄° {  
	g_öU£
; }

41 
ölöe
 
gëAŒoˇãd
 (Ëc⁄° {  
	g_Æloˇãd
; }

42 
ölöe
 
£tInU£
 (
u
Ë{ 
	g_öU£
 = u; }

43 
ölöe
 
£tAŒoˇãd
 (
a
Ë{ 
	g_Æloˇãd
 =á; }

45 
	g¥iv©e
:

48 
_öU£
;

51 
	g_Æloˇãd
;

	@include/hoard/thresholdheap.h

28 #i‚de‡
HOARD_THRESHOLDHEAP_H


29 
	#HOARD_THRESHOLDHEAP_H


	)

31 
	~<m≠
>

32 
	~<li°
>

34 
	~"debug¥öt.h
"

36 
	~"hó∂ayîs.h
"

47 
	~"mm≠Æloc.h
"

48 
	~"exa˘ly⁄ehóp.h
"

50 
usög
 
«me•a˚
 
	g°d
;

59 
«me•a˚
 
	gHﬂrd
 {

61 
	gãm∂©e
 <
	gThªshﬁdMöWa°e
,

62 
	gThªshﬁdNumî©‹
,

63 
	gThªshﬁdDíomö©‹
,

64 
˛ass
 
	gSu≥rHóp
>

65 ˛as†
	cThªshﬁdHóp
 : 
public
 
Su≥rHóp
 {

66 
public
:

68 íum { 
Alignmít
 = 
Su≥rHóp
::Alignment };

70 
ThªshﬁdHóp
()

71 : 
_öU£
 (0),

72 
_Æloˇãd
 (0),

73 
_maxAŒoˇãd
 (0)

76 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

80 * 
	g±r
 = 
_ˇche
.
ªmove
(
sz
);

81 i‡(
	g±r
 =
NULL
) {

83 
±r
 = 
Su≥rHóp
::
mÆloc
 (
sz
);

84 
	g_Æloˇãd
 +
Su≥rHóp
::
gëSize
(
±r
);

85 i‡(
	g_Æloˇãd
 > 
	g_maxAŒoˇãd
) {

86 
	g_maxAŒoˇãd
 = 
_Æloˇãd
;

89 
	g_öU£
 +
Su≥rHóp
::
gëSize
(
±r
);

90 
as£π
 (
Su≥rHóp
::
gëSize
(
±r
Ë>
sz
);

91 
as£π
 ((
size_t
Ë
±r
 % 
Alignmít
 == 0);

92  
	g±r
;

95 
ölöe
 
‰ì
 (* 
±r
) {

96 
size_t
 
	gsz
 = 
Su≥rHóp
::
gëSize
(
±r
);

97 
DEBUG_PRINT3
("‰ìögá¿obje˘ o‡sizê%d: inU£ = %d,áŒoˇãd = %d\n", 
sz
, 
_öU£
, 
_Æloˇãd
);

98 
	g_öU£
 -
sz
;

100 
	g_ˇche
.
add
 (
sz
, 
±r
);

106 (
	gThªshﬁdMöWa°e
 < (
	g_Æloˇãd
 - 
	g_öU£
)) &&

107 (
	gThªshﬁdDíomö©‹
 * (
	g_Æloˇãd
 - 
	g_öU£
Ë> 
ThªshﬁdNumî©‹
 * 
	g_maxAŒoˇãd
)) {

109 
DEBUG_PRINT3
("¸ossögÅhªshﬁd: inU£ = %d,áŒoˇãd = %d, maxáŒoˇãd = %d\n", 
_öU£
, 
_Æloˇãd
, 
_maxAŒoˇãd
);

114 * 
	gobj
 = 
_ˇche
.
ªmoveL¨ge°
();

115 i‡(!
	gobj
) {

118 
size_t
 
	gobjSz
 = 
Su≥rHóp
::
gëSize
 (
obj
);

119 
DEBUG_PRINT1
("foundá big obje˘ i¿thêˇchêo‡sizê%lu.\n", 
objSz
);

121 
DEBUG_PRINT3
("Fªeög %d: inU£ = %d,áŒoˇãd = %d\n", 
objSz
, 
_öU£
, 
_Æloˇãd
);

122 
	g_Æloˇãd
 -
objSz
;

123 
	gSu≥rHóp
::
‰ì
 (
obj
);

125 
DEBUG_PRINT
("Threshold done.\n");

128 
	g¥iv©e
:

130 
˛ass
 
T›Hóp
 : 
public
 
SizeHóp
<
BumpAŒoc
<65536, 
	gMm≠AŒoc
> > {

131 
	gpublic
:

133 * 
mÆloc
 (
size_t
 
sz
) {

134 * 
±r
 = 
SizeHóp
<
BumpAŒoc
<65536, 
	gMm≠AŒoc
> >::
mÆloc
 (
sz
);

135 
	gbuf
[255];

136 
•rötf
 (
buf
, "T›Hó∞mÆlo¯%ld = %p\n", 
sz
, 
±r
);

137 
Ârötf
 (
°dîr
, 
buf
);

138  
	g±r
;

144 
˛ass
 
	gLoˇlHóp
 :

145 
public
 
Exa˘lyO√Hóp
<
Kög¶eyHóp
<
Ad≠tHóp
<
DLLi°
, 
	gT›Hóp
>, TopHeap> > {};

147 
	gãm∂©e
 <
˛ass
 
	gK
, cœs†
	gV
>

148 ˛as†
	cCacheHñ≥r
 {

149 
	g¥iv©e
:

150 
li°
<
	tV
, 
	tSTLAŒoˇt‹
<V, 
	tLoˇlHóp
> > 
	tli°Ty≥
;

151 
	g∑ú
<c⁄° 
	tK
, 
	tli°Ty≥
> 
	tm≠Obje˘
;

152 
	gm≠
<
	tK
, 
	tli°Ty≥
, 
	tÀss
<K>, 
	tSTLAŒoˇt‹
<
	tm≠Obje˘
, 
	tLoˇlHóp
> > 
	tm≠Ty≥
;

155 
m≠Ty≥
 
	gtheM≠
;

157 
	gpublic
:

161 
add
 (
K
 
sz
, 
V
 
±r
) {

162 
	gtheM≠
[
sz
].
push_‰⁄t
 (
±r
);

166 
V
 
ªmove
 (
K
 
sz
) {

168 
ty≥«me
 
	gm≠Ty≥
::
ôî©‹
 
i
 = 
theM≠
.
föd
 (
sz
);

169 i‡(
	gi
 !
theM≠
.
íd
()) {

170 
V
 
±r
 = 
theM≠
[
sz
].
‰⁄t
();

171 
	gtheM≠
[
sz
].
p›_‰⁄t
();

172 i‡(
	gtheM≠
[
sz
].
em±y
()) {

174 
	gtheM≠
.
îa£
 (
sz
);

176  
	g±r
;

183 
	gi
 = 
theM≠
.
begö
();

184 
	gi
 !
theM≠
.
íd
();

185 ++
	gi
) {

186 
K
 
	gkey
 = (*
i
).
fú°
;

187 
	gli°Ty≥
& 
	gtheLi°
 = (*
i
).
£c⁄d
;

188 i‡(
	gkey
 >
sz
) {

189 
V
 
±r
 = 
theLi°
.
‰⁄t
();

190 
	gtheLi°
.
p›_‰⁄t
();

193 i‡(
	gtheLi°
.
em±y
()) {

194 
	gtheM≠
.
îa£
 (
key
);

196  
	g±r
;

199  
	gNULL
;

203 
V
 
ªmoveL¨ge°
() {

205 
ty≥«me
 
	gm≠Ty≥
::
ªvî£_ôî©‹
 
i
;

206 
	gi
 = 
theM≠
.
rbegö
();

209 i‡(
	gi
 !
theM≠
.
ªnd
()) {

210 
K
 
key
 = (*
i
).
fú°
;

211 
	gli°Ty≥
& 
	gtheLi°
 = (*
i
).
£c⁄d
;

212 
V
 
	g±r
 = 
theLi°
.
‰⁄t
();

213 
	gtheLi°
.
p›_‰⁄t
();

216 i‡(
	gtheLi°
.
em±y
()) {

217 
	gtheM≠
.
îa£
 (
key
);

219  
	g±r
;

221  
	gNULL
;

225 
˛ass
 
	gCache
 : 
public
 
CacheHñ≥r
<
size_t
, *> {};

229 
	g_öU£
;

232 
	g_Æloˇãd
;

235 
	g_maxAŒoˇãd
;

238 
Cache
 
	g_ˇche
;

	@include/hoard/thresholdsegheap.h

3 #i‚de‡
HOARD_THRESHOLD_SEGHEAP_H


4 
	#HOARD_THRESHOLD_SEGHEAP_H


	)

6 
«me•a˚
 
	gHﬂrd
 {

11 
	gãm∂©e
 <
	gThªshﬁdFø˘i⁄
,

12 
	gThªshﬁdSl›
,

13 
	gNumBös
,

14 (*
	ggëSizeCœss
Ë(c⁄° 
	gsize_t
),

15 
size_t
 (*
gëCœssMaxSize
) (const ),

16 
size_t
 
	gMaxObje˘Size
,

17 
˛ass
 
	gLôéeHóp
,

18 
˛ass
 
	gBigHóp
>

19 ˛as†
	cThªshﬁdSegHóp
 : 
public
 
BigHóp


21 
public
:

23 
ThªshﬁdSegHóp
()

24 : 
_cuºLive
 (0),

25 
_maxLive
 (0),

26 
_maxFø˘i⁄
 (1.0 + (Ë
ThªshﬁdFø˘i⁄
 / 100.0),

27 
_˛óªd
 (
Ál£
)

30 
size_t
 
gëSize
 (* 
±r
) {

31  
	gBigHóp
::
gëSize
(
±r
);

34 * 
mÆloc
 (
size_t
 
sz
) {

35 i‡(
	gsz
 >
MaxObje˘Size
) {

36  
BigHóp
::
mÆloc
 (
sz
);

41 c⁄° 
	gsizeCœss
 = 
gëSizeCœss
 (
sz
);

42 c⁄° 
size_t
 
	gmaxSz
 = 
gëCœssMaxSize
 (
sizeCœss
);

43 i‡(
	gsizeCœss
 >
NumBös
) {

44  
BigHóp
::
mÆloc
 (
maxSz
);

46 * 
	g±r
 = 
_hóp
[
sizeCœss
].
mÆloc
 (
maxSz
);

47 i‡(
	g±r
 =
NULL
) {

48  
BigHóp
::
mÆloc
 (
maxSz
);

50 
as£π
 (
gëSize
(
±r
Ë<
maxSz
);

51 
	g_cuºLive
 +
gëSize
 (
±r
);

52 i‡(
	g_cuºLive
 >
_maxLive
) {

53 
_maxLive
 = 
_cuºLive
;

54 
	g_˛óªd
 = 
Ál£
;

56  
	g±r
;

60 
‰ì
 (* 
±r
) {

62 
size_t
 
	gsz
 = 
gëSize
(
±r
);

63 i‡(
	gsz
 >
MaxObje˘Size
) {

64 
BigHóp
::
‰ì
 (
±r
);

67 
	g˛
 = 
gëSizeCœss
 (
sz
);

68 i‡(
	g˛
 >
NumBös
) {

69 
BigHóp
::
‰ì
 (
±r
);

72 i‡(
	g_cuºLive
 < 
	gsz
) {

73 
	g_cuºLive
 = 0;

75 
	g_cuºLive
 -
sz
;

77 
	g_hóp
[
˛
].
‰ì
 (
±r
);

78 
boﬁ
 
	g¸os£dThªshﬁd
 = (Ë
_maxLive
 > 
_maxFø˘i⁄
 * (Ë
_cuºLive
;

79 i‡((
	g_cuºLive
 > 
	gThªshﬁdSl›
Ë&& 
	g¸os£dThªshﬁd
 && !
	g_˛óªd
)

82 
	gi
 = 0; i < 
	gNumBös
; i++) {

83 
	g_hóp
[
i
].
˛ór
();

86 
	g_˛óªd
 = 
åue
;

87 
	g_maxLive
 = 
_cuºLive
;

91 
	g¥iv©e
:

94 
_cuºLive
;

97 
	g_maxLive
;

100 c⁄° 
	g_maxFø˘i⁄
;

103 
boﬁ
 
	g_˛óªd
;

105 
LôéeHóp
 
	g_hóp
[
NumBös
];

	@include/superblocks/addheaderheap.h

28 #i‚de‡
HOARD_ADDHEADERHEAP_H


29 
	#HOARD_ADDHEADERHEAP_H


	)

31 
	~"hó∂ayîs.h
"

33 
«me•a˚
 
	gHﬂrd
 {

39 
	gãm∂©e
 <
˛ass
 
	gSu≥rblockTy≥
,

40 
size_t
 
	gSu≥rblockSize
,

41 
˛ass
 
	gSu≥rHóp
>

42 ˛as†
	cAddHódîHóp
 {

43 
	g¥iv©e
:

45 
HL
::
ßs£π
<(((Ë
Su≥rHóp
::
Alignmít
Ë% 
Su≥rblockSize
 =0)> 
vîifySize1
;

46 
	gHL
::
ßs£π
<(((Ë
Su≥rHóp
::
Alignmít
Ë>
Su≥rblockSize
)> 
vîifySize2
;

48 
Su≥rHóp
 
	gtheHóp
;

50 
	gpublic
:

52 íum { 
Alignmít
 = 
gcd
<
Su≥rHóp
::Alignmít, (
ty≥«me
 
	gSu≥rblockTy≥
::
Hódî
)>::
vÆue
 };

54 
˛ór
() {

55 
	gtheHóp
.
˛ór
();

58 
MALLOC_FUNCTION
 
INLINE
 * 
mÆloc
 (
size_t
 
sz
) {

63 c⁄° 
size_t
 
	ghódîSize
 = (
ty≥«me
 
Su≥rblockTy≥
::
Hódî
);

64 * 
	g±r
 = 
theHóp
.
mÆloc
 (
sz
 + 
hódîSize
);

65 i‡(
	g±r
 =
NULL
) {

66  
NULL
;

68 
ty≥«me
 
	gSu≥rblockTy≥
::
Hódî
 * 
p


69 
√w
 (
±r
Ë
ty≥«me
 
Su≥rblockTy≥
::
Hódî
 (
sz
, sz);

70 
as£π
 ((
size_t
Ë(
p
 + 1Ë=(size_tË
±r
 + 
hódîSize
);

71  
	gªöãΩªt_ˇ°
<*>(
	gp
 + 1);

74 
INLINE
 
size_t
 
gëSize
 (* 
±r
) {

77 
ty≥«me
 
	gSu≥rblockTy≥
::
Hódî
 * 
p
;

78 
	gp
 = 
ªöãΩªt_ˇ°
<
ty≥«me
 
Su≥rblockTy≥
::
Hódî
 *>(
±r
);

79  (
	gp
 - 1)->
gëSize
 (
±r
);

82 
INLINE
 
‰ì
 (* 
±r
) {

84 
ty≥«me
 
	gSu≥rblockTy≥
::
Hódî
 * 
p
;

85 
	gp
 = 
ªöãΩªt_ˇ°
<
ty≥«me
 
Su≥rblockTy≥
::
Hódî
 *>(
±r
);

86 
	gtheHóp
.
‰ì
 (
ªöãΩªt_ˇ°
<*>(
p
 - 1));

	@include/superblocks/alignedsuperblockheap.h

28 #i‚de‡
HOARD_ALIGNEDSUPERBLOCKHEAP_H


29 
	#HOARD_ALIGNEDSUPERBLOCKHEAP_H


	)

31 
	~"hó∂ayîs.h
"

33 
	~"c⁄f‹m™thóp.h
"

34 
	~"fixedªque°hóp.h
"

36 
«me•a˚
 
	gHﬂrd
 {

38 
	gãm∂©e
 <
size_t
 
	gSu≥rblockSize
,

39 
˛ass
 
	gTheLockTy≥
,

40 
˛ass
 
	gMm≠Sour˚
>

41 ˛as†
	cSu≥rblockSt‹e
 {

42 
	gpublic
:

44 íum { 
Alignmít
 = 
Mm≠Sour˚
::Alignment };

46 * 
mÆloc
 (
size_t
) {

47 i‡(
	g_‰ìSu≥rblocks
.
isEm±y
()) {

49 * 
	g±r
 = 
_su≥rblockSour˚
.
mÆloc
 (
ChunksToGøb
 * 
Su≥rblockSize
);

50 i‡(!
	g±r
) {

51  
	gNULL
;

53 * 
	gp
 = (*Ë
±r
;

54 
	gi
 = 0; i < 
	gChunksToGøb
; i++) {

55 
	g_‰ìSu≥rblocks
.
ö£π
 ((
DLLi°
::
E¡ry
 *Ë
p
);

56 
	gp
 +
Su≥rblockSize
;

59  
	g_‰ìSu≥rblocks
.
gë
();

62 
‰ì
 (* 
±r
) {

63 
	g_‰ìSu≥rblocks
.
ö£π
 ((
DLLi°
::
E¡ry
 *Ë
±r
);

66 
	g¥iv©e
:

68 #i‡
deföed
(
__SVR4
)

69 íum { 
ChunksToGøb
 = 1 };

76 
	gHL
::
ßs£π
<(
Su≥rblockSize
 =65536)> 
PªvítMm≠Føgmíèti⁄
;

78 íum { 
	gChunksToGøb
 = 1 };

81 
Mm≠Sour˚
 
	g_su≥rblockSour˚
;

82 
DLLi°
 
	g_‰ìSu≥rblocks
;

89 
«me•a˚
 
	gHﬂrd
 {

91 
	gãm∂©e
 <
˛ass
 
	gTheLockTy≥
,

92 
size_t
 
	gSu≥rblockSize
,

93 
˛ass
 
	gMm≠Sour˚
>

94 
˛ass
 
	gAlig√dSu≥rblockHópHñ≥r
 :

95 
public
 
C⁄f‹m™tHóp
<
HL
::
LockedHóp
<
TheLockTy≥
,

96 
	gFixedReque°Hóp
<
	gSu≥rblockSize
,

97 
	gSu≥rblockSt‹e
<
	gSu≥rblockSize
, 
	gTheLockTy≥
, 
	gMm≠Sour˚
> > > > {};

102 
	gãm∂©e
 <
˛ass
 
	gTheLockTy≥
,

103 
size_t
 
	gSu≥rblockSize
>

104 
˛ass
 
	gAlig√dSu≥rblockHóp
 : 
public
 
Alig√dMm≠
<
Su≥rblockSize
,
	gTheLockTy≥
> {};

109 
	gãm∂©e
 <
˛ass
 
	gTheLockTy≥
,

110 
size_t
 
	gSu≥rblockSize
,

111 
˛ass
 
	gMm≠Sour˚
>

112 
˛ass
 
	gAlig√dSu≥rblockHóp
 :

113 
public
 
Alig√dSu≥rblockHópHñ≥r
<
TheLockTy≥
, 
	gSu≥rblockSize
, 
	gMm≠Sour˚
> {

115 
	gHL
::
ßs£π
<(
Alig√dSu≥rblockHópHñ≥r
<
TheLockTy≥
, 
	gSu≥rblockSize
, 
	gMm≠Sour˚
>::
Alignmít
 % 
Su≥rblockSize
 =0)> 
EnsuªPr›îAlignmít
;

	@include/superblocks/ignoreinvalidfree.h

28 #i‚de‡
HOARD_IGNOREINVALIDFREE_H


29 
	#HOARD_IGNOREINVALIDFREE_H


	)

31 
«me•a˚
 
	gHﬂrd
 {

39 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

40 ˛as†
	cIgn‹eInvÆidFªe
 : 
public
 
Su≥rHóp
 {

41 
public
:

42 
INLINE
 
‰ì
 (* 
±r
) {

43 i‡(
±r
) {

44 
ty≥«me
 
Su≥rHóp
::
Su≥rblockTy≥
 * 
s
 = Su≥rHóp::
gëSu≥rblock
 (
±r
);

45 i‡(!
	gs
 || (!s->
isVÆidSu≥rblock
())) {

49 
	gSu≥rHóp
::
‰ì
 (
±r
);

53 
INLINE
 
size_t
 
gëSize
 (* 
±r
) {

54 i‡(
	g±r
) {

55 
ty≥«me
 
	gSu≥rHóp
::
Su≥rblockTy≥
 * 
s
 = 
Su≥rHóp
::
gëSu≥rblock
 (
±r
);

56 i‡(!
	gs
 || (!s->
isVÆidSu≥rblock
())) {

59  
	gSu≥rHóp
::
gëSize
 (
±r
);

	@include/superblocks/manageonesuperblock.h

34 #i‚de‡
HOARD_MANAGEONESUPERBLOCK_H


35 
	#HOARD_MANAGEONESUPERBLOCK_H


	)

43 
«me•a˚
 
	gHﬂrd
 {

45 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

46 ˛as†
	cM™ageO√Su≥rblock
 : 
public
 
Su≥rHóp
 {

47 
public
:

49 
M™ageO√Su≥rblock
()

50 : 
_cuºít
 (
NULL
)

53 
ty≥«me
 
	tSu≥rHóp
::
	tSu≥rblockTy≥
 SuperblockType;

56 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

57 i‡(
	g_cuºít
) {

58 * 
	g±r
 = 
_cuºít
->
mÆloc
 (
sz
);

59 i‡(
	g±r
) {

60 
as£π
 (
_cuºít
->
gëSize
(
±r
Ë>
sz
);

61  
	g±r
;

65  
¶owMÆlocP©h
 (
sz
);

69 
ölöe
 
‰ì
 (* 
±r
) {

70 
Su≥rblockTy≥
 * 
	gs
 = 
Su≥rHóp
::
gëSu≥rblock
 (
±r
);

71 i‡(
	gs
 =
_cuºít
) {

72 
_cuºít
->
‰ì
 (
±r
);

75 
	gSu≥rHóp
::
‰ì
 (
±r
);

80 
Su≥rblockTy≥
 * 
gë
() {

81 i‡(
	g_cuºít
) {

82 
Su≥rblockTy≥
 * 
	gs
 = 
_cuºít
;

83 
	g_cuºít
 = 
NULL
;

84  
	gs
;

87  
	gSu≥rHóp
::
gë
();

92 
ölöe
 
put
 (
Su≥rblockTy≥
 * 
s
) {

93 i‡(!
	gs
 || (†=
_cuºít
Ë|| (!
s
->
isVÆidSu≥rblock
())) {

98 i‡(
	g_cuºít
) {

100 
	gSu≥rHóp
::
put
 (
_cuºít
);

102 
	g_cuºít
 = 
s
;

105 
	g¥iv©e
:

108 * 
¶owMÆlocP©h
 (
size_t
 
sz
) {

109 * 
±r
 = 
NULL
;

110 !
	g±r
) {

112 i‡(!
	g_cuºít
) {

113 
	g_cuºít
 = 
Su≥rHóp
::
gë
();

114 i‡(!
	g_cuºít
) {

116  
	gNULL
;

120 
	g±r
 = 
_cuºít
->
mÆloc
 (
sz
);

121 i‡(!
	g±r
) {

123 
	gSu≥rHóp
::
put
 (
_cuºít
);

124 
	g_cuºít
 = 
NULL
;

127  
	g±r
;

131 
Su≥rblockTy≥
 * 
	g_cuºít
;

	@include/superblocks/tlab.h

35 #i‚de‡
HOARD_TLAB_H


36 
	#HOARD_TLAB_H


	)

38 
	~"hó∂ayîs.h
"

40 #i‡
deföed
(
__˛™g__
)

41 #¥agm®
˛™g
 
dügno°ic
 
push


42 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wunused-variable"

45 
«me•a˚
 
	gHﬂrd
 {

47 
	gãm∂©e
 <
	gNumBös
,

48 (*
	ggëSizeCœss
Ë(
	gsize_t
),

49 
size_t
 (*
gëCœssSize
) (const ),

50 
	gL¨ge°Obje˘
,

51 
	gLoˇlHópThªshﬁd
,

52 
˛ass
 
	gSu≥rblockTy≥
,

53 
	gSu≥rblockSize
,

54 
˛ass
 
	gP¨ítHóp
>

56 ˛as†
	cThªadLoˇlAŒoˇti⁄Buf„r
 {

58 íum { 
	gDesúedAlignmít
 = 
HL
::
MÆlocInfo
::
Alignmít
 };

60 
	gpublic
:

62 íum { 
Alignmít
 = 
P¨ítHóp
::Alignment };

64 
ThªadLoˇlAŒoˇti⁄Buf„r
 (
P¨ítHóp
 * 
∑ª¡
)

65 : 
_∑ª¡Hóp
 (
∑ª¡
),

66 
_loˇlHópByãs
 (0)

68 
	gßs£π
<
	ggcd
<
	gAlignmít
, 
	gDesúedAlignmít
>::
vÆue
 =
DesúedAlignmít
> 
vîifyAlignmít
;

69 
	gßs£π
<(
	gAlignmít
 >2 * (
size_t
))> 
vîifyC™HﬁdTwoPoöãrs
;

70 
	gvîifyAlignmít
 = 
vîifyAlignmít
;

71 
	gvîifyC™HﬁdTwoPoöãrs
 = 
vîifyC™HﬁdTwoPoöãrs
;

74 ~
ThªadLoˇlAŒoˇti⁄Buf„r
() {

75 
˛ór
();

78 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

79  
gëSu≥rblock
(
±r
)->
gëSize
 (ptr);

82 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

83 i‡(
	gsz
 < 
	gAlignmít
) {

84 
	gsz
 = 
Alignmít
;

88 i‡(
	gsz
 <
L¨ge°Obje˘
) {

89 
c
 = 
gëSizeCœss
 (
sz
);

90 * 
	g±r
 = 
_loˇlHóp
(
c
).
gë
();

91 i‡(
	g±r
) {

92 
as£π
 (
_loˇlHópByãs
 >
sz
);

93 
	g_loˇlHópByãs
 -
gëCœssSize
 (
c
);

94 
as£π
 (
gëSize
(
±r
Ë>
sz
);

95 
as£π
 ((
size_t
Ë
±r
 % 
Alignmít
 == 0);

96  
	g±r
;

102 * 
	g±r
 = 
_∑ª¡Hóp
->
mÆloc
 (
sz
);

103 
as£π
 ((
size_t
Ë
±r
 % 
Alignmít
 == 0);

104  
	g±r
;

108 
ölöe
 
‰ì
 (* 
±r
) {

109 i‡(!
	g±r
) {

112 c⁄° 
Su≥rblockTy≥
 * 
	gs
 = 
gëSu≥rblock
 (
±r
);

115 i‡(
	gs
->
isVÆidSu≥rblock
()) {

117 
	g±r
 = 
s
->
n‹mÆize
 (
±r
);

118 c⁄° 
size_t
 
	gsz
 = 
s
->
gëObje˘Size
 ();

120 i‡((
	gsz
 <
L¨ge°Obje˘
Ë&& (
sz
 + 
_loˇlHópByãs
 <
LoˇlHópThªshﬁd
)) {

123 
as£π
 (
gëSize
(
±r
Ë>(
HL
::
SLLi°
::
E¡ry
 *));

124 
	gc
 = 
gëSizeCœss
 (
sz
);

126 
_loˇlHóp
(
c
).
ö£π
 ((
HL
::
SLLi°
::
E¡ry
 *Ë
±r
);

127 
	g_loˇlHópByãs
 +
gëCœssSize
(
c
);

132 
	g_∑ª¡Hóp
->
‰ì
 (
±r
);

140 
˛ór
() {

142 
	gi
 = 
NumBös
 - 1;

143 (
	g_loˇlHópByãs
 > 0Ë&& (
	gi
 >= 0)) {

144 c⁄° 
size_t
 
sz
 = 
gëCœssSize
 (
i
);

145 !
_loˇlHóp
(
i
).
isEm±y
()) {

146 
	gHL
::
SLLi°
::
E¡ry
 * 
e
 = 
_loˇlHóp
(
i
).
gë
();

147 
	g_∑ª¡Hóp
->
‰ì
 (
e
);

148 
	g_loˇlHópByãs
 -
sz
;

150 
	gi
--;

154 
ölöe
 
Su≥rblockTy≥
 * 
gëSu≥rblock
 (* 
±r
) {

155  
	gSu≥rblockTy≥
::
gëSu≥rblock
 (
±r
);

158 
	g¥iv©e
:

162 
ThªadLoˇlAŒoˇti⁄Buf„r
 (const ThreadLocalAllocationBuffer&);

163 
	gThªadLoˇlAŒoˇti⁄Buf„r
& 
	g›î©‹
=(c⁄° 
ThªadLoˇlAŒoˇti⁄Buf„r
&);

166 
	g_∑d
[128 / ()];

169 
P¨ítHóp
 * 
	g_∑ª¡Hóp
;

172 
size_t
 
	g_loˇlHópByãs
;

175 
	gAºay
<
	gNumBös
, 
	gHL
::
SLLi°
> 
_loˇlHóp
;

180 #i‡
deföed
(
__˛™g__
)

181 #¥agm®
˛™g
 
dügno°ic
 
p›


	@include/util/alignedmmap.h

34 #i‚de‡
HOARD_ALIGNEDMMAP_H


35 
	#HOARD_ALIGNEDMMAP_H


	)

37 
	~"hó∂ayîs.h
"

38 
	~"exa˘ly⁄ehóp.h
"

39 
	~"mm≠Æloc.h
"

41 
usög
 
«me•a˚
 
	g°d
;

42 
usög
 
«me•a˚
 
	gHL
;

44 
«me•a˚
 
	gHﬂrd
 {

52 
	gãm∂©e
 <
size_t
 
	gAlignmít
,

53 
˛ass
 
	gLockTy≥
>

54 
˛ass
 
	gAlig√dMm≠
;

56 
	gãm∂©e
 <
size_t
 
	gAlignmít_
>

57 ˛as†
	cAlig√dMm≠In°™˚
 {

58 
	gpublic
:

60 
Alig√dMm≠In°™˚
()

61 : 
MyM≠
 (16381)

64 íum { 
Alignmít
 = 
Alignmít_
 };

66 
˛ór
() {

70 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

73 
	gsz
 = 
HL
::
Æign
<HL::
Mm≠Wøµî
::
Size
>(
sz
);

76 i‡((
	gsize_t
Ë
	gHL
::
Mm≠Wøµî
::
Alignmít
 % (
size_t
) Alignment == 0) {

77 * 
±r
 = 
HL
::
Mm≠Wøµî
::
m≠
 (
sz
);

78 
	gMyM≠
.
£t
 (
±r
, 
sz
);

79 
as£π
 ((
size_t
Ë
±r
 % 
Alignmít
 == 0);

80  
	g±r
;

83 * 
	g±r
 = 
NULL
;

88 
	g±r
 = 
HL
::
Mm≠Wøµî
::
m≠
 (
sz
);

90 i‡((
	gsize_t
Ë
	g±r
 =
HL
::
Æign
<
Alignmít
>((
size_t
Ë
±r
)) {

92 
MyM≠
.
£t
 (
±r
, 
sz
);

93  
	g±r
;

97 
	gHL
::
Mm≠Wøµî
::
unm≠
 ((*Ë
±r
, 
sz
);

99  
¶owM≠
 (
sz
);

102 
ölöe
 
‰ì
 (* 
±r
) {

107 
size_t
 
	gªque°edSize
 = 
gëSize
 (
±r
);

109 i‡(
	gªque°edSize
 == 0) {

113 
	gHL
::
Mm≠Wøµî
::
unm≠
 (
±r
, 
ªque°edSize
);

116 
	gMyM≠
.
îa£
 (
±r
);

119 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

120  
	gMyM≠
.
gë
 (
±r
);

124 
	g¥iv©e
:

126 * 
¶owM≠
 (
size_t
 
sz
) {

132 * 
±r
 = 
ªöãΩªt_ˇ°
<*>(
HL
::
Mm≠Wøµî
::
m≠
 (
sz
 + 
Alignmít
));

134 i‡(
	g±r
 =
NULL
) {

135  
NULL
;

138 * 
	g√w±r
 = (*Ë
HL
::
Æign
<
Alignmít
>((
size_t
Ë
±r
);

142 
size_t
 
	g¥ﬁog
 = (size_tË
√w±r
 - (size_tË
±r
;

144 i‡(
	g¥ﬁog
 > 0) {

146 
	gHL
::
Mm≠Wøµî
::
unm≠
 (
±r
, 
¥ﬁog
);

150 
size_t
 
	gïûog
 = 
Alignmít
 - 
¥ﬁog
;

151 
	gHL
::
Mm≠Wøµî
::
unm≠
 ((*Ë
√w±r
 + 
sz
, 
ïûog
);

155 
	gMyM≠
.
£t
 (
√w±r
, 
sz
);

156  
	g√w±r
;

163 * 
	tkeyTy≥
;

166 
size_t
 
	tvÆTy≥
;

170 
˛ass
 
	gSour˚Hóp
 : 
public
 
HL
::
Fªñi°Hóp
<
BumpAŒoc
<65536, 
	gMm≠AŒoc
> > { };

173 
	gMyHashM≠
<
	tkeyTy≥
, 
	tvÆTy≥
, 
	tSour˚Hóp
> 
	tm≠Ty≥
;

176 
m≠Ty≥
 
	gMyM≠
;

187 
	gãm∂©e
 <
size_t
 
	gAlignmít_
,

188 
˛ass
 
	gLockTy≥
>

189 
˛ass
 
	gAlig√dMm≠
 :

190 
public
 
Exa˘lyO√Hóp
<
LockedHóp
<
LockTy≥
, 
	gAlig√dMm≠In°™˚
<
	gAlignmít_
> > > {};

	@include/util/array.h

28 #i‚de‡
HOARD_ARRAY_H


29 
	#HOARD_ARRAY_H


	)

31 
	~<ˇs£π
>

33 
«me•a˚
 
	gHﬂrd
 {

35 
	gãm∂©e
 <
	gN
, 
ty≥«me
 
	gT
>

36 ˛as†
	cAºay
 {

37 
	gpublic
:

39 
ölöe
 
T
& 
›î©‹
()(
ödex
) {

40 
as£π
 (
ödex
 < 
N
);

41  
	g_ôem
[
ödex
];

44 
ölöe
 c⁄° 
	gT
& 
›î©‹
()(
	gödex
) const {

45 
as£π
 (
ödex
 < 
N
);

46  
	g_ôem
[
ödex
];

49 
	g¥iv©e
:

51 
T
 
_ôem
[
N
];

	@include/util/bumpalloc.h

28 #i‚de‡
HOARD_BUMPALLOC_H


29 
	#HOARD_BUMPALLOC_H


	)

37 
	~"mÆlocöfo.h
"

40 
«me•a˚
 
	gHﬂrd
 {

42 
	gãm∂©e
 <
	gChunkSize
,

43 
˛ass
 
	gSu≥rHóp
>

44 ˛as†
	cBumpAŒoc
 : 
public
 
Su≥rHóp
 {

45 
public
:

47 íum { 
Alignmít
 = 
HL
::
MÆlocInfo
::Alignment };

49 
BumpAŒoc
 ()

50 : 
_bump
 (
NULL
),

51 
_ªmaöög
 (0)

54 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

55 i‡(
	gsz
 < 
	gHL
::
MÆlocInfo
::
MöSize
) {

56 
sz
 = 
HL
::
MÆlocInfo
::
MöSize
;

58 
	gsz
 = 
HL
::
Æign
<HL::
MÆlocInfo
::
Alignmít
>(
sz
);

61 i‡(
	g_ªmaöög
 < 
	gsz
) {

62 
ªfûl
(
sz
);

64 i‡(
	g_bump
) {

65 * 
	gﬁd
 = 
_bump
;

66 
	g_bump
 +
sz
;

67 
	g_ªmaöög
 -
sz
;

68 
as£π
 ((
size_t
Ë
ﬁd
 % 
Alignmít
 == 0);

69  
	gﬁd
;

72  
	gNULL
;

77 
ölöe
 
‰ì
 (*) {}

79 
	g¥iv©e
:

82 * 
_bump
;

85 
size_t
 
	g_ªmaöög
;

88 
ªfûl
 (
size_t
 
sz
) {

90 i‡(
	gsz
 < 
	gChunkSize
) {

91 
	gsz
 = 
ChunkSize
;

93 
	g_bump
 = (*Ë
Su≥rHóp
::
mÆloc
 (
sz
);

94 
as£π
 ((
size_t
Ë
_bump
 % 
Alignmít
 == 0);

95 i‡(
	g_bump
) {

96 
	g_ªmaöög
 = 
sz
;

98 
	g_ªmaöög
 = 0;

	@include/util/check.h

28 #i‚de‡
HOARD_CHECK_H


29 
	#HOARD_CHECK_H


	)

53 
«me•a˚
 
	gHﬂrd
 {

55 
	gãm∂©e
 <
˛ass
 
	gTYPE
, cœs†
	gCHECK
>

56 ˛as†
	cCheck
 {

57 
	gpublic
:

58 #i‚de‡
NDEBUG


59 
Check
 (
TYPE
 * 
t
)

60 : 
_obje˘
 (
t
)

62 
Check
 (
TYPE
 *)

65 #i‚de‡
NDEBUG


66 
CHECK
::
¥ec⁄dôi⁄
 (
_obje˘
);

70 ~
Check
() {

71 #i‚de‡
NDEBUG


72 
	gCHECK
::
po°c⁄dôi⁄
 (
_obje˘
);

76 
	g¥iv©e
:

77 
Check
 (const Check&);

78 
	gCheck
& 
	g›î©‹
=(c⁄° 
Check
&);

80 #i‚de‡
NDEBUG


81 
TYPE
 * 
	g_obje˘
;

	@include/util/checkpoweroftwo.h

12 #i‚de‡
DH_CHECKPOWEROFTWO_H


13 
	#DH_CHECKPOWEROFTWO_H


	)

15 
	~"hó∂ayîs.h
"

24 
	gãm∂©e
 <
	gNumbî
>

25 ˛as†
	cIsPowîOfTwo
 {

26 
	mpublic
:

27 íum { 
VALUE
 = (!(
Numbî
 & (Number - 1)) && Number) };

36 
	gãm∂©e
 <
	gV
>

37 ˛as†
	cCheckPowîOfTwo
 {

38 íum { 
	mVîify
 = 
HL
::
ßs£π
<
IsPowîOfTwo
<
V
>::
VALUE
>::VALUE };

	@include/util/conformantheap.h

28 #i‚de‡
HOARD_CONFORMANTHEAP_H


29 
	#HOARD_CONFORMANTHEAP_H


	)

31 
«me•a˚
 
	gHﬂrd
 {

35 
	gãm∂©e
 <
˛ass
 
	gP¨ít
>

36 ˛as†
	cC⁄f‹m™tHóp
 : 
public
 
P¨ít
 {

37 
public
:

38 
P¨ít
 
	tSu≥rHóp
;

	@include/util/dynamichashtable.cpp

1 
	~"dy«michashèbÀ.h
"

3 
	~<io°ªam
>

4 
	~<s°ªam
>

6 
usög
 
«me•a˚
 
	g°d
;

9 
usög
 
«me•a˚
 
	gHL
;

11 ˛as†
	cIãm
 {

12 
	mpublic
:

14 
	$Iãm
()

15 : 
	$_hash
 (0)

18 
	$Iãm
 (
vÆue
,

19 
°rög
 
s
)

20 : 
	`_hash
 (
vÆue
),

21 
	$_°r
 (
s
)

22 {
	}
}

24 
	$hashCode
() const {

25  
_hash
;

26 
	}
}

28 c⁄° 
	g°rög
& 
	$gëSåög
() const {

29  
_°r
;

30 
	}
}

32 
	g¥iv©e
:

33 
_hash
;

34 
°rög
 
	g_°r
;

38 
	$maö
()

40 c⁄° 
NUM_ITERATIONS
 = 100000;

41 
Dy«micHashTabÀ
<
Iãm
, 2, 128> 
dh
;

43 
i
 = 0; i < 
NUM_ITERATIONS
; i++) {

44 
°rög°ªam
 
ss
;

45 
ss
 << "foo:" << 
i
;

46 
dh
.
	`ö£π
 (
	`Iãm
 (
i
, 
ss
.
	`°r
()));

49 
Iãm
 
k
;

50 
i
 = 0; i < 100000; i++) {

51 
boﬁ
 
r0
 = 
dh
.
	`îa£
 (
	`ønd
(Ë% 
NUM_ITERATIONS
);

54 
i
 = 0; i < 
NUM_ITERATIONS
-1; i++) {

55 
boﬁ
 
r
 = 
dh
.
	`gë
 (
i
, 
k
);

56 
cout
 << "∏" << 
r
 << 
ídl
;

62 
	}
}

	@include/util/dynamichashtable.h

10 #i‚de‡
DYNAMICHASHTABLE_H


11 
	#DYNAMICHASHTABLE_H


	)

13 
	~<√w
>

14 
	~<°döt.h
>

16 
	~"hó∂ayîs.h
"

17 
	~"checkpowîo·wo.h
"

29 
	gãm∂©e
 <
˛ass
 
	gVALUE_TYPE
,

30 
size_t
 
	gLOAD_FACTOR_RECIPROCAL
 = 2,

31 
size_t
 
	gINIT_SIZE
 = 4096,

32 
˛ass
 
	gSour˚Hóp
 = 
HL
::
MÆlocHóp
,

33 
˛ass
 
	gLockTy≥
 = 
HL
::
PosixLockTy≥
>

35 ˛as†
	cDy«micHashTabÀ
 {

39 íum { 
Ex∑nsi⁄Fa˘‹
 = 2 };

41 
	gpublic
:

43 
	$Dy«micHashTabÀ
() :

44 
	`_size
 (
INIT_SIZE
),

45 
	`_íåõs
 (
	`ÆlocTabÀ
 (
INIT_SIZE
)),

46 
	$_numEÀmíts
 (0)

48 
HL
::
ßs£π
<(
LOAD_FACTOR_RECIPROCAL
 > 1)> 
vîify0
;

49 
CheckPowîOfTwo
<
Ex∑nsi⁄Fa˘‹
> 
vîify1
;

50 
CheckPowîOfTwo
<
INIT_SIZE
> 
vîify2
;

51 
vîify0
 = verify0;

52 
vîify1
 = verify1;

53 
vîify2
 = verify2;

54 
	}
}

56 ~
	$Dy«micHashTabÀ
() {

57 
Gu¨d
<
LockTy≥
> 
	`l
 (
_lock
);

58 
_sh
.
	`‰ì
 (
_íåõs
);

59 
	}
}

62 
boﬁ
 
	$gë
 (
k
, 
VALUE_TYPE
& 
vÆue
) {

63 
Gu¨d
<
LockTy≥
> 
	`l
 (
_lock
);

64  
	`föd
 (
k
, 
vÆue
);

65 
	}
}

68 
	$ö£π
 (c⁄° 
VALUE_TYPE
& 
s
)

70 
Gu¨d
<
LockTy≥
> 
	`l
 (
_lock
);

74 i‡((
_numEÀmíts
+1Ë> 
_size
 / 
LOAD_FACTOR_RECIPROCAL
) {

75 
	`grow
();

77 
	`ö£πO√
 (
s
);

78 
_numEÀmíts
++;

79 
	}
}

83 
boﬁ
 
	$îa£
 (
key
)

85 
Gu¨d
<
LockTy≥
> 
	`l
 (
_lock
);

86 
ödex
;

87 
boﬁ
 
r
 = 
	`födIndex
 (
key
, 
ödex
);

88 i‡(
r
) {

89 
_íåõs
[
ödex
].
	`îa£
();

90 
_numEÀmíts
--;

91 i‡(
_numEÀmíts
 < 
_size
 / (2 * 
Ex∑nsi⁄Fa˘‹
 * 
LOAD_FACTOR_RECIPROCAL
)) {

92 i‡(
_numEÀmíts
 >2 * 
INIT_SIZE
) {

94 
	`shrök
();

98  
r
;

99 
	}
}

101 
	g¥iv©e
:

103 
	$ö£πO√
 (c⁄° 
VALUE_TYPE
& 
s
)

108 
i
 = 
s
.
	`hashCode
(Ë& (
_size
 - 1);

109 
åue
) {

110 i‡(!
_íåõs
[
i
].
	`isVÆid
()) {

111 
_íåõs
[
i
].
	`put
 (
s
);

114 
i
 = (i+1Ë& (
_size
 - 1);

116 
	}
}

118 
	$grow
()

121 
size_t
 
ﬁd_size
 = 
_size
;

122 
St‹edObje˘
 * 
ﬁd_íåõs
 = 
_íåõs
;

123 
ﬁd_ñt_cou¡
 = 
_numEÀmíts
;

126 
_size
 = _sizê* 
Ex∑nsi⁄Fa˘‹
;

127 
_íåõs
 = 
	`ÆlocTabÀ
 (
_size
);

131 
buf
[255];

132 
	`•rötf
 (
buf
, "GROWING, wa†%d/%d,Çow %d/%d\n", 
ﬁd_ñt_cou¡
, 
ﬁd_size
, 
_numEÀmíts
, 
_size
);

133 
	`Ârötf
 (
°dîr
, 
buf
);

137 i‡(
_íåõs
 =
NULL
) {

140 
	`ab‹t
();

144 
˘
 = 0;

145 
i
 = 0; i < 
ﬁd_size
; i++) {

146 
VALUE_TYPE
 
v
;

147 
boﬁ
 
isVÆid
 = 
ﬁd_íåõs
[
i
].
	`gë
 (
v
);

148 i‡(
isVÆid
) {

149 
˘
++;

150 
	`ö£πO√
 (
v
);

154 
	`as£π
 (
˘
 =
_numEÀmíts
);

155 
_sh
.
	`‰ì
 (
ﬁd_íåõs
);

156 
	}
}

158 
	$shrök
()

161 
size_t
 
ﬁd_size
 = 
_size
;

162 
St‹edObje˘
 * 
ﬁd_íåõs
 = 
_íåõs
;

163 
ﬁd_ñt_cou¡
 = 
_numEÀmíts
;

166 
_size
 = _sizê/ 
Ex∑nsi⁄Fa˘‹
;

167 
_íåõs
 = 
	`ÆlocTabÀ
 (
_size
);

171 
buf
[255];

172 
	`•rötf
 (
buf
, "SHRINKING, wa†%d/%d,Çow %d/%d\n", 
ﬁd_ñt_cou¡
, 
ﬁd_size
, 
_numEÀmíts
, 
_size
);

173 
	`Ârötf
 (
°dîr
, 
buf
);

178 i‡(
_íåõs
 =
NULL
) {

181 
	`ab‹t
();

185 
˘
 = 0;

186 
i
 = 0; i < 
ﬁd_size
; i++) {

187 
VALUE_TYPE
 
v
;

188 
boﬁ
 
isVÆid
 = 
ﬁd_íåõs
[
i
].
	`gë
 (
v
);

189 i‡(
isVÆid
) {

190 
˘
++;

191 
	`ö£πO√
 (
v
);

195 
	`as£π
 (
˘
 =
_numEÀmíts
);

196 
_sh
.
	`‰ì
 (
ﬁd_íåõs
);

197 
	}
}

200 
boﬁ
 
	$föd
 (
key
, 
VALUE_TYPE
& 
vÆue
)

202 
ödex
;

203 
boﬁ
 
r
 = 
	`födIndex
 (
key
, 
ödex
);

204 i‡(
r
) {

205 
_íåõs
[
ödex
].
	`gë
 (
vÆue
);

207  
r
;

208 
	}
}

210 
boﬁ
 
	$födIndex
 (
key
, & 
ödex
) {

211 
i
 = 
key
 & (
_size
 - 1);

212 
åue
) {

213 
VALUE_TYPE
 
v
;

214 
boﬁ
 
isVÆid
 = 
_íåõs
[
i
].
	`gë
 (
v
);

215 i‡(!
isVÆid
) {

216  
Ál£
;

219 i‡(
v
.
	`hashCode
(Ë=
key
) {

220 
ödex
 = 
i
;

221  
åue
;

223 
i
 = (i+1Ë& (
_size
 - 1);

225 
	}
}

227 ˛as†
	cSt‹edObje˘
 {

228 
	g¥iv©e
:

229 íum { 
EMPTY
, 
	gDELETED
, 
	gOCCUPIED
 } 
	tSètus
;

230 
	gpublic
:

231 
St‹edObje˘
()

232 : 
_°©us
 (
EMPTY
)

234 
boﬁ
 
isVÆid
() const {

235  (
_°©us
 =
OCCUPIED
);

237 
îa£
() {

238 
	g_°©us
 = 
DELETED
;

240 
boﬁ
 
gë
 (
VALUE_TYPE
& 
v
) const {

241 i‡(
	g_°©us
 !
OCCUPIED
) {

242  
Ál£
;

244 
	gv
 = 
_vÆue
;

245  
	gåue
;

247 
put
 (c⁄° 
VALUE_TYPE
& 
v
) {

248 
	g_vÆue
 = 
v
;

249 
	g_°©us
 = 
OCCUPIED
;

252 
	g¥iv©e
:

254 
Sètus
 
_°©us
;

257 
VALUE_TYPE
 
	g_vÆue
;

261 
St‹edObje˘
 * 
	$ÆlocTabÀ
 (
nE…s
)

263 * 
±r
 =

264 
_sh
.
	`mÆloc
 (
nE…s
 * (
St‹edObje˘
));

265  
	`√w
 (
±r
Ë
St‹edObje˘
[
nE…s
];

266 
	}
}

270 
LockTy≥
 
	g_lock
;

273 
Sour˚Hóp
 
	g_sh
;

276 
size_t
 
	g_size
;

279 
St‹edObje˘
 * 
	g_íåõs
;

282 
size_t
 
	g_numEÀmíts
;

	@include/util/exactlyone.h

1 #i‚de‡
HOARD_EXACTLYONE_H


2 
	#HOARD_EXACTLYONE_H


	)

35 
«me•a˚
 
	gHﬂrd
 {

37 
	gãm∂©e
 <
˛ass
 
	gCLASS
>

38 ˛as†
	cExa˘lyO√
 {

39 
	gpublic
:

41 
vútuÆ
 ~
Exa˘lyO√
() {}

43 
ölöe
 
CLASS
& 
›î©‹
() () {

45 
buf
[((
CLASS
) + () - 1) / ()];

46 
CLASS
 * 
	gtheO√TrueIn°™˚På
 = 
√w
 (
buf
) CLASS;

47  *
	gtheO√TrueIn°™˚På
;

	@include/util/exactlyoneheap.h

28 #i‚de‡
HL_EXACTLYONEHEAP_H


29 
	#HL_EXACTLYONEHEAP_H


	)

31 
	~"exa˘ly⁄e.h
"

33 
«me•a˚
 
	gHﬂrd
 {

35 
	gãm∂©e
 <
˛ass
 
	gHóp
>

36 
˛ass
 
	gExa˘lyO√Hóp
 : 
public
 
Hﬂrd
::
Exa˘lyO√
<
Hóp
> {

37 
public
:

39 íum { 
Alignmít
 = 
Hóp
::Alignment };

41 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

42  (*
	gthis
)().
mÆloc
 (
sz
);

44 
ölöe
 
‰ì
 (* 
±r
) {

45 (*
	gthis
)().
‰ì
 (
±r
);

47 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

48  (*
	gthis
)().
gëSize
 (
±r
);

50 
ölöe
 
˛ór
() {

51 (*
	gthis
)().
˛ór
();

	@include/util/fixedrequestheap.h

28 #i‚de‡
HOARD_FIXEDREQUESTHEAP_H


29 
	#HOARD_FIXEDREQUESTHEAP_H


	)

36 
«me•a˚
 
	gHﬂrd
 {

38 
	gãm∂©e
 <
size_t
 
	gReque°Size
,

39 
˛ass
 
	gSu≥rHóp
>

40 ˛as†
	cFixedReque°Hóp
 : 
public
 
Su≥rHóp
 {

41 
public
:

42 
ölöe
 * 
mÆloc
 (
size_t
) {

43  
Su≥rHóp
::
mÆloc
 (
Reque°Size
);

45 
ölöe
 
size_t
 
gëSize
 (*) {

46  
	gReque°Size
;

	@include/util/lockmallocheap.h

29 #i‚de‡
HOARD_LOCKMALLOCHEAP_H


30 
	#HOARD_LOCKMALLOCHEAP_H


	)

36 
«me•a˚
 
	gHﬂrd
 {

38 
	gãm∂©e
 <
ty≥«me
 
	gHóp
>

39 ˛as†
	cLockMÆlocHóp
 : 
public
 
Hóp
 {

40 
public
:

41 
MALLOC_FUNCTION
 
INLINE
 * 
mÆloc
 (
size_t
 
sz
) {

42 
HL
::
Gu¨d
<
Hóp
> 
l
 (*
this
);

43  
	gHóp
::
mÆloc
 (
sz
);

	@include/util/mmapalloc.h

28 #i‚de‡
HOARD_MMAPALLOC_H


29 
	#HOARD_MMAPALLOC_H


	)

31 
	~"hó∂ayîs.h
"

40 
«me•a˚
 
	gHﬂrd
 {

42 ˛as†
	cMm≠AŒoc
 {

43 
	gpublic
:

45 íum { 
Alignmít
 = 
HL
::
Mm≠Wøµî
::Alignment };

47 * 
mÆloc
 (
size_t
 
sz
) {

48 * 
	g±r
 = 
HL
::
Mm≠Wøµî
::
m≠
 (
sz
);

49  
	g±r
;

	@include/util/releaseheap.h

28 #i‚de‡
HOARD_RELEASEHEAP_H


29 
	#HOARD_RELEASEHEAP_H


	)

31 #i‡
deföed
(
_WIN32
)

32 
	~<wödows.h
>

35 
	~<sys/ty≥s.h
>

36 
	~<sys/°©.h
>

37 
	~<f˙é.h
>

38 
	~<uni°d.h
>

39 
	~<sys/mm™.h
>

42 
	~"hó∂ayîs.h
"

45 
«me•a˚
 
	gHﬂrd
 {

47 
	gãm∂©e
 <
˛ass
 
	gSu≥rHóp
>

48 ˛as†
	cRñó£Hóp
 : 
public
 
Su≥rHóp
 {

49 
public
:

51 íum { 
Alignmít
 = 
Su≥rHóp
::Alignment };

53 
Rñó£Hóp
() {

57 
	gßs£π
<(
	gAlignmít
 % 4096 =0)> 
Obje˘sMu°BePageAlig√d
;

60 
ölöe
 
‰ì
 (* 
±r
) {

62 
	gMm≠Wøµî
::
ªÀa£
 (
±r
, 
Su≥rHóp
::
gëSize
(ptr));

64 
	gSu≥rHóp
::
‰ì
 (
±r
);

	@include/util/threadpoolheap.h

28 #i‚de‡
HOARD_THREADPOOLHEAP_H


29 
	#HOARD_THREADPOOLHEAP_H


	)

31 
	~<ˇs£π
>

33 
	~"hó∂ayîs.h
"

34 
	~"¨øy.h
"

37 
«me•a˚
 
	gHﬂrd
 {

39 
	gãm∂©e
 <
	gNumThªads
,

40 
	gNumHóps
,

41 
˛ass
 
	gPîThªadHóp_
>

42 ˛as†
	cThªadPoﬁHóp
 : 
public
 
PîThªadHóp_
 {

43 
public
:

45 
PîThªadHóp_
 
	tPîThªadHóp
;

47 íum { 
	gMaxThªads
 = 
NumThªads
 };

48 íum { 
	gNumThªadsMask
 = 
NumThªads
 - 1};

49 íum { 
	gNumHópsMask
 = 
NumHóps
 - 1};

51 
	gHL
::
ßs£π
<((
NumHóps
 & 
NumHópsMask
Ë=0)> 
vîifyPowîOfTwoHóps
;

52 
	gHL
::
ßs£π
<((
NumThªads
 & 
NumThªadsMask
Ë=0)> 
vîifyPowîOfTwoThªads
;

54 íum { 
	gMaxHóps
 = 
NumHóps
 };

56 
ThªadPoﬁHóp
 ()

59 
	gj
 = 0;

60 
	gi
 = 0; i < 
	gNumThªads
; i++) {

61 
£tTidM≠
(
i
, 
j
 % 
NumHóps
);

62 
	gj
++;

66 
ölöe
 
	gPîThªadHóp
& 
gëHóp
 () {

67 
	gtid
 = 
HL
::
CPUInfo
::
gëThªadId
();

68 
	ghó≤o
 = 
_tidM≠
(
tid
 & 
NumThªadsMask
);

69  
_hóp
(
hó≤o
);

72 
ölöe
 * 
mÆloc
 (
size_t
 
sz
) {

73  
gëHóp
().
mÆloc
 (
sz
);

76 
ölöe
 
‰ì
 (* 
±r
) {

77 
gëHóp
().
‰ì
 (
±r
);

80 
ölöe
 
˛ór
 () {

81 
gëHóp
().
˛ór
();

84 
ölöe
 
size_t
 
gëSize
 (* 
±r
) {

85  
	gPîThªadHóp
::
gëSize
 (
±r
);

88 
£tTidM≠
 (
ödex
, 
vÆue
) {

89 
as£π
 ((
vÆue
 >0Ë&& (vÆuê< 
MaxHóps
));

90 
_tidM≠
(
ödex
Ë
vÆue
;

93 
gëTidM≠
 (
ödex
) const {

94  
_tidM≠
(
ödex
);

97 
£tInu£m≠
 (
ödex
, 
vÆue
) {

98 
_öU£M≠
(
ödex
Ë
vÆue
;

101 
gëInu£m≠
 (
ödex
) const {

102  
_öU£M≠
(
ödex
);

106 
	g¥iv©e
:

109 
Aºay
<
MaxThªads
, > 
	g_tidM≠
;

112 
	gAºay
<
	gMaxHóps
, > 
	g_öU£M≠
;

115 
	gAºay
<
	gMaxHóps
, 
	gPîThªadHóp
> 
	g_hóp
;

	@source/libhoard.cpp

33 
	~"hó∂ayîs.h
"

34 
usög
 
«me•a˚
 
	gHL
;

36 
	~<√w
>

42 #unde‡
__GXX_WEAK__


44 #i‡
deföed
(
_WIN32
)

45 
	#WIN32_LEAN_AND_MEAN


	)

48 #¥agm®
ölöe_dïth
(255)

51 
	#ölöe
 
__f‹˚ölöe


	)

52 #¥agm®
w¨nög
(
dißbÀ
:4273)

53 #¥agm®
w¨nög
(
dißbÀ
: 4098)

54 #¥agm®
w¨nög
(
dißbÀ
: 4355)

55 #¥agm®
w¨nög
(
dißbÀ
: 4074)

56 #¥agm®
w¨nög
(
dißbÀ
: 6326)

60 #i‡
HOARD_NO_LOCK_OPT


62 vﬁ©ûê
boﬁ
 
	g™yThªadCª©ed
 = 
åue
;

65 vﬁ©ûê
boﬁ
 
	g™yThªadCª©ed
 = 
Ál£
;

68 
«me•a˚
 
	gHﬂrd
 {

79 #i‡
HL_EXECUTABLE_HEAP


80 
	#HOARD_MMAP_PROTECTION_MASK
 (
PROT_READ
 | 
PROT_WRITE
 | 
PROT_EXEC
)

	)

82 
	#HOARD_MMAP_PROTECTION_MASK
 (
PROT_READ
 | 
PROT_WRITE
)

	)

87 
	~"hﬂrdéab.h
"

94 
usög
 
«me•a˚
 
	gHﬂrd
;

98 
HﬂrdHópTy≥
 * 
	$gëMaöHﬂrdHóp
 () {

103 
thBuf
[(
HﬂrdHópTy≥
) / () + 1];

106 
HﬂrdHópTy≥
 * 
th
 = 
	`√w
 (
thBuf
) HoardHeapType;

107  
th
;

108 
	}
}

110 
TheCu°omHópTy≥
 * 
gëCu°omHóp
();

112 íum { 
	mMAX_LOCAL_BUFFER_SIZE
 = 256 * 131072 };

113 
	göôBuf„r
[
MAX_LOCAL_BUFFER_SIZE
];

114 * 
	göôBuf„rPå
 = 
öôBuf„r
;

116 
boﬁ
 
isCu°omHópInôülized
();

120 * 
xxmÆloc
 (
size_t
 
sz
) {

121 i‡(!
isCu°omHópInôülized
()) {

124 * 
±r
 = 
öôBuf„rPå
;

125 
öôBuf„rPå
 +
sz
;

126 i‡(
öôBuf„rPå
 > 
öôBuf„r
 + 
MAX_LOCAL_BUFFER_SIZE
) {

127 
ab‹t
();

129  
±r
;

131 * 
±r
 = 
gëCu°omHóp
()->
mÆloc
 (
sz
);

132  
±r
;

135 
xx‰ì
 (* 
±r
) {

136 
gëCu°omHóp
()->
‰ì
 (
±r
);

139 
size_t
 
xxmÆloc_ußbÀ_size
 (* 
±r
) {

140  
gëCu°omHóp
()->
gëSize
 (
±r
);

143 
xxmÆloc_lock
() {

147 
xxmÆloc_u∆ock
() {

	@source/mactls.cpp

25 #i‡!
deföed
(
__APPLE__
)

29 
	~<dlf˙.h
>

30 
	~<±hªad.h
>

31 
	~<utûôy
>

33 
	~"Hóp-Layîs/hó∂ayîs.h
"

34 
	~"hﬂrd/hﬂrdéab.h
"

36 
Hﬂrd
::
HﬂrdHópTy≥
 * 
gëMaöHﬂrdHóp
();

38 
±hªad_key_t
 
	gtheHópKey
;

39 
±hªad_⁄˚_t
 
	gkey_⁄˚
 = 
PTHREAD_ONCE_INIT
;

44 
	$dñëeTh©Hóp
(* 
p
) {

45 
ªöãΩªt_ˇ°
<
TheCu°omHópTy≥
 *>(
p
)->
	`˛ór
();

46 
	`gëMaöHﬂrdHóp
()->
	`‰ì
(
p
);

49 
	`gëMaöHﬂrdHóp
()->
	`ªÀa£Hóp
();

50 
	}
}

52 
	$make_hóp_key
() {

53 i‡(
	`±hªad_key_¸óã
(&
theHópKey
, 
dñëeTh©Hóp
) != 0) {

56 
	}
}

58 
boﬁ
 
	göôülizedTSD
 = 
Ál£
;

60 
boﬁ
 
	$öôTSD
() {

61 i‡(!
öôülizedTSD
) {

63 
	`±hªad_⁄˚
(&
key_⁄˚
, 
make_hóp_key
);

64 
öôülizedTSD
 = 
åue
;

66  
åue
;

67 
	}
}

69 
boﬁ
 
	$isCu°omHópInôülized
() {

70  
öôülizedTSD
;

71 
	}
}

73 
TheCu°omHópTy≥
 * 
	$öôülizeCu°omHóp
() {

74 
TheCu°omHópTy≥
 * 
hóp
 =

75 
ªöãΩªt_ˇ°
<
TheCu°omHópTy≥
 *>(
	`±hªad_gë•ecific
(
theHópKey
));

76 i‡(
hóp
 =
NULL
) {

79 
size_t
 
sz
 = (
TheCu°omHópTy≥
);

80 * 
mh
 = 
ªöãΩªt_ˇ°
<*>(
	`gëMaöHﬂrdHóp
()->
	`mÆloc
(
sz
));

81 
hóp
 = 
	`√w
 (
mh
Ë
	`TheCu°omHópTy≥
(
	`gëMaöHﬂrdHóp
());

83 
	`±hªad_£t•ecific
(
theHópKey
, 
hóp
);

85  
hóp
;

86 
	}
}

88 
TheCu°omHópTy≥
 * 
	$gëCu°omHóp
() {

89 
	`öôTSD
();

91 
TheCu°omHópTy≥
 * 
hóp
 =

92 
ªöãΩªt_ˇ°
<
TheCu°omHópTy≥
 *>(
	`±hªad_gë•ecific
(
theHópKey
));

93 i‡(
hóp
 =
NULL
) {

94 
hóp
 = 
	`öôülizeCu°omHóp
();

96  
hóp
;

97 
	}
}

106 * (*
	tthªadFun˘i⁄Ty≥
)(* 
	t¨g
);

110 
	$exôRoutöe
() {

111 
TheCu°omHópTy≥
 * 
hóp
 = 
	`gëCu°omHóp
();

114 
hóp
->
	`˛ór
();

117 
	`gëMaöHﬂrdHóp
()->
	`ªÀa£Hóp
();

118 
	}
}

121 
ölöe
 * 
°¨tMeUp
(* 
a
) {

124 
gëCu°omHóp
();

125 
gëMaöHﬂrdHóp
()->
födUnu£dHóp
();

128 
∑ú
<
thªadFun˘i⁄Ty≥
, *> * 
z


129 
ªöãΩªt_ˇ°
<
∑ú
<
thªadFun˘i⁄Ty≥
, *> *>(
a
);

131 
thªadFun˘i⁄Ty≥
 
fun
 = 
z
->
fú°
;

132 * 
¨g
 = 
z
->
£c⁄d
;

135 * 
ªsu…
 = (*
fun
)(
¨g
);

138 
exôRoutöe
();

139 
gëCu°omHóp
()->
‰ì
(
a
);

140  
ªsu…
;

145 vﬁ©ûê
boﬁ
 
™yThªadCª©ed
;

154 "C" 
	$xx±hªad_exô
(* 
vÆue_±r
) {

156 
	`exôRoutöe
();

157 
	`±hªad_exô
(
vÆue_±r
);

158 
	}
}

160 "C" 
xx±hªad_¸óã
(
±hªad_t
 *
thªad
,

161 c⁄° 
±hªad_©å_t
 *
©å
,

162 * (*
°¨t_routöe
)(*),

163 * 
¨g
) {

165 
TheCu°omHópTy≥
 * 
t
 = 
gëCu°omHóp
();

167 
™yThªadCª©ed
 = 
åue
;

169 
∑ú
<
thªadFun˘i⁄Ty≥
, *> * 
¨gs
 =

170 
√w
 (
t
->
mÆloc
((
∑ú
<
thªadFun˘i⁄Ty≥
, *>)))

171 
∑ú
<
thªadFun˘i⁄Ty≥
, *>(
°¨t_routöe
, 
¨g
);

173 
ªsu…
 = 
±hªad_¸óã
(
thªad
, 
©å
, 
°¨tMeUp
, 
¨gs
);

174  
ªsu…
;

178 
MAC_INTERPOSE
(
xx±hªad_¸óã
, 
±hªad_¸óã
);

179 
MAC_INTERPOSE
(
xx±hªad_exô
, 
±hªad_exô
);

	@source/unixtls.cpp

38 
	#GCC_VERSION
 (
__GNUC__
 * 10000 \

39 + 
__GNUC_MINOR__
 * 100 \

40 + 
__GNUC_PATCHLEVEL__
)

	)

42 #i‡(((
deföed
(
GCC_VERSION
) && (GCC_VERSION >= 30300)) && \

43 !
deföed
(
__SVR4
) && \

44 !
deföed
(
__APPLE__
)) \

45 || 
deföed
(
__SUNPRO_CC
) \

46 || 
	$deföed
(
__FªeBSD__
))

47 
	#USE_THREAD_KEYWORD
 1

	)

50 #i‡!
	`deföed
(
USE_THREAD_KEYWORD
)

51 
	~<±hªad.h
>

54 #i‡
	`deföed
(
__SVR4
)

55 
	~<dlf˙.h
>

58 
	~<√w
>

59 
	~<utûôy
>

62 
	~"hﬂrd/hﬂrdéab.h
"

64 
Hﬂrd
::
HﬂrdHópTy≥
 * 
	`gëMaöHﬂrdHóp
();

66 #i‡
	`deföed
(
USE_THREAD_KEYWORD
)

73 
	#INITIAL_EXEC_ATTR
 
	`__©åibuã__
((
	`és_modñ
 ("öôül-exec")))

	)

74 
	#BUFFER_SIZE
 ((
TheCu°omHópTy≥
Ë/ (Ë+ 1)

	)

76 
__thªad
 
éabBuf„r
[
BUFFER_SIZE
] 
INITIAL_EXEC_ATTR
;

77 
__thªad
 
TheCu°omHópTy≥
 * 
theTLAB
 
INITIAL_EXEC_ATTR
 = 
NULL
;

81 
TheCu°omHópTy≥
 * 
	$öôülizeCu°omHóp
(Ë
	`__©åibuã__
((
c⁄°ru˘‹
));

83 
TheCu°omHópTy≥
 * 
	$öôülizeCu°omHóp
() {

84 i‡(
theTLAB
 =
NULL
) {

85 
	`√w
 (
ªöãΩªt_ˇ°
<*>(&
éabBuf„r
)Ë
	`TheCu°omHópTy≥
(
	`gëMaöHﬂrdHóp
());

86 
theTLAB
 = 
ªöãΩªt_ˇ°
<
TheCu°omHópTy≥
 *>(&
éabBuf„r
);

88  
theTLAB
;

89 
	}
}

93 
boﬁ
 
	$isCu°omHópInôülized
() {

94  (
theTLAB
 !
NULL
);

95 
	}
}

97 
TheCu°omHópTy≥
 * 
	$gëCu°omHóp
() {

99 
TheCu°omHópTy≥
 * 
éab
 = 
theTLAB
;

100 i‡(
éab
 =
NULL
) {

101 
éab
 = 
theTLAB
 = 
	`öôülizeCu°omHóp
();

103  
éab
;

104 
	}
}

112 
±hªad_key_t
 
	gtheHópKey
;

113 
±hªad_⁄˚_t
 
	gkey_⁄˚
 = 
PTHREAD_ONCE_INIT
;

118 
	$dñëeTh©Hóp
(* 
p
) {

119 
TheCu°omHópTy≥
 * 
hóp
 = 
ªöãΩªt_ˇ°
<TheCu°omHópTy≥ *>(
p
);

120 
hóp
->
	`˛ór
();

121 
	`gëMaöHﬂrdHóp
()->
	`‰ì
(
ªöãΩªt_ˇ°
<*>(
hóp
));

124 
	`gëMaöHﬂrdHóp
()->
	`ªÀa£Hóp
();

126 
	}
}

128 
	$make_hóp_key
() {

129 i‡(
	`±hªad_key_¸óã
(&
theHópKey
, 
dñëeTh©Hóp
) != 0) {

132 
	}
}

134 
	$öôTSD
(Ë
	`__©åibuã__
((
c⁄°ru˘‹
));

136 
boﬁ
 
öôülizedTSD
 = 
Ál£
;

138 
	$öôTSD
() {

139 i‡(!
öôülizedTSD
) {

141 
	`±hªad_⁄˚
(&
key_⁄˚
, 
make_hóp_key
);

142 
öôülizedTSD
 = 
åue
;

144 
	}
}

146 
boﬁ
 
	$isCu°omHópInôülized
() {

147  
öôülizedTSD
;

148 
	}
}

150 
TheCu°omHópTy≥
 * 
	$öôülizeCu°omHóp
() {

151 
	`as£π
(
	`±hªad_gë•ecific
(
theHópKey
Ë=
NULL
);

153 
TheCu°omHópTy≥
 * 
hóp
;

154 
size_t
 
sz
 = (
TheCu°omHópTy≥
) + ();

155 * 
mh
 = 
ªöãΩªt_ˇ°
<*>(
	`gëMaöHﬂrdHóp
()->
	`mÆloc
(
sz
));

156 
hóp
 = 
	`√w
 (
mh
Ë
	`TheCu°omHópTy≥
(
	`gëMaöHﬂrdHóp
());

158 
	`±hªad_£t•ecific
(
theHópKey
, 
ªöãΩªt_ˇ°
<*>(
hóp
));

159  
hóp
;

160 
	}
}

162 
TheCu°omHópTy≥
 * 
	$gëCu°omHóp
() {

163 
TheCu°omHópTy≥
 * 
hóp
;

164 
	`öôTSD
();

165 
hóp
 = 
ªöãΩªt_ˇ°
<
TheCu°omHópTy≥
 *>(
	`±hªad_gë•ecific
(
theHópKey
));

166 i‡(
hóp
 =
NULL
) {

167 
hóp
 = 
	`öôülizeCu°omHóp
();

169  
hóp
;

170 
	}
}

180 * (*
	tthªadFun˘i⁄Ty≥
)(* 
	t¨g
);

183 (*
±hªad_¸óã_fun˘i⁄
)(
	t±hªad_t
 *
	tthªad
,

184 c⁄° 
	t±hªad_©å_t
 *
	t©å
,

185 
	tthªadFun˘i⁄Ty≥
 
	t°¨t_routöe
,

186 *
	t¨g
);

189 (*
±hªad_exô_fun˘i⁄
)(* 
	t¨g
);

194 
	$exôRoutöe
() {

195 
TheCu°omHópTy≥
 * 
hóp
 = 
	`öôülizeCu°omHóp
();

198 
	`gëMaöHﬂrdHóp
()->
	`ªÀa£Hóp
();

201 
hóp
->~
	`TheCu°omHópTy≥
();

203 #i‡!
	`deföed
(
USE_THREAD_KEYWORD
)

205 
	`±hªad_key_dñëe
 (
theHópKey
);

207 
	}
}

210 
ölöe
 * 
°¨tMeUp
(* 
a
) {

211 
öôülizeCu°omHóp
();

212 
gëMaöHﬂrdHóp
()->
födUnu£dHóp
();

213 
∑ú
<
thªadFun˘i⁄Ty≥
, *> * 
z


214 (
∑ú
<
thªadFun˘i⁄Ty≥
, *> *Ë
a
;

216 
thªadFun˘i⁄Ty≥
 
f
 = 
z
->
fú°
;

217 * 
¨g
 = 
z
->
£c⁄d
;

219 * 
ªsu…
 = 
NULL
;

220 
ªsu…
 = (*
f
)(
¨g
);

222 
dñëe
 
z
;

224 
exôRoutöe
();

226  
ªsu…
;

230 vﬁ©ûê
boﬁ
 
™yThªadCª©ed
;

238 #i‡
deföed
(
__SVR4
)

242 (*
thr_¸óã_fun˘i⁄
)(* 
	t°ack_ba£
,

243 
	tsize_t
 
	t°ack_size
,

244 * (*
	t°¨t_routöe
)(*),

245 * 
	t¨g
,

246 
	tÊags
,

247 
	tthªad_t
 * 
	t√w_thªad_id
);

250 (*
thr_exô_fun˘i⁄
)(* 
	t¨g
);

254 "C" 
thr_¸óã
 (* 
°ack_ba£
,

255 
size_t
 
°ack_size
,

256 * (*
°¨t_routöe
)(*),

257 * 
¨g
,

258 
Êags
,

259 
thªad_t
 * 
√w_tid
) {

261 vﬁ©ûê
TheCu°omHópTy≥
 * 
t
 = 
öôülizeCu°omHóp
();

262 
t
 =Å;

264 
‚ame
[] = "_thr_create";

270 
thr_¸óã_fun˘i⁄
 
ªÆ_thr_¸óã
 =

271 (
thr_¸óã_fun˘i⁄
Ë
dlsym
 (
RTLD_NEXT
, 
‚ame
);

273 
™yThªadCª©ed
 = 
åue
;

275 
∑ú
<
	tthªadFun˘i⁄Ty≥
, *> 
	t¨gsTy≥
;

276 
¨gsTy≥
 * 
¨gs
 =

277 
√w
 (
gëCu°omHóp
()->
mÆloc
((
¨gsTy≥
)))

278 
¨gsTy≥
 (
°¨t_routöe
, 
¨g
);

280 
ªsu…
 =

281 (*
ªÆ_thr_¸óã
)(
°ack_ba£
, 
°ack_size
, 
°¨tMeUp
, 
¨gs
, 
Êags
, 
√w_tid
);

283  
ªsu…
;

287 "C" 
	$thr_exô
 (* 
vÆue_±r
) {

288 #i‡
	`deföed
(
__löux__
Ë|| deföed(
__APPLE__
)

289 
‚ame
[] = "thr_exit";

291 
‚ame
[] = "_thr_exit";

298 
thr_exô_fun˘i⁄
 
ªÆ_thr_exô
 =

299 
ªöãΩªt_ˇ°
<
thr_exô_fun˘i⁄
>(
	`dlsym
 (
RTLD_NEXT
, 
‚ame
));

303 
	`exôRoutöe
();

304 (*
ªÆ_thr_exô
)(
vÆue_±r
);

305 
	}
}

310 #i‡
deföed
(
__APPLE__
)

314 "C" 
	$±hªad_exô
 (*
vÆue_±r
) {

315 #i‡
	`deföed
(
__löux__
Ë|| deföed(
__APPLE__
)

316 
‚ame
[] = "pthread_exit";

318 
‚ame
[] = "_pthread_exit";

325 
±hªad_exô_fun˘i⁄
 
ªÆ_±hªad_exô
 =

326 
ªöãΩªt_ˇ°
<
±hªad_exô_fun˘i⁄
>

327 (
ªöãΩªt_ˇ°
<
öçå_t
>(
	`dlsym
(
RTLD_NEXT
, 
‚ame
)));

330 
	`exôRoutöe
();

331 (*
ªÆ_±hªad_exô
)(
vÆue_±r
);

334 
	`exô
(0);

335 
	}
}

337 "C" 
±hªad_¸óã
 (
±hªad_t
 *
thªad
,

338 c⁄° 
±hªad_©å_t
 *
©å
,

339 * (*
°¨t_routöe
)(*),

340 * 
¨g
)

341 #i‡!
deföed
(
__SUNPRO_CC
Ë&& !deföed(
__APPLE__
Ë&& !deföed(
__FªeBSD__
)

342 
	$throw
 ()

346 vﬁ©ûê
TheCu°omHópTy≥
 * 
t
 = 
	`öôülizeCu°omHóp
();

347 
t
 =Å;

349 #i‡
	`deföed
(
__löux__
Ë|| deföed(
__APPLE__
)

350 
‚ame
[] = "pthread_create";

352 
‚ame
[] = "_pthread_create";

356 
±hªad_¸óã_fun˘i⁄
 
ªÆ_±hªad_¸óã
 =

357 
ªöãΩªt_ˇ°
<
±hªad_¸óã_fun˘i⁄
>

358 (
ªöãΩªt_ˇ°
<
öçå_t
>(
	`dlsym
(
RTLD_NEXT
, 
‚ame
)));

360 
™yThªadCª©ed
 = 
åue
;

362 
∑ú
<
thªadFun˘i⁄Ty≥
, *> * 
¨gs
 =

364 
√w


365 
∑ú
<
thªadFun˘i⁄Ty≥
, *> (
°¨t_routöe
, 
¨g
);

367 
ªsu…
 = (*
ªÆ_±hªad_¸óã
)(
thªad
, 
©å
, 
°¨tMeUp
, 
¨gs
);

369  
ªsu…
;

370 
	}
}

	@source/uselibhoard.cpp

29 #i‡
deföed
(
_WIN32
)

31 
	~<wödows.h
>

32 #i‡
deföed
(
_WIN64
)

33 #¥agm®
commít
(
lökî
, "/include:ReferenceHoard")

35 #¥agm®
commít
(
lökî
, "/include:_ReferenceHoard")

40 
__de˛•ec
(
dŒimp‹t
Ë
Re„ªn˚WöWøµîStub
;

42 
Re„ªn˚Hﬂrd
 ()

44 
LﬂdLibøryA
 ("libhoard.dll");

45 
Re„ªn˚WöWøµîStub
 = 1;

	@source/wintls.cpp

35 #i‡
deföed
(
_WIN32
)

37 
	~<√w
>

39 #¥agm®
w¨nög
(
dißbÀ
: 4447)

43 
	~"VERSION.h
"

44 
	~"hﬂrdhóp.h
"

45 
	~"hﬂrdéab.h
"

47 
usög
 
«me•a˚
 
	gHﬂrd
;

49 
DWORD
 
	gLoˇlTLABIndex
;

51 
	$__de˛•ec
(
thªad
Ë
TheCu°omHópTy≥
 * 
thªadLoˇlHóp
 = 
NULL
;

53 
HﬂrdHópTy≥
 * 
	`gëMaöHﬂrdHóp
 ();

55 
TheCu°omHópTy≥
 * 
	$öôülizeCu°omHóp
 ()

58 
TheCu°omHópTy≥
 * 
hóp
;

59 * 
mh
 = 
	`gëMaöHﬂrdHóp
()->
	`mÆloc
((
TheCu°omHópTy≥
));

60 
hóp
 = 
	`√w
 (
mh
Ë
	`TheCu°omHópTy≥
 (
	`gëMaöHﬂrdHóp
());

63 
thªadLoˇlHóp
 = 
hóp
;

66  
hóp
;

67 
	}
}

69 
boﬁ
 
	$isCu°omHópInôülized
() {

70  (
thªadLoˇlHóp
 !
NULL
);

71 
	}
}

73 
TheCu°omHópTy≥
 * 
	$gëCu°omHóp
() {

74 i‡(
thªadLoˇlHóp
 !
NULL
)

75  
thªadLoˇlHóp
;

76 
	`öôülizeCu°omHóp
();

77  
thªadLoˇlHóp
;

78 
	}
}

80 "C" 
InôülizeWöWøµî
();

81 "C" 
FöÆizeWöWøµî
();

90 
BOOL
 
APIENTRY
 
DŒMaö
 (
HANDLE
 
hö°DLL
,

91 
DWORD
 
fdwRós⁄
,

92 
LPVOID
 
Õª£rved
)

94 
≈
 = 
HL
::
CPUInfo
::
compuãNumPro˚ss‹s
();

96 
fdwRós⁄
) {

98 
DLL_PROCESS_ATTACH
:

101 
InôülizeWöWøµî
();

105 
DLL_THREAD_ATTACH
:

106 i‡(
≈
 == 1) {

109 
gëMaöHﬂrdHóp
()->
choo£Zîo
();

111 
gëMaöHﬂrdHóp
()->
födUnu£dHóp
();

113 
gëCu°omHóp
();

116 
DLL_THREAD_DETACH
:

119 
gëCu°omHóp
()->
˛ór
();

121 
TheCu°omHópTy≥
 *
hóp


122 
thªadLoˇlHóp
;

125 i‡(
≈
 != 1) {

128 
gëMaöHﬂrdHóp
()->
ªÀa£Hóp
();

131 i‡(
hóp
 != 0) {

137 
DLL_PROCESS_DETACH
:

138 
FöÆizeWöWøµî
();

142  
TRUE
;

145  
TRUE
;

	@test/mtest.cpp

7 #i‡!
deföed
(
__STDC__
)

8 
	#__STDC__
 1

	)

11 
	~<°dlib.h
>

12 
	~<°dio.h
>

14 #i‡!
deföed
(
_WIN32
)

15 
	~<uni°d.h
>

16 
	~<sys/ty≥s.h
>

17 
	~<sys/time.h
>

18 
	~<sys/ªsour˚.h
>

21 #i‡!
deföed
(
__APPLE__
Ë&& !deföed(
__FªeBSD__
)

22 
	~<mÆloc.h
>

25 #i‚de‡
MEMORY


26 
	#MEMORY
 4000000l

	)

28 #i‚de‡
BINS_MAX


29 
	#BINS_MAX
 32768

	)

31 
	#SBINS_MAX
 1024

	)

32 
	#SIZE
 10000

	)

33 
	#I_MAX
 5000

	)

34 #i‚de‡
I_AVERAGE


35 
	#I_AVERAGE
 200

	)

37 
	#ACTIONS_MAX
 50

	)

38 #i‚de‡
SBRK_AVG


39 
	#SBRK_AVG
 0

	)

41 #i‚de‡
MMAP_THRESH


42 
	#MMAP_THRESH
 0

	)

44 #i‚de‡
TEST


45 
	#TEST
 4

	)

47 #i‚de‡
TEST_INC


48 
	#TEST_INC
 1027

	)

50 #i‡
deföed
(
__i386__
Ë|| deföed(
__•¨c__
Ë|| deföed(
mùs
Ë|| deföed(
_WIN32
)

51 
	#PAGE_SIZE
 4096

	)

52 #ñi‡
deföed
(
__Æpha__
)

53 
	#PAGE_SIZE
 8192

	)

54 #ñi‡
deföed
(
__SVR4
)

55 
	#PAGE_SIZE
 8192

	)

57 #i‡!
deföed
(
PAGE_SIZE
)

58 
	#PAGE_SIZE
 4096

61 
	#RANDOM
(
s
Ë(
	`Ã™2
(0Ë% (s))

	)

64 #i‚de‡
PROB_MEMALIGN


65 
	#PROB_MEMALIGN
 0

67 #i‚de‡
PROB_REALLOC


	)

68 
	#PROB_REALLOC
 128

	)

70 #i‚de‡
PROB_CALLOC


71 
	#PROB_CALLOC
 128

	)

74 
	sbö
 {

75 *
	m±r
;

76 
	msize
;

77 } 
	gm
[
BINS_MAX
], 
	gsm
[
SBINS_MAX
];

79 
	gsize
 = 
SIZE
, 
	gbös
=0, 
	gsbös
=0;

80 
	gtŸÆ_size
=0, 
	gtŸÆ_size_max
=0;

81 *
	gba£_±r
;

82 
	gba£_ßve
;

85 #i‡
__STDC__


86 
	$Ã™2
(
£ed
)

88 
	$Ã™2
(
£ed
) seed;

90 
	#LRAN2_MAX
 714025»

	)

91 
	#IA
 1366»

	)

92 
	#IC
 150889»

	)

94 
fú°
 = 1;

95 
x
, 
y
, 
v
[97];

96 
j
;

98 if(
£ed
 || 
fú°
) {

99 
fú°
 = 0;

100 
x
 = (
IC
 - 
£ed
Ë% 
LRAN2_MAX
;

101 if(
x
 < 0) x = -x;

102 
j
=0; j<97; j++) {

103 
x
 = (
IA
*x + 
IC
Ë% 
LRAN2_MAX
;

104 
v
[
j
] = 
x
;

106 
x
 = (
IA
*x + 
IC
Ë% 
LRAN2_MAX
;

107 
y
 = 
x
;

109 
j
 = 
y
 % 97;

110 
y
 = 
v
[
j
];

111 
x
 = (
IA
*x + 
IC
Ë% 
LRAN2_MAX
;

112 
v
[
j
] = 
x
;

113  
y
;

114 
	}
}

115 #unde‡
IA


116 #unde‡
IC


119 #i‡
__STDC__


120 
	$mem_öô
(*
±r
, 
size
)

122 
	$mem_öô
(
±r
, 
size
) *ptr; size;

125 
i
, 
j
;

127 if(
size
 == 0) ;

128 if(
size
 > ()) {

130 *(*)
±r
 = (Ìå ^ 
size
;

131 
i
 = 
TEST_INC
;

133 
i
 = 0;

134 ; 
i
<
size
; i+=
TEST_INC
) {

135 
j
 = ()
±r
 ^ 
i
;

136 
±r
[
i
] = ((
j
 ^ (j>>8)) & 0xFF);

138 
j
 = ()
±r
 ^ (
size
-1);

139 
±r
[
size
-1] = ((
j
 ^ (j>>8)) & 0xFF);

140 
	}
}

143 #i‡
__STDC__


144 
	$mem_check
(*
±r
, 
size
)

146 
	$mem_check
(
±r
, 
size
) *ptr; size;

149 
i
, 
j
;

151 if(
size
 == 0)  0;

152 if(
size
 > ()) {

153 if(*(*)
±r
 !((Ìå ^ 
size
)) {

154 
	`¥ötf
 ("failed size check:Éxpected %x, found %x!\n",

155 ((Ë
±r
 ^ 
size
), *(*)Ötr);

158 
i
 = 
TEST_INC
;

160 
i
 = 0;

161 ; 
i
<
size
; i+=
TEST_INC
) {

162 
j
 = ()
±r
 ^ 
i
;

163 if(
±r
[
i
] !((
j
 ^ (j>>8)) & 0xFF))  2;

165 
j
 = ()
±r
 ^ (
size
-1);

166 if(
±r
[
size
-1] !((
j
 ^ (j>>8)) & 0xFF)) {

167 
	`¥ötf
 ("failedÜast byte check:Éxpected %x, found %x!\n",

168 ((Ë((
j
 ^ (j>>8)Ë& 0xFF)), 
±r
[
size
-1]);

172 
	}
}

175 #i‡
__STDC__


176 
	$øndom_size
(
max
)

178 
	$øndom_size
(
max
) max;

181 
r1
, 
r2
, 
r
, 
max_∑ges
;

183 
max_∑ges
 = 
max
/
PAGE_SIZE
;

184 if(
max_∑ges
 > 0) {

185 
r1
 = 
	`RANDOM
(1024);

186 
r2
 = (
r1
 & 7)*4;

187 if(
r1
 < 512) {

189 
r
 = (1L << (
r1
 >> 6)Ë+ 
r2
;

190 } if(
r1
 < 512+20) {

192 
r
 = (
	`RANDOM
(
max_∑ges
)+1)*
PAGE_SIZE
 + 
r2
 - 16;

194 } 
r
 = 
	`RANDOM
(
max
) + 1;

195 } 
r
 = 
	`RANDOM
(
max
) + 1;

197  
r
;

198 
	}
}

201 #i‡
__STDC__


202 
	$bö_Æloc
(
bö
 *
m
)

204 
	$bö_Æloc
(
m
Ë
bö
 *m;

207 
r
, 
key
;

208 
sz
;

210 #i‡
TEST
 > 0

211 if(
	`mem_check
(
m
->
±r
, m->
size
)) {

212 
	`¥ötf
("bö_Æloc: mem‹y c‹ru±áà%p, size=%lu!\n", 
m
->
±r
, m->
size
);

213 
	`exô
(1);

216 
tŸÆ_size
 -
m
->
size
;

217 
r
 = 
	`RANDOM
(1024);

218 if(
r
 < 
PROB_MEMALIGN
) {

219 #i‡!
	`deföed
(
_WIN32
Ë&& !deföed(
__APPLE__
Ë&& !deföed(
__FªeBSD__
)

220 if(
m
->
size
 > 0Ë
	`‰ì
(m->
±r
);

221 
m
->
size
 = 
	`øndom_size
(size);

222 
m
->
±r
 = (*)
	`memÆign
(4 << 
	`RANDOM
(8), m->
size
);

223 if(!
m
->
±r
) {

224 
	`¥ötf
("memalign: out of memory!\n");

225 
	`exô
(1);

228 } if(
r
 < (
PROB_MEMALIGN
 + 
PROB_REALLOC
)) {

229 if(
m
->
size
 == 0) {

230 #i‚de‡
__•¨c__


231 
m
->
±r
 = 
NULL
;

234 
m
->
±r
 = (*)
	`mÆloc
(1);

237 #i‡
TEST
 > 2

238 
key
 = 
	`RANDOM
(256);

239 
sz
 = 
m
->
size
;

240 
r
=0;Ñ<
sz
;Ñ++Ë
m
->
±r
[r] = (∏^ 
key
) & 0xFF;

242 
m
->
size
 = 
	`øndom_size
(size);

244 
m
->
±r
 = (*)
	`ªÆloc
(m->±r, m->
size
);

245 if(!
m
->
±r
) {

246 
	`¥ötf
("realloc: out of memory!\n");

247 
	`exô
(1);

249 #i‡
TEST
 > 2

250 if(
m
->
size
 < 
sz
) sz = m->size;

251 
r
=0;Ñ<
sz
;Ñ++)

252 if(
m
->
±r
[
r
] !(‘ ^ 
key
) & 0xFF)) {

253 
	`¥ötf
("realloc bug !\n");

254 
	`exô
(1);

257 } if(
r
 < (
PROB_MEMALIGN
 + 
PROB_REALLOC
 + 
PROB_CALLOC
)) {

258 if(
m
->
size
 > 0Ë
	`‰ì
(m->
±r
);

259 
m
->
size
 = 
	`øndom_size
(size);

260 
m
->
±r
 = (*)
	`ˇŒoc
(m->
size
, 1);

261 if(!
m
->
±r
) {

262 
	`¥ötf
("calloc: out of memory!\n");

263 
	`exô
(1);

265 #i‡
TEST
 > 2

266 
r
=0;Ñ<
m
->
size
;Ñ++)

267 if(
m
->
±r
[
r
] != '\0') {

268 
	`¥ötf
("calloc bug !\n");

269 
	`exô
(1);

273 if(
m
->
size
 > 0Ë
	`‰ì
(m->
±r
);

274 
m
->
size
 = 
	`øndom_size
(size);

275 
m
->
±r
 = (*)
	`mÆloc
(m->
size
);

276 if(!
m
->
±r
) {

277 
	`¥ötf
("malloc: out of memory!\n");

278 
	`exô
(1);

281 if(!
m
->
±r
) {

282 
	`¥ötf
("out of memory!\n");

283 
	`exô
(1);

285 
tŸÆ_size
 +
m
->
size
;

286 if(
tŸÆ_size
 > 
tŸÆ_size_max
)Åotal_size_max =Åotal_size;

287 #i‡
TEST
 > 0

288 
	`mem_öô
(
m
->
±r
, m->
size
);

290 if(
m
->
±r
 < 
ba£_±r
) {

291 #ifde‡
VERBOSE


292 
	`¥ötf
("hmmm,állocating below brk...\n");

294 
ba£_±r
 = 
m
->
±r
;

296 
	}
}

299 #i‡
__STDC__


300 
	$bö_‰ì
(
bö
 *
m
)

302 
	$bö_‰ì
(
m
Ë
bö
 *m;

305 if(
m
->
size
 == 0) ;

306 #i‡
TEST
 > 0

307 if(
	`mem_check
(
m
->
±r
, m->
size
)) {

308 
	`¥ötf
("bin_free: memory corrupt!\n");

309 
	`exô
(1);

312 
tŸÆ_size
 -
m
->
size
;

313 
	`‰ì
(
m
->
±r
);

314 
m
->
size
 = 0;

315 
	}
}

318 
	$bö_ã°
()

320 
b
;

321 
v
;

324 
b
=0; b<
bös
; b++) {

325 if(
v
 = 
	`mem_check
(
m
[
b
].
±r
, m[b].
size
)) {

326 
	`¥ötf
("bin_test: memory corrupt! m[%d].ptr = %x, m[%d].size = %d\n",

327 
b
, 
m
[b].
±r
, b, m[b].
size
);

328 
	`¥ötf
 ("îr‹ = %d\n", 
v
);

329 
	`exô
(1);

332 
b
=0; b<
sbös
; b++) {

333 if(
	`mem_check
(
sm
[
b
].
±r
, sm[b].
size
)) {

334 
	`¥ötf
("bin_test: memory corrupt! sm[%d].ptr = %x, sm[%d].size = %d\n",

335 
b
, 
sm
[b].
±r
, b, sm[b].
size
);

336 
	`exô
(1);

339 
	}
}

342 
	$¥öt_times
()

344 #i‡!
	`deföed
(
_WIN32
)

345 
rußge
 
ru
;

346 
tŸÆ_£c
, 
tŸÆ_u£c
;

348 
	`gërußge
(
RUSAGE_SELF
, &
ru
);

349 
	`¥ötf
(" u=%ld.%06ldsec",

350 ()
ru
.
ru_utime
.
tv_£c
, (Ïu.ru_utime.
tv_u£c
);

351 
	`¥ötf
(" s=%ld.%06ldsec",

352 ()
ru
.
ru_°ime
.
tv_£c
, (Ïu.ru_°ime.
tv_u£c
);

353 
tŸÆ_u£c
 = ()
ru
.
ru_utime
.
tv_u£c
 + (Ïu.
ru_°ime
.tv_usec;

354 
tŸÆ_£c
 = ()
ru
.
ru_utime
.
tv_£c
 + (Ïu.
ru_°ime
.tv_sec;

355 if(
tŸÆ_u£c
 >= 1000000) {

356 
tŸÆ_u£c
 -= 1000000;

357 
tŸÆ_£c
++;

359 
	`¥ötf
("Å=%ld.%06ld£c", 
tŸÆ_£c
, 
tŸÆ_u£c
);

361 
	}
}

364 #i‡
__STDC__


365 
	$maö
(
¨gc
, *
¨gv
[])

367 
	$maö
(
¨gc
, 
¨gv
) argc; *argv[];

370 
i
, 
j
, 
√xt_i
, 
cou¡
, 
max
=
I_MAX
, 
a˘i⁄s
;

371 
b
;

372 
sbrk_max
, 
sum
;

373 
sbrk_u£d_sum
, 
tŸÆ_size_sum
;

374 * 
dummy
 = 0;

376 if(
¨gc
 > 1Ë
max
 = 
	`©oi
(
¨gv
[1]);

377 if(
¨gc
 > 2Ë
size
 = 
	`©oi
(
¨gv
[2]);

378 
	`Ã™2
(()
max
 ^ 
size
);

379 
bös
 = (
MEMORY
/
size
)*4;

380 if(
bös
 > 
BINS_MAX
) bins = BINS_MAX;

382 
ba£_±r
 = (*)
	`sbrk
(0);

383 
sum
 = ()
ba£_±r
 % 
PAGE_SIZE
;

384 if(
sum
 > 0) {

385 if((*)
	`sbrk
(()
PAGE_SIZE
 - 
sum
Ë=(*)-1Ë
	`exô
(1);

386 
ba£_±r
 +()
PAGE_SIZE
 - 
sum
;

390 
i
=0; i<10000; i++) {

391 
dummy
 = 
	`mÆloc
(1);

392 if(
dummy
 >(*)
ba£_±r
) ;

394 
	`‰ì
(
dummy
);

395 
ba£_ßve
 = (()
ba£_±r
 >> 24) << 24;

398 #i‡
MMAP_THRESH
 > 0

399 if(!
	`mÆl›t
(-3, 
MMAP_THRESH
)Ë
	`¥ötf
("mallopt failed!\n");

400 if(!
	`mÆl›t
(-4, 200)Ë
	`¥ötf
("mallopt failed!\n");

402 #ifde‡
VERBOSE


403 
	`¥ötf
("# mm≠_thªsh=%d\n", 
MMAP_THRESH
);

404 
	`¥ötf
("# bös=%d max=%d size=%d\n", 
bös
, 
max
, 
size
);

405 
	`¥ötf
("# ba£=%lx\n", 
ba£_ßve
);

407 
b
=0; b<
bös
; b++) {

408 if(
	`RANDOM
(2Ë=0Ë
	`bö_Æloc
(&
m
[
b
]);

409 
m
[
b
].
size
 = 0;

411 
sbrk_max
 = 0;

412 
sbrk_u£d_sum
 = 
tŸÆ_size_sum
 = 0.0;

413 
i
=
√xt_i
=
cou¡
=0; i<=
max
;) {

414 #i‡
TEST
 > 1

415 
	`bö_ã°
();

417 #ifde‡
MSTATS


418 
	`mÆloc_°©s
();

420 
a˘i⁄s
 = 
	`RANDOM
(
ACTIONS_MAX
);

421 
j
=0; j<
a˘i⁄s
; j++) {

422 
b
 = 
	`RANDOM
(
bös
);

423 
	`bö_‰ì
(&
m
[
b
]);

424 #i‡
TEST
 > 3

425 
	`bö_ã°
();

428 
i
 +
a˘i⁄s
;

429 #ifde‡
AFTER_FREE


430 
AFTER_FREE
;

432 #i‡
SBRK_AVG
 > 0

433 if(
sbös
<
SBINS_MAX
 && 
	`RANDOM
(
SBRK_AVG
)==0) {

435 
sm
[
sbös
].
size
 = 
	`RANDOM
(10000)+1;

436 
sm
[
sbös
].
±r
 = 
	`sbrk
(sm[sbös].
size
);

437 if(
sbös
>0 && 
sm
[sbös].
±r
==(sm[sbös-1].±r+sm[sbös-1].
size
)) {

438 
sm
[
sbös
-1].
size
 += sm[sbins].size;

439 
sbös
--;

441 #ifde‡
VERBOSE


442 
	`¥ötf
("sbrk #%d %∞%ld\n", 
sbös
, 
sm
[sbös].
±r
, sm[sbös].
size
);

444 #i‡
TEST
 > 0

445 
	`mem_öô
(
sm
[
sbös
].
±r
, sm[sbös].
size
);

447 
sbös
++;

450 
a˘i⁄s
 = 
	`RANDOM
(
ACTIONS_MAX
);

451 
j
=0; j<
a˘i⁄s
; j++) {

452 
b
 = 
	`RANDOM
(
bös
);

453 
	`bö_Æloc
(&
m
[
b
]);

454 #i‡
TEST
 > 3

455 
	`bö_ã°
();

458 
i
 +
a˘i⁄s
;

459 if(
i
 >
√xt_i
) {

460 
cou¡
++;

461 #i‡!
	`deföed
(
_WIN32
)

462 
sum
 = ()
	`sbrk
(0);

464 
sum
 = 0;

466 if(
sum
 > 
sbrk_max
) sbrk_max = sum;

467 
sbrk_u£d_sum
 +
sum
;

468 
tŸÆ_size_sum
 +()
tŸÆ_size
;

469 #ifde‡
VERBOSE


470 
	`¥ötf
("%8d %7lu\n", 
i
, 
tŸÆ_size
);

472 
√xt_i
 +
I_AVERAGE
;

477 
sbrk_max
 -()
ba£_±r
;

478 
sbrk_u£d_sum
 -()
cou¡
*()
ba£_±r
;

479 #ifde‡
VERBOSE


480 
	`¥ötf
("# inôü»brk: %lx\n", ()
ba£_±r
);

481 
	`¥ötf
("# max. sbrk()'ed mem‹y: %ld byãs\n", 
sbrk_max
);

482 
	`¥ötf
("#ávg. sbrk()'ed memory: %ld bytes\n",

483 ()(
sbrk_u£d_sum
/
cou¡
));

484 
	`¥ötf
("# cuºíàsizêÆloˇãd: %ld byãs\n", 
tŸÆ_size
);

485 
	`¥ötf
("# maximum sizêÆloˇãd: %ld byãs\n", 
tŸÆ_size_max
);

486 
	`¥ötf
("#ávîagêsizêÆloˇãd: %.1‡byãs\n", 
tŸÆ_size_sum
/
cou¡
);

487 
	`¥ötf
("# current heap waste: %.2f%%\n",

488 (1.0 - ()
tŸÆ_size_max
/
sbrk_max
)*100.0);

489 
	`¥ötf
("#áverage heap waste: %.2f%%\n",

490 (1.0 - ()
tŸÆ_size_sum
/
sbrk_u£d_sum
)*100.0);

491 
	`¥ötf
("#ÅŸÆ sbrk cÆl†≥rf‹med: %d\n", 
sbös
);

493 
	`¥ötf
("size=%7ld wa°e=%7.3f%%", 
size
,

495 (1.0 - ()
tŸÆ_size_sum
/
sbrk_u£d_sum
)*100.0);

496 
	`¥öt_times
();

497 
	`¥ötf
("\n");

500 
	}
}

	@test/testoverflow.cpp

1 
	~<io°ªam
>

3 #i‚de‡
__APPLE__


4 
	~<mÆloc.h
>

8 
	~<limôs.h
>

10 
usög
 
«me•a˚
 
	g°d
;

12 
	$maö
()

14 
cout
 << "sizê" << (
size_t
Ë-1 << 
ídl
;

15 
cout
 << "uöt_max = " << 
UINT_MAX
 << 
ídl
;

16 
cout
 << "ul⁄g_max = " << 
ULONG_MAX
 << 
ídl
;

18 * 
m
 = 
	`mÆloc
((
size_t
) -1);

19 * 
c
 = 
	`ˇŒoc
(
UINT_MAX
, UINT_MAX);

20 * 
n
 = 
√w
 [
UINT_MAX
];

22 
cout
 << "Resu… o‡mÆlo¯" << 
m
 << 
ídl


23 << "Resu… o‡ˇŒo¯" << 
c
 << 
ídl


24 << "Resu… o‡√w = " << 
n
 << 
ídl
;

27 
	}
}

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


120 #unde‡
°©ic_as£π


121 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 
Dl_£Ω©h
 
dls_£Ω©h
[1];

184 } 
	tDl_£röfo
;

188 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/huge_vÆ.h
>

33 #ifde‡
__USE_ISOC99


34 
	~<bôs/huge_vÆf.h
>

35 
	~<bôs/huge_vÆl.h
>

38 
	~<bôs/öf.h
>

41 
	~<bôs/«n.h
>

45 
	~<bôs/m©hdef.h
>

52 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

53 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

54 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

56 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

57 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

58 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

59 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

61 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

62 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

63 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

65 
	#_MdoubÀ_
 

	)

66 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

67 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

68 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

69 
	~<bôs/m©hˇŒs.h
>

70 #unde‡
_MdoubÀ_


71 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


72 #unde‡
_MdoubÀ_END_NAMESPACE


73 #unde‡
__MATH_PRECNAME


75 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


81 #i‚de‡
_MÊﬂt_


82 
	#_MÊﬂt_
 

	)

84 
	#_MdoubÀ_
 
_MÊﬂt_


	)

85 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

95 || 
deföed
 
__LDBL_COMPAT


96 #ifde‡
__LDBL_COMPAT


98 #ifde‡
__USE_ISOC99


99 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

100 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

101 #ifde‡
__REDIRECT_NTH


102 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

103 
__∆dbl_√xâow¨df
)

104 
	`__©åibuã__
 ((
__c⁄°__
));

105 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

106 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

107 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

108 (
__x
, 
__y
),

109 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 #unde‡
__MATHDECL_1


114 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

115 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

116 
¨gs
, 
Æüs
)

	)

117 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

118 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

124 #i‚de‡
_Ml⁄g_doubÀ_


125 
	#_Ml⁄g_doubÀ_
 

	)

127 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

128 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

129 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

130 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

131 
	#__MATH_DECLARE_LDOUBLE
 1

	)

132 
	~<bôs/m©hˇŒs.h
>

133 #unde‡
_MdoubÀ_


134 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


135 #unde‡
_MdoubÀ_END_NAMESPACE


136 #unde‡
__MATH_PRECNAME


141 #unde‡
__MATHDECL_1


142 #unde‡
__MATHDECL


143 #unde‡
__MATHCALL


146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


148 
signgam
;

153 #ifde‡
__USE_ISOC99


191 
FP_NAN
 =

192 
	#FP_NAN
 0

	)

193 
FP_NAN
,

194 
FP_INFINITE
 =

195 
	#FP_INFINITE
 1

	)

196 
FP_INFINITE
,

197 
FP_ZERO
 =

198 
	#FP_ZERO
 2

	)

199 
FP_ZERO
,

200 
FP_SUBNORMAL
 =

201 
	#FP_SUBNORMAL
 3

	)

202 
FP_SUBNORMAL
,

203 
FP_NORMAL
 =

204 
	#FP_NORMAL
 4

	)

205 
FP_NORMAL


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
	#Â˛assify
(
x
) \

211 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

213 
	#Â˛assify
(
x
) \

214 ( (
x
) ==  () \

215 ? 
	`__Â˛assifyf
 (
x
) \

216 :  (
x
) ==  () \

217 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

221 #ifde‡
__NO_LONG_DOUBLE_MATH


222 
	#signbô
(
x
) \

223 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

225 
	#signbô
(
x
) \

226 ( (
x
) ==  () \

227 ? 
	`__signbôf
 (
x
) \

228 :  (
x
) ==  () \

229 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

233 #ifde‡
__NO_LONG_DOUBLE_MATH


234 
	#isföôe
(
x
) \

235 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

237 
	#isföôe
(
x
) \

238 ( (
x
) ==  () \

239 ? 
	`__föôef
 (
x
) \

240 :  (
x
) ==  () \

241 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

245 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

249 #ifde‡
__NO_LONG_DOUBLE_MATH


250 
	#i¢™
(
x
) \

251 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

253 
	#i¢™
(
x
) \

254 ( (
x
) ==  () \

255 ? 
	`__i¢™f
 (
x
) \

256 :  (
x
) ==  () \

257 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

261 #ifde‡
__NO_LONG_DOUBLE_MATH


262 
	#isöf
(
x
) \

263 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

265 
	#isöf
(
x
) \

266 ( (
x
) ==  () \

267 ? 
	`__isöff
 (
x
) \

268 :  (
x
) ==  () \

269 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

273 
	#MATH_ERRNO
 1

	)

274 
	#MATH_ERREXCEPT
 2

	)

279 #i‚de‡
__FAST_MATH__


280 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

285 #ifde‡
__USE_GNU


287 #ifde‡
__NO_LONG_DOUBLE_MATH


288 
	#issig«lög
(
x
) \

289 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

291 
	#issig«lög
(
x
) \

292 ( (
x
) ==  () \

293 ? 
	`__issig«lögf
 (
x
) \

294 :  (
x
) ==  () \

295 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

299 #ifdef 
__USE_MISC


303 
_IEEE_
 = -1,

304 
_SVID_
,

305 
_XOPEN_
,

306 
_POSIX_
,

307 
_ISOC_


308 } 
	t_LIB_VERSION_TYPE
;

313 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

317 #ifde‡
__USE_SVID


323 #ifde‡
__˝lu•lus


324 
__ex˚±i⁄


326 
ex˚±i⁄


329 
ty≥
;

330 *
«me
;

331 
¨g1
;

332 
¨g2
;

333 
ªtvÆ
;

334 
	}
};

336 #ifde‡
__˝lu•lus


337 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

339 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

342 
	#X_TLOSS
 1.41484755040568800000e+16

	)

345 
	#DOMAIN
 1

	)

346 
	#SING
 2

	)

347 
	#OVERFLOW
 3

	)

348 
	#UNDERFLOW
 4

	)

349 
	#TLOSS
 5

	)

350 
	#PLOSS
 6

	)

353 
	#HUGE
 3.40282347e+38F

	)

357 #ifde‡
__USE_XOPEN


359 
	#MAXFLOAT
 3.40282347e+38F

	)

366 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


367 
	#M_E
 2.7182818284590452354

	)

368 
	#M_LOG2E
 1.4426950408889634074

	)

369 
	#M_LOG10E
 0.43429448190325182765

	)

370 
	#M_LN2
 0.69314718055994530942

	)

371 
	#M_LN10
 2.30258509299404568402

	)

372 
	#M_PI
 3.14159265358979323846

	)

373 
	#M_PI_2
 1.57079632679489661923

	)

374 
	#M_PI_4
 0.78539816339744830962

	)

375 
	#M_1_PI
 0.31830988618379067154

	)

376 
	#M_2_PI
 0.63661977236758134308

	)

377 
	#M_2_SQRTPI
 1.12837916709551257390

	)

378 
	#M_SQRT2
 1.41421356237309504880

	)

379 
	#M_SQRT1_2
 0.70710678118654752440

	)

385 #ifde‡
__USE_GNU


386 
	#M_El
 2.718281828459045235360287471352662498L

	)

387 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

388 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

389 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

390 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

391 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

392 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

393 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

394 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

395 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

396 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

397 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

398 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

405 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


406 
	#__NO_MATH_INLINES
 1

	)

409 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

416 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

417 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

418 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

419 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

420 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

421 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

425 #ifde‡
__USE_EXTERN_INLINES


426 
	~<bôs/m©hölöe.h
>

431 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

432 
	~<bôs/m©h-föôe.h
>

435 #ifde‡
__USE_ISOC99


439 #i‚de‡
isgª©î


440 
	#isgª©î
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

447 #i‚de‡
isgª©îequÆ


448 
	#isgª©îequÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

455 #i‚de‡
i¶ess


456 
	#i¶ess
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

463 #i‚de‡
i¶es£quÆ


464 
	#i¶es£quÆ
(
x
, 
y
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

467 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

471 #i‚de‡
i¶essgª©î


472 
	#i¶essgª©î
(
x
, 
y
) \

473 (
__exãnsi⁄__
 \

474 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

475 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

479 #i‚de‡
isun‹dîed


480 
	#isun‹dîed
(
u
, 
v
) \

481 (
__exãnsi⁄__
 \

482 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

483 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

488 
	g__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 1

87 
	#__PTHREAD_SPINS
 0, 0

	)

88 #ñi‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 2

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

91 
	#__PTHREAD_SPINS
 0

	)

94 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


95 
	#PTHREAD_MUTEX_INITIALIZER
 \

96 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

97 #ifde‡
__USE_GNU


98 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

101 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

102 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

104 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

109 
	#PTHREAD_MUTEX_INITIALIZER
 \

110 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

111 #ifde‡
__USE_GNU


112 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

113 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

115 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

116 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

117 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


127 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

128 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

129 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

130 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


136 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 #i‡
__WORDSIZE
 == 64

138 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

143 
	#PTHREAD_RWLOCK_INITIALIZER
 \

144 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

145 #ifde‡
__USE_GNU


146 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

149 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

151 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


152 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

153 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

154 0, 0, 0, 0 } }

	)

156 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

157 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

158 0 } }

	)

168 
	mPTHREAD_INHERIT_SCHED
,

169 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

170 
	mPTHREAD_EXPLICIT_SCHED


171 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

178 
	mPTHREAD_SCOPE_SYSTEM
,

179 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

180 
	mPTHREAD_SCOPE_PROCESS


181 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

188 
	mPTHREAD_PROCESS_PRIVATE
,

189 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

190 
	mPTHREAD_PROCESS_SHARED


191 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

197 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

201 
	s_±hªad_˛ónup_buf„r


203 (*
	m__routöe
) (*);

204 *
	m__¨g
;

205 
	m__ˇn˚…y≥
;

206 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

212 
	mPTHREAD_CANCEL_ENABLE
,

213 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

214 
	mPTHREAD_CANCEL_DISABLE


215 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

219 
	mPTHREAD_CANCEL_DEFERRED
,

220 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

221 
	mPTHREAD_CANCEL_ASYNCHRONOUS


222 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

224 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

228 
	#PTHREAD_ONCE_INIT
 0

	)

231 #ifde‡
__USE_XOPEN2K


235 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

239 
__BEGIN_DECLS


244 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

245 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

246 *(*
__°¨t_routöe
) (*),

247 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

253 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

261 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

263 #ifde‡
__USE_GNU


266 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

274 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

275 c⁄° 
time•ec
 *
__ab°ime
);

282 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

286 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

290 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

298 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

301 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 *
__dëach°©e
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

311 
__dëach°©e
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

317 
size_t
 *
__gu¨dsize
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

322 
size_t
 
__gu¨dsize
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

328 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

333 c⁄° 
sched_∑øm
 *
__ª°ri˘


334 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

337 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, *
__ª°ri˘
 
__öhîô
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

352 
__öhîô
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 *
__ª°ri˘
 
__sc›e
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1));

366 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

374 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

375 *
__°ackaddr
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

379 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


380 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

387 
size_t
 
__°acksize
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 #ifde‡
__USE_XOPEN2K


392 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

393 **
__ª°ri˘
 
__°ackaddr
,

394 
size_t
 *
__ª°ri˘
 
__°acksize
)

395 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

400 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

401 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

404 #ifde‡
__USE_GNU


407 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

408 
size_t
 
__˝u£tsize
,

409 c⁄° 
˝u_£t_t
 *
__˝u£t
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

415 
size_t
 
__˝u£tsize
,

416 
˝u_£t_t
 *
__˝u£t
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

420 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1));

425 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1));

431 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

441 c⁄° 
sched_∑øm
 *
__∑øm
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3));

445 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

446 *
__ª°ri˘
 
__pﬁicy
,

447 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

451 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

452 
__THROW
;

455 #ifde‡
__USE_GNU


457 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

458 
size_t
 
__buÊí
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2));

462 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

463 
__THROW
 
	`__n⁄nuŒ
 ((2));

467 #ifde‡
__USE_UNIX98


469 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

472 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

475 #ifde‡
__USE_GNU


480 
	$±hªad_yõld
 (Ë
__THROW
;

485 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

486 c⁄° 
˝u_£t_t
 *
__˝u£t
)

487 
__THROW
 
	`__n⁄nuŒ
 ((3));

490 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

491 
˝u_£t_t
 *
__˝u£t
)

492 
__THROW
 
	`__n⁄nuŒ
 ((3));

505 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

506 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

517 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

521 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

524 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

529 
	`±hªad_ã°ˇn˚l
 ();

538 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

539 
__mask_was_ßved
;

540 } 
__ˇn˚l_jmp_buf
[1];

541 *
__∑d
[4];

542 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

545 #i‚de‡
__˛ónup_f˘_©åibuã


546 
	#__˛ónup_f˘_©åibuã


	)

551 
	s__±hªad_˛ónup_‰ame


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

559 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


560 #ifde‡
__˝lu•lus


562 ˛as†
	c__±hªad_˛ónup_˛ass


564 (*
__ˇn˚l_routöe
) (*);

565 *
__ˇn˚l_¨g
;

566 
__do_ô
;

567 
__ˇn˚l_ty≥
;

569 
public
:

570 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

571 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

572 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

573 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

574 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

575 &
__ˇn˚l_ty≥
); 
	}
}

576 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

586 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

588 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

592 
	#±hªad_˛ónup_p›
(
execuã
) \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

596 #ifde‡
__USE_GNU


600 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

602 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

603 
__˛‰ame
.
	`__de„r
 ()

	)

608 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

609 
__˛‰ame
.
	`__ª°‹e
 (); \

610 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

611 } 0)

	)

618 
__exã∫_ölöe
 

619 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

621 i‡(
__‰ame
->
__do_ô
)

622 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

623 
	}
}

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 };

	)

641 
	#±hªad_˛ónup_p›
(
execuã
) \

642 
__˛‰ame
.
__do_ô
 = (
execuã
); \

643 } 0)

	)

645 #ifde‡
__USE_GNU


649 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

651 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

652 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

653 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

654 .
__do_ô
 = 1 }; \

655 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

656 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

661 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

662 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

663 
__˛‰ame
.
__do_ô
 = (
execuã
); \

664 } 0)

	)

675 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

696 
	#±hªad_˛ónup_p›
(
execuã
) \

699 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

700 i‡(
execuã
) \

701 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

702 } 0)

	)

703 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
;

706 #ifde‡
__USE_GNU


710 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

712 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

713 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

714 *
__ˇn˚l_¨g
 = (
¨g
); \

715 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

716 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

717 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

719 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

720 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

724 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

725 dÿ{

	)

726 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

727 
__˛ónup_f˘_©åibuã
;

732 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

735 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

736 i‡(
execuã
) \

737 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

738 
	}
} 0)

	)

739 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

740 
__˛ónup_f˘_©åibuã
;

744 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

745 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

746 #i‚de‡
SHARED


747 
	`__©åibuã__
 ((
__wók__
))

753 
__jmp_buf_èg
;

754 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

760 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

761 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

765 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

776 #ifde‡
__USE_XOPEN2K


778 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

779 c⁄° 
time•ec
 *
__ª°ri˘


780 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

790 
__ª°ri˘
 
__muãx
,

791 *
__ª°ri˘
 
__¥io˚ûög
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

797 
__¥io˚ûög
,

798 *
__ª°ri˘
 
__ﬁd_˚ûög
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

802 #ifde‡
__USE_XOPEN2K8


804 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_GNU


807 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__psh¨ed
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__psh¨ed
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

835 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


837 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


838 
__©å
, *
__ª°ri˘
 
__köd
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

844 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

845 
__THROW
 
	`__n⁄nuŒ
 ((1));

849 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

850 
__ª°ri˘
 
__©å
,

851 *
__ª°ri˘
 
__¥Ÿocﬁ
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥Ÿocﬁ
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

862 
__ª°ri˘
 
__©å
,

863 *
__ª°ri˘
 
__¥io˚ûög
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__¥io˚ûög
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

871 #ifde‡
__USE_XOPEN2K


873 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

874 *
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

878 *
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

883 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

884 
__robu°√ss
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_GNU


887 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

888 
__robu°√ss
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


899 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

900 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


901 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

904 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1));

908 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

909 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

912 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

915 #ifde‡
__USE_XOPEN2K


917 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 c⁄° 
time•ec
 *
__ª°ri˘


919 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

923 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

924 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

930 #ifde‡
__USE_XOPEN2K


932 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

933 c⁄° 
time•ec
 *
__ª°ri˘


934 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

938 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

939 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

945 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__psh¨ed
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__psh¨ed
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

965 
__ª°ri˘
 
__©å
,

966 *
__ª°ri˘
 
__¥ef
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

970 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

971 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

980 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

981 
__THROW
 
	`__n⁄nuŒ
 ((1));

984 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

989 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

993 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1002 
	`__n⁄nuŒ
 ((1, 2));

1011 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1012 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 3));

1019 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 *
__ª°ri˘
 
__psh¨ed
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1039 
__ª°ri˘
 
__©å
,

1040 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1044 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1045 
__˛ockid_t
 
__˛ock_id
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 #ifde‡
__USE_XOPEN2K


1055 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1064 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1068 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1080 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1081 
__©å
, 
__cou¡
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1090 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1094 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1));

1098 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1103 
__ª°ri˘
 
__©å
,

1104 *
__ª°ri˘
 
__psh¨ed
)

1105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1108 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1109 
__psh¨ed
)

1110 
__THROW
 
	`__n⁄nuŒ
 ((1));

1122 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1123 (*
__de°r_fun˘i⁄
) (*))

1124 
__THROW
 
	`__n⁄nuŒ
 ((1));

1127 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1130 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1133 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1134 c⁄° *
__poöãr
Ë
__THROW
 ;

1137 #ifde‡
__USE_XOPEN2K


1139 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1140 
__˛ockid_t
 *
__˛ock_id
)

1141 
__THROW
 
	`__n⁄nuŒ
 ((2));

1156 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1157 (*
__∑ª¡
) (),

1158 (*
__chûd
Ë()Ë
__THROW
;

1161 #ifde‡
__USE_EXTERN_INLINES


1163 
__exã∫_ölöe
 

1164 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1166  
__thªad1
 =
__thªad2
;

1167 
	}
}

1170 
	g__END_DECLS


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	#__√ed_time_t


	)

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

41 
	~<bôs/sched.h
>

43 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

46 
__BEGIN_DECLS


49 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

50 
__THROW
;

53 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

56 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

57 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

60 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

63 
	$sched_yõld
 (Ë
__THROW
;

66 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

69 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

72 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

75 #ifde‡
__USE_GNU


77 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

78 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

81 
˝u£ç
)

	)

82 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

83 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

86 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

88 
˝u£ç
)

	)

89 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

90 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

93 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

94 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

97 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

103 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

105 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

107 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

110 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

111 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

112 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

116 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

117 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

120 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

121 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

124 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
186
5856
Heap-Layers/examples/kingsley/libkingsley.cpp
Heap-Layers/heaplayers.h
Heap-Layers/heaps/all.h
Heap-Layers/heaps/buildingblock/adaptheap.h
Heap-Layers/heaps/buildingblock/all.h
Heap-Layers/heaps/buildingblock/boundedfreelistheap.h
Heap-Layers/heaps/buildingblock/chunkheap.h
Heap-Layers/heaps/buildingblock/coalesceheap.h
Heap-Layers/heaps/buildingblock/freelistheap.h
Heap-Layers/heaps/combining/all.h
Heap-Layers/heaps/combining/hybridheap.h
Heap-Layers/heaps/combining/segheap.h
Heap-Layers/heaps/combining/strictsegheap.h
Heap-Layers/heaps/combining/tryheap.h
Heap-Layers/heaps/debug/all.h
Heap-Layers/heaps/debug/checkheap.h
Heap-Layers/heaps/debug/debugheap.h
Heap-Layers/heaps/debug/logheap.h
Heap-Layers/heaps/debug/sanitycheckheap.h
Heap-Layers/heaps/debug/statsheap.h
Heap-Layers/heaps/general/all.h
Heap-Layers/heaps/general/dlheap.h
Heap-Layers/heaps/general/kingsleyheap.h
Heap-Layers/heaps/general/leamallocheap.h
Heap-Layers/heaps/general/oldkingsleyheap.h
Heap-Layers/heaps/objectrep/addheap.h
Heap-Layers/heaps/objectrep/all.h
Heap-Layers/heaps/objectrep/coalesceableheap.h
Heap-Layers/heaps/objectrep/sizeheap.h
Heap-Layers/heaps/objectrep/sizeownerheap.h
Heap-Layers/heaps/special/all.h
Heap-Layers/heaps/special/bumpalloc.h
Heap-Layers/heaps/special/nestedheap.h
Heap-Layers/heaps/special/obstack.h
Heap-Layers/heaps/special/obstackheap.h
Heap-Layers/heaps/special/obstackreap.h
Heap-Layers/heaps/special/sbrk.c
Heap-Layers/heaps/special/xallocheap.h
Heap-Layers/heaps/special/zoneheap.h
Heap-Layers/heaps/threads/all.h
Heap-Layers/heaps/threads/lockedheap.h
Heap-Layers/heaps/threads/phothreadheap.h
Heap-Layers/heaps/threads/sizethreadheap.h
Heap-Layers/heaps/threads/threadheap.h
Heap-Layers/heaps/threads/threadspecificheap.h
Heap-Layers/heaps/top/all.h
Heap-Layers/heaps/top/mallocheap.h
Heap-Layers/heaps/top/mmapheap.h
Heap-Layers/heaps/top/staticheap.h
Heap-Layers/heaps/utility/all.h
Heap-Layers/heaps/utility/exactlyoneheap.h
Heap-Layers/heaps/utility/exceptionheap.h
Heap-Layers/heaps/utility/localmallocheap.h
Heap-Layers/heaps/utility/nullheap.h
Heap-Layers/heaps/utility/old/oneheap.h
Heap-Layers/heaps/utility/oneheap.h
Heap-Layers/heaps/utility/perclassheap.h
Heap-Layers/heaps/utility/profileheap.h
Heap-Layers/heaps/utility/slopheap.h
Heap-Layers/heaps/utility/traceheap.h
Heap-Layers/heaps/utility/uniqueheap.h
Heap-Layers/locks/all.h
Heap-Layers/locks/maclock.h
Heap-Layers/locks/oldspinlock.h
Heap-Layers/locks/posixlock.h
Heap-Layers/locks/recursivelock.h
Heap-Layers/locks/spinlock-old.h
Heap-Layers/locks/spinlock.h
Heap-Layers/locks/winlock.h
Heap-Layers/threads/all.h
Heap-Layers/threads/cpuinfo.cpp
Heap-Layers/threads/cpuinfo.h
Heap-Layers/threads/fred.h
Heap-Layers/utility/align.h
Heap-Layers/utility/all.h
Heap-Layers/utility/bins.h
Heap-Layers/utility/bins16k.h
Heap-Layers/utility/bins4k.h
Heap-Layers/utility/bins64k.h
Heap-Layers/utility/bins8k.h
Heap-Layers/utility/checkpoweroftwo.h
Heap-Layers/utility/dllist.h
Heap-Layers/utility/dynarray.h
Heap-Layers/utility/exactlyone.h
Heap-Layers/utility/freesllist.h
Heap-Layers/utility/gcd.h
Heap-Layers/utility/guard.h
Heap-Layers/utility/hash.h
Heap-Layers/utility/ilog2.cpp
Heap-Layers/utility/ilog2.h
Heap-Layers/utility/istrue.h
Heap-Layers/utility/lcm.h
Heap-Layers/utility/modulo.h
Heap-Layers/utility/myhashmap.h
Heap-Layers/utility/sassert.h
Heap-Layers/utility/singleton.h
Heap-Layers/utility/sllist.h
Heap-Layers/utility/testalign.cpp
Heap-Layers/utility/timer-old.h
Heap-Layers/utility/timer.h
Heap-Layers/wrappers/all.h
Heap-Layers/wrappers/ansiwrapper.h
Heap-Layers/wrappers/gnuwrapper-hooks.cpp
Heap-Layers/wrappers/gnuwrapper.cpp
Heap-Layers/wrappers/macinterpose.h
Heap-Layers/wrappers/macwrapper.cpp
Heap-Layers/wrappers/mallocinfo.h
Heap-Layers/wrappers/mmapwrapper.h
Heap-Layers/wrappers/stlallocator.h
Heap-Layers/wrappers/winwrapper.cpp
Heap-Layers/wrappers/wrapper.cpp
Heap-Layers/wrappers/x86jump.h
include/VERSION.h
include/hoard/basehoardmanager.h
include/hoard/debugprint.h
include/hoard/emptyclass.h
include/hoard/emptyhoardmanager.h
include/hoard/geometricsizeclass.cpp
include/hoard/geometricsizeclass.h
include/hoard/globalheap.h
include/hoard/heapmanager.h
include/hoard/hoardconstants.h
include/hoard/hoardheap.h
include/hoard/hoardmanager.h
include/hoard/hoardsuperblock.h
include/hoard/hoardsuperblockheader.h
include/hoard/hoardtlab.h
include/hoard/processheap.h
include/hoard/redirectfree.h
include/hoard/statistics.h
include/hoard/thresholdheap.h
include/hoard/thresholdsegheap.h
include/superblocks/addheaderheap.h
include/superblocks/alignedsuperblockheap.h
include/superblocks/ignoreinvalidfree.h
include/superblocks/manageonesuperblock.h
include/superblocks/tlab.h
include/util/alignedmmap.h
include/util/array.h
include/util/bumpalloc.h
include/util/check.h
include/util/checkpoweroftwo.h
include/util/conformantheap.h
include/util/dynamichashtable.cpp
include/util/dynamichashtable.h
include/util/exactlyone.h
include/util/exactlyoneheap.h
include/util/fixedrequestheap.h
include/util/lockmallocheap.h
include/util/mmapalloc.h
include/util/releaseheap.h
include/util/threadpoolheap.h
source/libhoard.cpp
source/mactls.cpp
source/unixtls.cpp
source/uselibhoard.cpp
source/wintls.cpp
test/mtest.cpp
test/testoverflow.cpp
/usr/include/assert.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/limits.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/pthread.h
/usr/include/sched.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
